
{{DEVELOPMENT}} --------(((DEBUGINFO)))--------{{DEVELOPMENT}} 

 DRIVER SYMBOLS (alphabet order)
-------------------------------
Abstract=Common\ColdFirePlusAbstract.inc
AfterResetPriority=1
CommonISRForUnhandledInterrupts=
DefaultISRName=Cpu_Interrupt
DefaultRSTName=(tIsrFunc)_startup
DefaultSPValue=__SP_INIT
Description_GetCurrentMCGMode=This method returns the active MCG mode
Description_Interrupt=The method services unhandled interrupt vectors.
Description_PE_low_level_init=Initializes beans and provides common register initialization. The method is called automatically as a part of the application initialization code.
Description_SetBASEPRI=This method sets the BASEPRI core register.
Description_SetMCG=This method updates the MCG according the requested clock source setting.
Description_SetMCGModeBLPE=This method sets the MCG to BLPE mode.
Description_SetMCGModeBLPI=This method sets the MCG to BLPI mode.
Description_SetMCGModeFBE=This method sets the MCG to FBE mode.
Description_SetMCGModeFBI=This method sets the MCG to FBI mode.
Description_SetMCGModeFEE=This method sets the MCG to FEE mode.
Description_SetMCGModeFEI=This method sets the MCG to FEI mode.
Description_SetMCGModePBE=This method sets the MCG to PBE mode.
Description_SetMCGModePEE=This method sets the MCG to PEE mode.
Description_Vaccerr=The method services the Access Error Exception vector.
Description_Vadderr=The method services the Address Error Exception vector.
Description_Vferror=The method services the RTE Format Error Exception vector.
Description_Viinstr=The method services the Illegal Instruction Exception vector.
Description_Vprviol=The method services the Privilege Violation Exception vector.
Description_Vtrap0=The method services the TRAP 0 Exception vector.
Description_Vtrap1=The method services the TRAP 1 Exception vector.
Description_Vtrap10=The method services the TRAP 10 Exception vector.
Description_Vtrap11=The method services the TRAP 11 Exception vector.
Description_Vtrap12=The method services the TRAP 12 Exception vector.
Description_Vtrap13=The method services the TRAP 13 Exception vector.
Description_Vtrap14=The method services the TRAP 14 Exception vector.
Description_Vtrap15=The method services the TRAP 15 Exception vector.
Description_Vtrap2=The method services the TRAP 2 Exception vector.
Description_Vtrap3=The method services the TRAP 3 Exception vector.
Description_Vtrap4=The method services the TRAP 4 Exception vector.
Description_Vtrap5=The method services the TRAP 5 Exception vector.
Description_Vtrap6=The method services the TRAP 6 Exception vector.
Description_Vtrap7=The method services the TRAP 7 Exception vector.
Description_Vtrap8=The method services the TRAP 8 Exception vector.
Description_Vtrap9=The method services the TRAP 9 Exception vector.
Description_Vunilaop=The method services the Unimplemented Line-A Opcode Exception vector.
Description_Vunilfop=The method services the Unimplemented Line-F Opcode Exception vector.
Description_Vunsinstr=The method services the Unsupported Instruction Exception vector.
Description___initialize_hardware=Initializes the whole system like timing, external bus, etc.
Doc_Misra_Rule_1=1.1
Doc_Misra_Rule_10=8.10
Doc_Misra_Rule_10_Description=All declarations and definitions of objects or function at file scope shall have internal linkage unless external linkage is required.
Doc_Misra_Rule_10_Lint=Info 765: external 'function' could be made static [MISRA 2004 Rule 8.10]
Doc_Misra_Rule_10_Reason=Device Initialization - ISR declaration is subject of various modifications by the user and may or may not be copied to another module - static is not used.
Doc_Misra_Rule_10_Type=Required
Doc_Misra_Rule_11=10.1
Doc_Misra_Rule_11_Description=The value of an expression of integer type shall not be implicitly converted to a different underlying type.
Doc_Misra_Rule_11_Lint=Note 960: Violates MISRA 2004 Required Rule 10.1, Implicit conversion of integer to smaller type
Doc_Misra_Rule_11_Reason=
Doc_Misra_Rule_11_Type=Required
Doc_Misra_Rule_12=11.3
Doc_Misra_Rule_12_Description=A cast should not be performed between a pointer type and an integral type.
Doc_Misra_Rule_12_Lint=Note 923: cast from 'integer type' to pointer [Encompasses MISRA 2004 Rules 11.1 and 11.3], [MISRA 2004 Rule 11.3]
Doc_Misra_Rule_12_Reason=IO map is based on structures and typecasting from a peripheral base address (integer constant) to a pointer type is used to get a pointer to the given peripheral structure used to access a peripheral registers.
Doc_Misra_Rule_12_Type=Advisory
Doc_Misra_Rule_13=11.4
Doc_Misra_Rule_13_Description=A cast should be not be performed between a pointer to object type and different pointer to object type
Doc_Misra_Rule_13_Lint=Note 929: cast from pointer to pointer [MISRA 2004 Rule 11.4]
Doc_Misra_Rule_13_Reason=See detailed description for particular component
Doc_Misra_Rule_13_Type=Advisory
Doc_Misra_Rule_14=12.1
Doc_Misra_Rule_14_Description=Limited dependence should be placed on C's operator precedence rules in expressions.
Doc_Misra_Rule_14_Lint=Note 961: Violates MISRA 2004 Advisory Rule 12.1, dependence placed on C's operator precedence; operators: ',' and ','
Doc_Misra_Rule_14_Reason=
Doc_Misra_Rule_14_Type=Advisory
Doc_Misra_Rule_15=12.8
Doc_Misra_Rule_15_Description=The right-hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left-hand operand.
Doc_Misra_Rule_15_Lint=Warning 572: Excessive shift value (precision 2 shifted right by 8) [MISRA 2004 Rule 12.8]
Doc_Misra_Rule_15_Reason=
Doc_Misra_Rule_15_Type=Required
Doc_Misra_Rule_16=12.10
Doc_Misra_Rule_16_Description=The comma operator shall not be used.
Doc_Misra_Rule_16_Lint=Note 960: Violates MISRA 2004 Required Rule 12.10, comma operator used
Doc_Misra_Rule_16_Reason=Comma operator is used in PDD macros.
Doc_Misra_Rule_16_Type=Required
Doc_Misra_Rule_17=12.11
Doc_Misra_Rule_17_Description=Evaluation of constant unsigned integer expressions should not lead to wrap-around.
Doc_Misra_Rule_17_Lint=Warning 648: Overflow in computing constant for operation: 'unsigned shift left' [MISRA 2004 Rule 12.11]
Doc_Misra_Rule_17_Reason=
Doc_Misra_Rule_17_Type=Advisory
Doc_Misra_Rule_18=13.7
Doc_Misra_Rule_18_Description=Boolean operations whose results are invariant shall not be permitted.
Doc_Misra_Rule_18_Lint=Warning 506: Constant value Boolean [MISRA 2004 Rules 13.7 and 14.1]
Doc_Misra_Rule_18_Reason=PDD macros define constants that can be passed as parameters to these macros.
Doc_Misra_Rule_18_Type=Required
Doc_Misra_Rule_19=14.2
Doc_Misra_Rule_19_Description=All non-null statements shall either: <br/>a) have at least one side effect however executed, <br/>or b) cause control flow to change.
Doc_Misra_Rule_19_Lint=Warning 522: Highest operation, operator ',', lacks side-effects
Doc_Misra_Rule_19_Reason=Some PDD macros have two commas in the macro implementation.
Doc_Misra_Rule_19_Type=Required
Doc_Misra_Rule_1_Description=All code shall conform to ISO 9899-1990 (C-code guideline)
Doc_Misra_Rule_1_Lint=Note 950: Non-ANSI reserved word or construct [MISRA 2004 Rules 1.1 and 2.2]
Doc_Misra_Rule_1_Reason=Non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt, CONVERT_TO_PAGED (RS08 only).
Doc_Misra_Rule_1_Type=Required
Doc_Misra_Rule_2=1.4
Doc_Misra_Rule_20=14.7
Doc_Misra_Rule_20_Description=A function shall have a single point of exit at the end of the function.
Doc_Misra_Rule_20_Lint=Note 904: Return statement before end of function [MISRA 2004 Rule 14.7]
Doc_Misra_Rule_20_Reason=Use of multiple return statements simplifies the code logic.
Doc_Misra_Rule_20_Type=Required
Doc_Misra_Rule_21=18.4
Doc_Misra_Rule_21_Description=Unions shall not be used.
Doc_Misra_Rule_21_Lint=Note 960: Violates MISRA 2004 Required Rule 18.4, unions shall not be used
Doc_Misra_Rule_21_Reason=Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.
Doc_Misra_Rule_21_Type=Required
Doc_Misra_Rule_22=19.13
Doc_Misra_Rule_22_Description=The # and ## preprocessor operators should not be used.
Doc_Misra_Rule_22_Lint=Note 961: Violates MISRA 2004 Advisory Rule 19.13, '#/##' operator used
Doc_Misra_Rule_22_Reason=Preprocessor operators are used to convert bit name to bit mask in macros for accessing peripheral registers.
Doc_Misra_Rule_22_Type=Advisory
Doc_Misra_Rule_2_Description=The compiler/linker shall be checked to ensure that 31 character significance and case sensitivity are supported for external identifiers.
Doc_Misra_Rule_2_Lint=Note Warning 621: Identifier clash [MISRA 2004 Rules 1.2, 1.4 and 5.1]
Doc_Misra_Rule_2_Reason=IO map defines register access constants. The constants' names contain peripheral name, register name, bit name and suffix _MASK/_SHIFT.
Doc_Misra_Rule_2_Type=Required
Doc_Misra_Rule_3=2.1
Doc_Misra_Rule_3_Description=Assembly language shall be encapsulated and isolated.
Doc_Misra_Rule_3_Lint=Note 950: Non-ANSI reserved word or construct [MISRA 2004 Rules 1.1 and 2.2]
Doc_Misra_Rule_3_Reason=Non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt, CONVERT_TO_PAGED (RS08 only).
Doc_Misra_Rule_3_Type=Required
Doc_Misra_Rule_4=3.1
Doc_Misra_Rule_4_Description=All usage of implementation-defined behavior shall be documented.
Doc_Misra_Rule_4_Lint=MISRA Compliancy Review (part of formal technical review)
Doc_Misra_Rule_4_Reason=Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:
Doc_Misra_Rule_4_Type=Required
Doc_Misra_Rule_5=3.2
Doc_Misra_Rule_5_Description=The character set and the corresponding encoding shall be documented.
Doc_Misra_Rule_5_Lint=MISRA Compliancy Review (part of formal technical review)
Doc_Misra_Rule_5_Reason=Basic character set (see ISO 9899) is used in execution character set. Execution character set uses ASCII encoding (possible codes 0-255). Exception to basic character set: Term component uses NULL(0x00), CR (0x0D), LF(0x0A).
Doc_Misra_Rule_5_Type=Required
Doc_Misra_Rule_6=3.3
Doc_Misra_Rule_6_Description=The implementation of integer division in the chosen compiler should be determined, documented and taken into account.
Doc_Misra_Rule_6_Lint=MISRA Compliancy Review (part of formal technical review)
Doc_Misra_Rule_6_Reason=The way a Compiler implements division and modulo for negative operands is determined by the hardware implementation of the target's division instructions. See documentation of CodeWarrior S12(X) Build tools for more information.
Doc_Misra_Rule_6_Type=Advisory
Doc_Misra_Rule_7=3.4
Doc_Misra_Rule_7_Description=All uses of the #pragma directives shall be documented and explained.
Doc_Misra_Rule_7_Lint=MISRA Compliancy Review (part of formal technical review)
Doc_Misra_Rule_7_Reason=Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.
Doc_Misra_Rule_7_Type=Required
Doc_Misra_Rule_8=3.6
Doc_Misra_Rule_8_Description=All libraries used in production code shall be written to comply with the provision of this document and shall have been subject to appropriate validation.
Doc_Misra_Rule_8_Lint=MISRA Compliancy Review (part of formal technical review)
Doc_Misra_Rule_8_Reason=Only libraries included in CodeWarrior development studio are used in the generated source code.
Doc_Misra_Rule_8_Type=Required
Doc_Misra_Rule_9=6.3
Doc_Misra_Rule_9_Description=Typedef that indicates size and signedness should be used in place of basic types.
Doc_Misra_Rule_9_Lint=Info 970: Use of modifier or type 'int' outside of a typedef [MISRA Rule 6.3]
Doc_Misra_Rule_9_Reason=The type of the function is defined by tool set. ProcessorExpert definition must comply..
Doc_Misra_Rule_9_Type=Advisory
DriverAuthor=Petr Cach
DriverDate=05.02.2010
DriverVersion=01.02
EndOfInterface=
EventCount=10
InpStringCopy=e
IntVectNameStr=ivVportfe       
IntVectorNameMaxLength=16
Location_x=Cpu
MCG_WatchDogState=
MethodCount=10
NameStr=Name            
OSC_CR_val=128
Port=B
RTOSAdap_defParam_componentInstanceName=Cpu
SIM_CLKDIV0_val=0
SIM_CLKDIV1_val=49
Settings=Common\ColdFirePlusSettings.inc
SpeedModeIndex1=1
halIntName=LDD_ivIndex_Vportfe
ivVreset=(tIsrFunc)_startup
loc_tmpChar=e
maxFLLREFCLK=0.0390625
maxPLLCLK=96
maxPLLREFCLK=4
minFLLREFCLK=0.03125
minPLLCLK=48
minPLLREFCLK=2
targetMCGMode=FEI
tmpCol=3
tmpName=OnLLSWakeUpINT
tmp_OutString=Generated_Code
CLKModesUsed=[0]
Doc_Misra_Rule_10_Location=[Cpu|Vectors.c|Cpu|Vectors.c|Cpu|Vectors.c|Cpu|Vectors.c|Cpu|Vectors.c|Cpu|Vectors.c|Cpu|Vectors.c|Cpu|Vectors.c]
Doc_Misra_Rule_11_Location=[PE_Types.h|SDHC_LDD|PE_Types.h|SDHC_LDD|PE_Types.h|SDHC_LDD|PE_Types.h|SDHC_LDD|PE_Types.h|SDHC_LDD|PE_Types.h|SDHC_LDD|PE_Types.h|SDHC_LDD|PE_Types.h|SDHC_LDD]
Doc_Misra_Rule_11_Location_Reason=[Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.|Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.|Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.|Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.|Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.|Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.|Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.|Call of the library function __set_FAULTMASK(). The code violates this rule for IAR compiler only.|Cannot shift by a value resulting from a complex expression.]
Doc_Misra_Rule_12_Location=[IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h]
Doc_Misra_Rule_13_Location=[Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD|Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD|Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD|Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD|Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD|Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD|Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD|Vectors.c|Serial_LDD|SPIMaster_LDD|SPISlave_LDD|SSI_LDD|USB_LDD]
Doc_Misra_Rule_13_Location_Reason=[Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.|Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.|Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.|Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.|Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.|Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.|Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.|Need to explicitly cast pointers to the general ISR for Interrupt vector table|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointer to void type and pointer to uint8_t/uint16_t type is used in ISR (transmitting/receiving characters).|Conversion between pointers is used in StartTransaction, HostQueueTransfer and Init methods.]
Doc_Misra_Rule_14_Location=[SDHC_LDD|Ethernet_LDD|SDHC_LDD|Ethernet_LDD|SDHC_LDD|Ethernet_LDD|SDHC_LDD|Ethernet_LDD|SDHC_LDD|Ethernet_LDD|SDHC_LDD|Ethernet_LDD|SDHC_LDD|Ethernet_LDD|SDHC_LDD|Ethernet_LDD]
Doc_Misra_Rule_14_Location_Reason=[Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.|Comma operator separates expressions in PDD macros.]
Doc_Misra_Rule_15_Location=[Ethernet_LDD|TimerUnit_LDD|Serial_LDD|Ethernet_LDD|TimerUnit_LDD|Serial_LDD|Ethernet_LDD|TimerUnit_LDD|Serial_LDD|Ethernet_LDD|TimerUnit_LDD|Serial_LDD|Ethernet_LDD|TimerUnit_LDD|Serial_LDD|Ethernet_LDD|TimerUnit_LDD|Serial_LDD|Ethernet_LDD|TimerUnit_LDD|Serial_LDD|Ethernet_LDD|TimerUnit_LDD|Serial_LDD]
Doc_Misra_Rule_15_Location_Reason=[Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.|Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.|Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.|Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.|Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.|Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.|Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.|Macro for endianness conversion cannot be used on constants.|One of predefined constants for macro LPTMR_PDD_SetDivider has value 1.|PDD macros use shift operations that can cause MISRA violations when a constant with value less than 256 is passed as an argument.]
Doc_Misra_Rule_16_Location=[Global|Global|Global|Global|Global|Global|Global|Global]
Doc_Misra_Rule_17_Location=[Ethernet_LDD|Ethernet_LDD|Ethernet_LDD|Ethernet_LDD|Ethernet_LDD|Ethernet_LDD|Ethernet_LDD|Ethernet_LDD]
Doc_Misra_Rule_17_Location_Reason=[Macro for endianness conversion cannot be used on constants.|Macro for endianness conversion cannot be used on constants.|Macro for endianness conversion cannot be used on constants.|Macro for endianness conversion cannot be used on constants.|Macro for endianness conversion cannot be used on constants.|Macro for endianness conversion cannot be used on constants.|Macro for endianness conversion cannot be used on constants.|Macro for endianness conversion cannot be used on constants.]
Doc_Misra_Rule_18_Location=[Global|Global|Global|Global|Global|Global|Global|Global]
Doc_Misra_Rule_19_Location=[Global|Global|Global|Global|Global|Global|Global|Global]
Doc_Misra_Rule_1_Location=[PE_Types.h|Cpu|Vectors.c|FLASH_LDD|PE_Types.h|Cpu|Vectors.c|FLASH_LDD|PE_Types.h|Cpu|Vectors.c|FLASH_LDD|PE_Types.h|Cpu|Vectors.c|FLASH_LDD|PE_Types.h|Cpu|Vectors.c|FLASH_LDD|PE_Types.h|Cpu|Vectors.c|FLASH_LDD|PE_Types.h|Cpu|Vectors.c|FLASH_LDD|PE_Types.h|Cpu|Vectors.c|FLASH_LDD]
Doc_Misra_Rule_1_Location_Reason=[The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.]
Doc_Misra_Rule_20_Location=[Global|Global|Global|Global|Global|Global|Global|Global]
Doc_Misra_Rule_21_Location=[Global|IO_Map.h|Global|IO_Map.h|Global|IO_Map.h|Global|IO_Map.h|Global|IO_Map.h|Global|IO_Map.h|Global|IO_Map.h|Global|IO_Map.h]
Doc_Misra_Rule_21_Location_Reason=[Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to efficiently swap bytes in a 16-bit word or 32-bit long word, to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.|Unions are used to allow access to single memory location using multiple register names, or to allow simultaneous 32-bit, 16-bit or 8-bit access to single memory location.]
Doc_Misra_Rule_22_Location=[PE_Types.h|PE_Types.h|PE_Types.h|PE_Types.h|PE_Types.h|PE_Types.h|PE_Types.h|PE_Types.h]
Doc_Misra_Rule_22_Location_Reason=[Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.]
Doc_Misra_Rule_2_Location=[IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h|IO_Map.h]
Doc_Misra_Rule_3_Location=[PE_Types.h|Cpu|Vectors.c|PE_Types.h|Cpu|Vectors.c|PE_Types.h|Cpu|Vectors.c|PE_Types.h|Cpu|Vectors.c|PE_Types.h|Cpu|Vectors.c|PE_Types.h|Cpu|Vectors.c|PE_Types.h|Cpu|Vectors.c|PE_Types.h|Cpu|Vectors.c]
Doc_Misra_Rule_3_Location_Reason=[The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The file contains ASM language, but it is isolated in C macros.|The file contains ASM language, but it is isolated in C macros.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.]
Doc_Misra_Rule_4_Location=[PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info]
Doc_Misra_Rule_4_Location_Reason=[Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.|Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.|Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.|Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.|Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.|Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.|Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.|Follows the list of implementation dependent behavior used in Processor Expert. See documentation of CodeWarrior MCU Build tools for more information on topics not specified below:|Program overloads void __init_hardware(void) function from the standard startup to provide initialization of clocks and external bus early after reset, see <a href="ResetScenario.html">Reset Scenario</a>.|Program is finished at the end of main function in the infinite loop.|Execution character set and corresponding values are documented in rule 3.2 in this table.|Volatile declarations are used to access peripheral registers (memory mapped).|Pragma directives are used and commented in the source code. See also documented rule 3.4 in this table.]
Doc_Misra_Rule_5_Location=[PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info]
Doc_Misra_Rule_6_Location=[PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info]
Doc_Misra_Rule_7_Location=[PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info|PE_Info]
Doc_Misra_Rule_7_Location_Reason=[Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.|Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.|Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.|Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.|Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.|Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.|Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.|Some components use pragma directive to determine the memory segment, where code and/or data will be used (see below). All other uses of #pragma directives are commented in the generated source code.]
Doc_Misra_Rule_8_Location=[CAU_LDD|CAU_LDD|CAU_LDD|CAU_LDD|CAU_LDD|CAU_LDD|CAU_LDD|CAU_LDD]
Doc_Misra_Rule_8_Location_Reason=[CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.|CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.|CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.|CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.|CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.|CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.|CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.|CAU component uses an external CAU library that is not MISRA compliant. CAU component's code itself is MISRA compliant.]
Doc_Misra_Rule_9_Location=[CPU|Main.c|CPU|Main.c|CPU|Main.c|CPU|Main.c|CPU|Main.c|CPU|Main.c|CPU|Main.c|CPU|Main.c]
ExpNames=[IntIllegalInstruction|IntUnimplementedLineA|IntUnimplementedLineF|IntPrivilegeViolation]
ExpSymbols=[ILLEGAL_INSTRUCTION|UNIMPL_LINEA|UNIMPL_LINEF|PRIVILEDGE_VIOL]
FLL_mult_32kHz=[732|1464|2197|2929]
FLL_mult_default=[640|1280|1920|2560]
PortList=[A|B|C|D|E|F]
RTOSAdap_enum_componentTypes=[HAL_UART_Polling|HAL_UART_Int|HAL_I2C_Polling|HAL_I2C_Int|HAL_GPIO|HAL_ADC|HAL_RTC|HAL_Ethernet|HAL_TimerUnit|AsyncSerial_LDD|USB_LDD]
RTOSAdap_enum_defaultParameterNames=[componentType|simpleComponentType|componentInstanceName|genReentrantMethods|genCriticalSectionMethods|constantDeclarationsThread|allocatedDevice|allocatedDeviceBaseAddr|SPIN_LOCK]
RTOSAdap_enum_simpleComponentTypes=[HAL_UART|HAL_I2C|HAL_GPIO|HAL_ADC|HAL_RTC|HAL_Ethernet|HAL_TimerUnit|AsyncSerial_LDD|USB_LDD]
VectorAddress=[0x00000000|0x00000004|0x00000008|0x0000000C|0x00000010|0x00000014|0x00000018|0x0000001C|0x00000020|0x00000024|0x00000028|0x0000002C|0x00000030|0x00000034|0x00000038|0x0000003C|0x00000040|0x00000044|0x00000048|0x0000004C|0x00000050|0x00000054|0x00000058|0x0000005C|0x00000060|0x00000064|0x00000068|0x0000006C|0x00000070|0x00000074|0x00000078|0x0000007C|0x00000080|0x00000084|0x00000088|0x0000008C|0x00000090|0x00000094|0x00000098|0x0000009C|0x000000A0|0x000000A4|0x000000A8|0x000000AC|0x000000B0|0x000000B4|0x000000B8|0x000000BC|0x000000C0|0x000000C4|0x000000C8|0x000000CC|0x000000D0|0x000000D4|0x000000D8|0x000000DC|0x000000E0|0x000000E4|0x000000E8|0x000000EC|0x000000F0|0x000000F4|0x000000F8|0x000000FC|0x00000100|0x00000104|0x00000108|0x0000010C|0x00000110|0x00000114|0x00000118|0x0000011C|0x00000120|0x00000124|0x00000128|0x0000012C|0x00000130|0x00000134|0x00000138|0x0000013C|0x00000140|0x00000144|0x00000148|0x0000014C|0x00000150|0x00000154|0x00000158|0x0000015C|0x00000160|0x00000164|0x00000168|0x0000016C|0x00000170|0x00000174|0x00000178|0x0000017C|0x00000180|0x00000184|0x00000188|0x0000018C|0x00000190|0x00000194|0x00000198|0x0000019C|0x000001A0|0x000001A4|0x000001A8|0x000001AC|0x000001B0|0x000001B4|0x000001B8|0x000001BC|0x000001C0|0x000001C4|0x000001C8]
VectorIsrName=[__SP_INIT|(tIsrFunc)_startup|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&USB_LDD_USB_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt|(tIsrFunc)&Cpu_Interrupt]
VectorName=[ivINITSP|ivINITPC|ivVaccerr|ivVadderr|ivViinstr|ivVdiv_by_zero|ivVReserved6|ivVReserved7|ivVprviol|ivVtrace|ivVunilaop|ivVunilfop|ivVdbgi|ivVReserved13|ivVferror|ivVReserved15|ivVReserved16|ivVReserved17|ivVReserved18|ivVReserved19|ivVReserved20|ivVReserved21|ivVReserved22|ivVReserved23|ivVspuri|ivVReserved25|ivVReserved26|ivVReserved27|ivVReserved28|ivVReserved29|ivVReserved30|ivVReserved31|ivVtrap0|ivVtrap1|ivVtrap2|ivVtrap3|ivVtrap4|ivVtrap5|ivVtrap6|ivVtrap7|ivVtrap8|ivVtrap9|ivVtrap10|ivVtrap11|ivVtrap12|ivVtrap13|ivVtrap14|ivVtrap15|ivVReserved48|ivVReserved49|ivVReserved50|ivVReserved51|ivVReserved52|ivVReserved53|ivVReserved54|ivVReserved55|ivVReserved56|ivVReserved57|ivVReserved58|ivVReserved59|ivVReserved60|ivVunsinstr|ivVReserved62|ivVReserved63|ivVirq|ivVlvd|ivVllwu|ivVlol|ivVflash|ivVdmach0|ivVdmach1|ivVdmach2|ivVdmach3|ivVusb0|ivVrngb|ivVftm1fault_ovf|ivVftm1ch0|ivVftm1ch1|ivVftm1ch2|ivVftm1ch3|ivVftm1ch4|ivVftm1ch5|ivVcmp0|ivVftm0fault_ovf|ivVftm0ch0|ivVftm0ch1|ivVspi0|ivVsci0|ivVsai_rx|ivVsai_tx|ivViic0|ivViic2|ivVspi1|ivVsci1|ivViic1|ivViic3|ivVadc0|ivVtsi0|ivVdac0|ivVcmt|ivVpdb0|ivVlptmr0|ivVlptmr1|ivVL7swi|ivVL6swi|ivVL5swi|ivVL4swi|ivVL3swi|ivVL2swi|ivVL1swi|ivVmtim0|ivVusbdcd|ivVportab|ivVportdc|ivVportfe]
VectorNumber=[0x00|0x01|0x02|0x03|0x04|0x05|0x06|0x07|0x08|0x09|0x0A|0x0B|0x0C|0x0D|0x0E|0x0F|0x10|0x11|0x12|0x13|0x14|0x15|0x16|0x17|0x18|0x19|0x1A|0x1B|0x1C|0x1D|0x1E|0x1F|0x20|0x21|0x22|0x23|0x24|0x25|0x26|0x27|0x28|0x29|0x2A|0x2B|0x2C|0x2D|0x2E|0x2F|0x30|0x31|0x32|0x33|0x34|0x35|0x36|0x37|0x38|0x39|0x3A|0x3B|0x3C|0x3D|0x3E|0x3F|0x40|0x41|0x42|0x43|0x44|0x45|0x46|0x47|0x48|0x49|0x4A|0x4B|0x4C|0x4D|0x4E|0x4F|0x50|0x51|0x52|0x53|0x54|0x55|0x56|0x57|0x58|0x59|0x5A|0x5B|0x5C|0x5D|0x5E|0x5F|0x60|0x61|0x62|0x63|0x64|0x65|0x66|0x67|0x68|0x69|0x6A|0x6B|0x6C|0x6D|0x6E|0x6F|0x70|0x71|0x72]
VectorShared=[-|-|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no]
VectorUsed=[used|used|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|used|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused]
revAuth=[RH|PC]
revCmnt_0=[initiali version.]
revCmnt_3=[Support for IAR C compiler for ColdFire has been added.]
revDate=[01.07.2011|01.10.2010]
revLvl=[3|2]
revVer=[01.02|01.01]
revVrf=[PE|RH]
tmpCLKModesUsed=[0]

 LOCAL SYMBOLS (alphabet order)
-------------------------------
ADC0CondGrp=
AddrRelatedReset=Enabled
BDMPin=BKGD/MS/PTB4
BDMPinBitMask=16
BDMPinBitNum=4
BDMPinEnable=yes
BDMPinPinName=BKGD/MS/PTB4
BDMPinPinNumber=45
BDMPinPortAddr=4294934544
BDMPinPortCntrAddr=4294934545
BDMPinPortCntrReg=PTB_DD
BDMPinPortName=PTB
BDMPinPortReg=PTB_D
BDMPinPortSpecDataAddr=4294934544
BDMPinPortSpecDataReg=PTB_D
BDMPinPortSpecDeviceTypeReg=GPIO
BDMPinPortSpecDigitalFilterControlReg=PCTLB_DFC
BDMPinPortSpecDigitalFilterReg=PCTLB_DFE
BDMPinPortSpecDirectionAddr=4294934545
BDMPinPortSpecDirectionReg=PTB_DD
BDMPinPortSpecDriveStrengthReg=PCTLB_DS
BDMPinPortSpecGPIO_BASE_NameReg=PTB_BASE_PTR
BDMPinPortSpecInputDataAddr=4294934546
BDMPinPortSpecInputDataReg=PTB_PV
BDMPinPortSpecIntEdgeReg=PCTLB_IES
BDMPinPortSpecIntEnReg=PCTLB_IPE
BDMPinPortSpecIntFlagReg=PCTLB_IF
BDMPinPortSpecInterruptControlReg=PCTLB_IC
BDMPinPortSpecMin8PinGroupsReg=_0to7
BDMPinPortSpecPERIPHERAL_BASE_ADDRESSAddr=4294934544
BDMPinPortSpecPERIPHERAL_BASE_ADDRESSReg=PERIPHERAL_BASE_ADDRESS
BDMPinPortSpecPE_SPEC_FEATURE_IB_ClockGateCtrl_CommonReg=PE_SPEC_FEATURE_IB_ClockGateCtrl_Common
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter0Reg=PE_SPEC_FEATURE_IB_DigitalFilter0
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter1Reg=PE_SPEC_FEATURE_IB_DigitalFilter1
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter2Reg=PE_SPEC_FEATURE_IB_DigitalFilter2
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter3Reg=PE_SPEC_FEATURE_IB_DigitalFilter3
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter4Reg=PE_SPEC_FEATURE_IB_DigitalFilter4
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter5Reg=PE_SPEC_FEATURE_IB_DigitalFilter5
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter6Reg=PE_SPEC_FEATURE_IB_DigitalFilter6
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter7Reg=PE_SPEC_FEATURE_IB_DigitalFilter7
BDMPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilterWidthReg=PE_SPEC_FEATURE_IB_DigitalFilterWidth
BDMPinPortSpecPE_SPEC_FEATURE_IB_FilterClockSourceReg=PE_SPEC_FEATURE_IB_FilterClockSource
BDMPinPortSpecPE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlusReg=PE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlus
BDMPinPortSpecPE_SPEC_FEATURE_IB_PinMuxing_CommonReg=PE_SPEC_FEATURE_IB_PinMuxing_Common
BDMPinPortSpecPE_SPEC_FEATURE_InterruptDetectionModesReg=_Disabled_Low_High_Rising_Falling
BDMPinPortSpecPE_SPEC_FEATURE_InterruptForcesToInputReg=PE_SPEC_FEATURE_InterruptForcesToInput
BDMPinPortSpecPassiveFilterReg=PCTLB_PFE
BDMPinPortSpecPortControl_BASE_NameReg=PCTLB_BASE_PTR
BDMPinPortSpecPullEnableReg=PCTLB_PUE
BDMPinPortSpecPullSelectReg=PCTLB_PUS
BDMPinPortSpecSlewRateReg=PCTLB_SRE
BDMPinSharedByOther=no
BDMPinSignal=
BDMPinSpecAssignB2Reg=MXC_PTBPF2
BDMPinSpecPortControl_BASE_NameReg=PORTB_BASE_PTR
BDMPinSupportsDirInp=yes
BDMPinSupportsDirOut=yes
BDMPin_Name=BKGD/MS/PTB4
BeanVersion=01.004
BusClockSpeedMode0=23.986176
CLKModeListMaxItem=0
CLKModeListNumItems=1
CLKModeSpeedMode0=0
CPU=MCF51JF128VLH
CPUCR_BWD=Enabled
CPUCR_CBRR=Disabled
CPUCR_FCDIS=Enabled
CPUCR_FDCEN=Disabled
CPUCR_FHP=Disabled
CPUCR_FICDIS=Enabled
CPUCR_FSD=Enabled
CPUCR_HAE=Enabled
CPUCR_IAE=Disabled
CPUCR_IME=Disabled
CPUCondMaxItem=0
CPUCondNumItems=1
CPUDB_CW_MCU_ID=28718
CPUDB_CW_MCU_NAME=MCF51JF128
CPUDB_DataFlashBlockCount=1
CPUDB_DataFlashEraseUnitSize=1024
CPUDB_DataFlashSize=32768
CPUDB_DataFlashStartAddress=2097152
CPUDB_DataFlashWriteUnitSize=4
CPUDB_FlexRamSize=2048
CPUDB_FlexRamStartAddress=2621440
CPUDB_LQFP64=-1
CPUDB_MCF51JF128=-1
CPUDB_PACKAGE=LQFP64
CPUDB_ProgramFlashBlockCount=1
CPUDB_ProgramFlashEraseUnitSize=1024
CPUDB_ProgramFlashSize=131072
CPUDB_ProgramFlashWriteUnitSize=4
CPU_peripheral=CPU
CPU_peripheralCPUCR=-1
CPU_peripheralMCG_C1=4294935552
CPU_peripheralMCG_C2=4294935553
CPU_peripheralMCG_C4=4294935555
CPU_peripheralMCG_C5=4294935556
CPU_peripheralMCG_C6=4294935557
CPU_peripheralName=CPU
CPU_peripheralOSC1_CR=4294934816
CPU_peripheralOSC2_CR=4294934832
CPU_peripheralPMC_LVDSC1=4294934784
CPU_peripheralPMC_LVDSC2=4294934785
CPU_peripheralPMC_REGSC=4294934786
CPU_peripheralSMC_PMPROT=4294934808
CPU_peripheralSharedByOther=no
CPU_peripheralSpecCFV1_INTCReg=CFV1_INTC
CPU_peripheralSpecLLWU_F1Addr=4294934709
CPU_peripheralSpecLLWU_F1Reg=LLWU_F1
CPU_peripheralSpecLLWU_F2Addr=4294934710
CPU_peripheralSpecLLWU_F2Reg=LLWU_F2
CPU_peripheralSpecLLWU_F3Addr=4294934711
CPU_peripheralSpecLLWU_F3Reg=LLWU_F3
CPU_peripheralSpecLLWU_FILT1Addr=4294934712
CPU_peripheralSpecLLWU_FILT1Reg=LLWU_FILT1
CPU_peripheralSpecLLWU_FILT2Addr=4294934713
CPU_peripheralSpecLLWU_FILT2Reg=LLWU_FILT2
CPU_peripheralSpecPE_SPEC_FEATURE_ADC0Reg=PE_SPEC_FEATURE_ADC0
CPU_peripheralSpecPE_SPEC_FEATURE_CAU_CoprocessorNumber_0=-1
CPU_peripheralSpecPE_SPEC_FEATURE_CPU_I2S_Mode_Clock_SourceReg=PE_SPEC_FEATURE_CPU_I2S_Mode_Clock_Source
CPU_peripheralSpecPE_SPEC_FEATURE_CPU_SSI_LDD_USE_SAI_DEVICEReg=PE_SPEC_FEATURE_CPU_SSI_LDD_USE_SAI_DEVICE
CPU_peripheralSpecPE_SPEC_FEATURE_CPU_USBOTGReg=PE_SPEC_FEATURE_CPU_USBOTG
CPU_peripheralSpecPE_SPEC_FEATURE_DACReg=PE_SPEC_FEATURE_DAC
CPU_peripheralSpecPE_SPEC_FEATURE_EEEReg=PE_SPEC_FEATURE_EEE
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CAUReg=PE_SPEC_FEATURE_HasDevice_CAU
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMP0Reg=PE_SPEC_FEATURE_HasDevice_CMP0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMTReg=PE_SPEC_FEATURE_HasDevice_CMT
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_ModMarkReg=PE_SPEC_FEATURE_HasDevice_CMT_ModMark
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_ModSpaceReg=PE_SPEC_FEATURE_HasDevice_CMT_ModSpace
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_ModulatorReg=PE_SPEC_FEATURE_HasDevice_CMT_Modulator
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_PrimHighReg=PE_SPEC_FEATURE_HasDevice_CMT_PrimHigh
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_PrimLowReg=PE_SPEC_FEATURE_HasDevice_CMT_PrimLow
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_PrimaryReg=PE_SPEC_FEATURE_HasDevice_CMT_Primary
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_SecHighReg=PE_SPEC_FEATURE_HasDevice_CMT_SecHigh
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_SecLowReg=PE_SPEC_FEATURE_HasDevice_CMT_SecLow
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CMT_SecondaryReg=PE_SPEC_FEATURE_HasDevice_CMT_Secondary
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_COPReg=PE_SPEC_FEATURE_HasDevice_COP
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_COP_TimerReg=PE_SPEC_FEATURE_HasDevice_COP_Timer
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CPUReg=PE_SPEC_FEATURE_HasDevice_CPU
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CRCReg=PE_SPEC_FEATURE_HasDevice_CRC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_DAC0Reg=PE_SPEC_FEATURE_HasDevice_DAC0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_DAC6b0Reg=PE_SPEC_FEATURE_HasDevice_DAC6b0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_DMAReg=PE_SPEC_FEATURE_HasDevice_DMA
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_DMA_Channel0Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_DMA_Channel1Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_DMA_Channel2Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_DMA_Channel3Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel3
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_EMACReg=PE_SPEC_FEATURE_HasDevice_EMAC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FBReg=PE_SPEC_FEATURE_HasDevice_FB
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTFLReg=PE_SPEC_FEATURE_HasDevice_FTFL
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTFL_FlashConfigReg=PE_SPEC_FEATURE_HasDevice_FTFL_FlashConfig
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM0Reg=PE_SPEC_FEATURE_HasDevice_FTM0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM0_C0VReg=PE_SPEC_FEATURE_HasDevice_FTM0_C0V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM0_C1VReg=PE_SPEC_FEATURE_HasDevice_FTM0_C1V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM0_CNTReg=PE_SPEC_FEATURE_HasDevice_FTM0_CNT
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM0_FreeReg=PE_SPEC_FEATURE_HasDevice_FTM0_Free
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM0_MODReg=PE_SPEC_FEATURE_HasDevice_FTM0_MOD
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1Reg=PE_SPEC_FEATURE_HasDevice_FTM1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_C0VReg=PE_SPEC_FEATURE_HasDevice_FTM1_C0V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_C1VReg=PE_SPEC_FEATURE_HasDevice_FTM1_C1V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_C2VReg=PE_SPEC_FEATURE_HasDevice_FTM1_C2V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_C3VReg=PE_SPEC_FEATURE_HasDevice_FTM1_C3V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_C4VReg=PE_SPEC_FEATURE_HasDevice_FTM1_C4V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_C5VReg=PE_SPEC_FEATURE_HasDevice_FTM1_C5V
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_CNTReg=PE_SPEC_FEATURE_HasDevice_FTM1_CNT
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_FreeReg=PE_SPEC_FEATURE_HasDevice_FTM1_Free
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_FTM1_MODReg=PE_SPEC_FEATURE_HasDevice_FTM1_MOD
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C0Reg=PE_SPEC_FEATURE_HasDevice_I2C0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C0_LoTimeoutReg=PE_SPEC_FEATURE_HasDevice_I2C0_LoTimeout
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C1Reg=PE_SPEC_FEATURE_HasDevice_I2C1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C1_LoTimeoutReg=PE_SPEC_FEATURE_HasDevice_I2C1_LoTimeout
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C2Reg=PE_SPEC_FEATURE_HasDevice_I2C2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C2_LoTimeoutReg=PE_SPEC_FEATURE_HasDevice_I2C2_LoTimeout
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C3Reg=PE_SPEC_FEATURE_HasDevice_I2C3
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2C3_LoTimeoutReg=PE_SPEC_FEATURE_HasDevice_I2C3_LoTimeout
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2S0Reg=PE_SPEC_FEATURE_HasDevice_I2S0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2S0_MCLKReg=PE_SPEC_FEATURE_HasDevice_I2S0_MCLK
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_I2S0_RxReg=PE_SPEC_FEATURE_HasDevice_I2S0_Rx
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_INTCReg=PE_SPEC_FEATURE_HasDevice_INTC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_IRQReg=PE_SPEC_FEATURE_HasDevice_IRQ
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LLWUReg=PE_SPEC_FEATURE_HasDevice_LLWU
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR0Reg=PE_SPEC_FEATURE_HasDevice_LPTMR0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR0_CMRReg=PE_SPEC_FEATURE_HasDevice_LPTMR0_CMR
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR0_CNRReg=PE_SPEC_FEATURE_HasDevice_LPTMR0_CNR
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR0_FreeReg=PE_SPEC_FEATURE_HasDevice_LPTMR0_Free
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR1Reg=PE_SPEC_FEATURE_HasDevice_LPTMR1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR1_CMRReg=PE_SPEC_FEATURE_HasDevice_LPTMR1_CMR
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR1_CNRReg=PE_SPEC_FEATURE_HasDevice_LPTMR1_CNR
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LPTMR1_FreeReg=PE_SPEC_FEATURE_HasDevice_LPTMR1_Free
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_MTIM0Reg=PE_SPEC_FEATURE_HasDevice_MTIM0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_MTIM0_CNTReg=PE_SPEC_FEATURE_HasDevice_MTIM0_CNT
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_MTIM0_MODReg=PE_SPEC_FEATURE_HasDevice_MTIM0_MOD
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_MXCReg=PE_SPEC_FEATURE_HasDevice_MXC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_MemModel_FlexMemReg=PE_SPEC_FEATURE_HasDevice_MemModel_FlexMem
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_MemModel_NoFlexMemReg=PE_SPEC_FEATURE_HasDevice_MemModel_NoFlexMem
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PDB0Reg=PE_SPEC_FEATURE_HasDevice_PDB0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PMCReg=PE_SPEC_FEATURE_HasDevice_PMC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTAReg=PE_SPEC_FEATURE_HasDevice_PTA
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTBReg=PE_SPEC_FEATURE_HasDevice_PTB
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTCReg=PE_SPEC_FEATURE_HasDevice_PTC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTDReg=PE_SPEC_FEATURE_HasDevice_PTD
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTEReg=PE_SPEC_FEATURE_HasDevice_PTE
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTFReg=PE_SPEC_FEATURE_HasDevice_PTF
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_RCMReg=PE_SPEC_FEATURE_HasDevice_RCM
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_RFSYSReg=PE_SPEC_FEATURE_HasDevice_RFSYS
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_RGPIOReg=PE_SPEC_FEATURE_HasDevice_RGPIO
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_RNGReg=PE_SPEC_FEATURE_HasDevice_RNG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SIMReg=PE_SPEC_FEATURE_HasDevice_SIM
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SPI0Reg=PE_SPEC_FEATURE_HasDevice_SPI0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SPI1Reg=PE_SPEC_FEATURE_HasDevice_SPI1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TSI0Reg=PE_SPEC_FEATURE_HasDevice_TSI0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_UART0Reg=PE_SPEC_FEATURE_HasDevice_UART0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_UART1Reg=PE_SPEC_FEATURE_HasDevice_UART1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_USB0Reg=PE_SPEC_FEATURE_HasDevice_USB0
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_USB0_FSReg=PE_SPEC_FEATURE_HasDevice_USB0_FS
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_USBDCDReg=PE_SPEC_FEATURE_HasDevice_USBDCD
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_VREFReg=PE_SPEC_FEATURE_HasDevice_VREF
CPU_peripheralSpecPE_SPEC_FEATURE_LDD_COMPONENTS_SUPPORTReg=PE_SPEC_FEATURE_LDD_COMPONENTS_SUPPORT
CPU_peripheralSpecPE_SPEC_FEATURE_MCG_DDR_PLL_NOReg=PE_SPEC_FEATURE_MCG_DDR_PLL_NO
CPU_peripheralSpecPE_SPEC_FEATURE_WATCHDOG_ENABLED_AFTER_RESETAddr=0
CPU_peripheralSpecPE_SPEC_FEATURE_WATCHDOG_ENABLED_AFTER_RESETReg=COP
CPU_peripheral_Name=CPU
CPUfamily=ColdFirePlus
CPUmanualVersion=MCF51JF128RM Rev. 3, 5/2011
CPUproducer=Freescale
CPUsubFamily=MCF51JF
CPUtype=MCF51JF128_64
CPUvariant=MCF51JF128VLH
CW_BUILD_TOOL=com_freescale_coldfire_toolchain
CW_PRJWIZ_MCU_NAME=MCF51JF128
C_CompilerIdentificationLong=CodeWarrior MCF C Compiler
C_GenerateLINKFILE=no
Cmplr_GenerateCfgFile=yes
Cmplr_GenerateDebuggerFiles=yes
Cmplr_GenerateMemFile=yes
Cmplr_GenerateXmlFile=yes
CodeWarriorCC_MCF_Directory=
CoreClockSpeedMode0=47.972352
DataFlashAvailable=no
DeviceName=Cpu
DeviceType=MCF51JF128_64
Dpart=32
Dpart_=0
EEEFeatureIsInitialized=yes
EEEfeatureGrp=
EEEpart=0
EEEpart_=0
EEPROMAvailable=no
EEPROMPartitionSize=0
EEPROMPartitionStart=2129920
ERCLK1ClkCLKMode0=0
ERCLK1ClkSpeedMode0=0
ERCLK1LowClkCLKMode0=0
ERCLK2ClkCLKMode0=0
ERCLK2ClkSpeedMode0=0
ERCLK2LowClkCLKMode0=0
ERCLKEN1CLKMode0=Enabled
ERCLKEN2CLKMode0=Enabled
EREFSTEN1CLKMode0=Disabled
EREFSTEN2CLKMode0=Disabled
EntryPoint_UserCodeAfterLines=0
EntryPoint_UserCodeBeforeLines=0
EntryPoint_UserDeclLines=0
EventModule=Events
EvntsShrdGrpMaxItem=0
EvntsShrdGrpNumItems=1
ExternalBusGrp=no
FLL0ClockSpeedMode0=48
FLLEnblCLKMode0=Enabled
FLLFixedClkCLKMode0=16.384
FLLFixedClkSpeedMode0=16.384
FLLOutputCLKMode0=47.972352
FLLRefClkCLKMode0=32.768
FLL_RefClkSrcCLKMode0=1
FTFL_FlashConfigGrp=no
FlashOrgDscrBlockAddress0=0
FlashOrgDscrBlockAddress1=2097152
FlashOrgDscrBlockEUnitSize0=1024
FlashOrgDscrBlockEUnitSize1=1024
FlashOrgDscrBlockListMaxItem=1
FlashOrgDscrBlockListNumItems=2
FlashOrgDscrBlockPUnitSize0=4096
FlashOrgDscrBlockPUnitSize1=4096
FlashOrgDscrBlockSize0=131072
FlashOrgDscrBlockSize1=32768
FlashOrgDscrBlockWUnitSize0=4
FlashOrgDscrBlockWUnitSize1=4
FlexNVMSize=32 KB
FlexRAM=no
I2S0_CLKINSpeedMode0=0
I2SClockCondGrp0=
IRCLKClkCLKMode0=0.032768
IRCLKClkSpeedMode0=0.032768
IRCLKENCLKMode0=Enabled
IRCLKSelectCLKMode0=0
IRC_32kHzSpeedMode0=0.032768
IRC_4MHzSpeedMode0=4
IREFSTENCLKMode0=Disabled
InitPriority=0
InitializeFastTRIM=no
InitializeSlowTRIM=yes
InstrRelatedReset=Enabled
IntAccessErrorGrp=no
IntAddressErrorGrp=no
IntDivideByZeroGrp=no
IntFormatErrorGrp=no
IntIllegalInstructionGrp=no
IntOsc=32.768
IntOscFast=4
IntPrivilegeViolationGrp=no
IntSwiGrp0=no
IntSwiGrp1=no
IntSwiGrp2=no
IntSwiGrp3=no
IntSwiGrp4=no
IntSwiGrp5=no
IntSwiGrp6=no
IntTrapGrp0=no
IntTrapGrp1=no
IntTrapGrp10=no
IntTrapGrp11=no
IntTrapGrp12=no
IntTrapGrp13=no
IntTrapGrp14=no
IntTrapGrp15=no
IntTrapGrp2=no
IntTrapGrp3=no
IntTrapGrp4=no
IntTrapGrp5=no
IntTrapGrp6=no
IntTrapGrp7=no
IntTrapGrp8=no
IntTrapGrp9=no
IntUnimplementedLineAGrp=no
IntUnimplementedLineFGrp=no
IntUnsupportedInstrGrp=no
LLWUGrp=no
MCGCMECLKMode0=Disabled
MCGModeCLKMode0=
MCGModeSelCLKMode0=0
MCGModeSelSpeedMode0=0
MCGOUTSelectCLKMode0=FLLOUT
MCGOutputCLKMode0=47.972352
MCGOutputSpeedMode0=47.972352
MCG_ERCLKClkCLKMode0=0
MCG_FLL_MFactor_CLKMode0=Auto select
MCG_PRDIV_CLKMode0=Auto select
MCG_VDIV_CLKMode0=Auto select
MC_ALLS=0
MC_AVLLS=0
MC_AVLP=0
MemModelDev=MemModel_FlexMem
MemModelDevName=MemModel_FlexMem
MemModelDevSharedByOther=no
MemModelDevSpecPE_SPEC_FEATURE_EEEReg=PE_SPEC_FEATURE_EEE
MemModelDev_Name=MemModel_FlexMem
ModuleName=Cpu
OSC1Grp=no
OSC1SpeedMode0=0.032768
OSC2Grp=no
OSC2SpeedMode0=4
OnChipCODE=163840
OnChipEEPROM=32768
OnChipFLASH=131072
OnChipOTP=0
OnChipRAM=32768
OnChipROM=0
PECW_RecentTargetName=MCF51JF128_Internal_Flash
PECW_Targetname=ColdFire Compiler
PE_SPEC_ALLOW_PIN_SHARING=1
PE_SPEC_MANUAL_VERSION=0
PE_SPEC_MCU_INIT_SHOWS_MODIFIED_REGS=1
PLL0ClockSpeedMode0=48
PLLEnblCLKMode0=Disabled
PLLOutputCLKMode0=0
PLLRefClkCLKMode0=1
PLLSTENCLKMode0=Disabled
PLL_LOLIECLKMode0=Disabled
PMCBangapBuffer=disabled
PMCBangapVLPBuffer=disabled
PMCIsInitialized=yes
PMCLVDIntName=Vlvd
PMCLVDIntNameName=Vlvd
PMCLVDIntNameRequest=enabled
PMCLVDIntNameRequestFeatureGroup=
PMCLVDIntNameShared=no
PMCLVDIntNameSharedByOther=no
PMCLVDIntNameSpecInterruptVectorAddressAddr=260
PMCLVDIntNameSpecInterruptVectorAddressReg=IntVVlvd
PMCLVDIntNameSpecInterruptVectorNumberAddr=65
PMCLVDIntNameSpecInterruptVectorNumberReg=IntNum
PMCLVDIntName_NMI=no
PMCLVDIntName_Name=Vlvd
PMCLVDIntName_RESET=no
PMCLVDIntName_SWint=no
PMCLVDinterrupt=disabled
PMCLVDreset=enabled
PMCLVDvoltageSelect=low
PMCLVWinterrupt=disabled
PMCLVWvoltageSelect=low
PeriphDevicePMC=PMC
PeriphDevicePMCName=PMC
PeriphDevicePMCSharedByOther=no
PeriphDevicePMCSpecLVDSC1Addr=4294934784
PeriphDevicePMCSpecLVDSC1Reg=PMC_LVDSC1
PeriphDevicePMCSpecLVDSC2Addr=4294934785
PeriphDevicePMCSpecLVDSC2Reg=PMC_LVDSC2
PeriphDevicePMCSpecPERIPHERAL_BASE_ADDRESSAddr=4294934784
PeriphDevicePMCSpecPERIPHERAL_BASE_ADDRESSReg=PERIPHERAL_BASE_ADDRESS
PeriphDevicePMCSpecPE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlusReg=PE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlus
PeriphDevicePMCSpecPE_SPEC_FEATURE_IB_PinMuxing_CommonReg=PE_SPEC_FEATURE_IB_PinMuxing_Common
PeriphDevicePMCSpecREGSCAddr=4294934786
PeriphDevicePMCSpecREGSCReg=PMC_REGSC
PeriphDevicePMC_Name=PMC
PeriphDeviceRCM=RCM
PeriphDeviceRCMName=RCM
PeriphDeviceRCMSharedByOther=no
PeriphDeviceRCMSpecPERIPHERAL_BASE_ADDRESSAddr=4294934800
PeriphDeviceRCMSpecPERIPHERAL_BASE_ADDRESSReg=PERIPHERAL_BASE_ADDRESS
PeriphDeviceRCMSpecRPFCAddr=4294934804
PeriphDeviceRCMSpecRPFCReg=RCM_RPFC
PeriphDeviceRCMSpecRPFWAddr=4294934805
PeriphDeviceRCMSpecRPFWReg=RCM_RPFW
PeriphDeviceRCM_Name=RCM
PeriphDeviceSIM=SIM
PeriphDeviceSIMName=SIM
PeriphDeviceSIMSharedByOther=no
PeriphDeviceSIMSpecCLKDIV1Addr=4294934748
PeriphDeviceSIMSpecCLKDIV1Reg=SIM_CLKDIV1
PeriphDeviceSIMSpecCLKOUTAddr=4294934746
PeriphDeviceSIMSpecCLKOUTReg=SIM_CLKOUT
PeriphDeviceSIMSpecCOPCAddr=4294934730
PeriphDeviceSIMSpecCOPCReg=SIM_COPC
PeriphDeviceSIMSpecConfig6Addr=4294934725
PeriphDeviceSIMSpecConfig6Reg=SIM_SOPT6
PeriphDeviceSIMSpecPERIPHERAL_BASE_ADDRESSAddr=4294934720
PeriphDeviceSIMSpecPERIPHERAL_BASE_ADDRESSReg=PERIPHERAL_BASE_ADDRESS
PeriphDeviceSIMSpecSCGC1Addr=4294934738
PeriphDeviceSIMSpecSCGC1Reg=SIM_SCGC1
PeriphDeviceSIMSpecSCGC2Addr=4294934739
PeriphDeviceSIMSpecSCGC2Reg=SIM_SCGC2
PeriphDeviceSIMSpecSCGC3Addr=4294934740
PeriphDeviceSIMSpecSCGC3Reg=SIM_SCGC3
PeriphDeviceSIMSpecSCGC4Addr=4294934741
PeriphDeviceSIMSpecSCGC4Reg=SIM_SCGC4
PeriphDeviceSIMSpecSCGC5Addr=4294934742
PeriphDeviceSIMSpecSCGC5Reg=SIM_SCGC5
PeriphDeviceSIMSpecSCGC6Addr=4294934743
PeriphDeviceSIMSpecSCGC6Reg=SIM_SCGC6
PeriphDeviceSIMSpecSOPT1Addr=4294934720
PeriphDeviceSIMSpecSOPT1Reg=SIM_SOPT1
PeriphDeviceSIMSpecSRVCOPAddr=4294934731
PeriphDeviceSIMSpecSRVCOPReg=SIM_SRVCOP
PeriphDeviceSIM_Name=SIM
RCMFilterInRunWait=disabled
RCMFilterInStop=disabled
RCMFilterWidth=1
RCMGrp=yes
RCMIsInitialized=yes
RCMResetPin=RESET_b/PTC1
RCMResetPinBitMask=2
RCMResetPinBitNum=1
RCMResetPinPinName=RESET_b/PTC1
RCMResetPinPinNumber=52
RCMResetPinPortAddr=4294934560
RCMResetPinPortCntrAddr=4294934561
RCMResetPinPortCntrReg=PTC_DD
RCMResetPinPortName=PTC
RCMResetPinPortReg=PTC_D
RCMResetPinPortSpecDataAddr=4294934560
RCMResetPinPortSpecDataReg=PTC_D
RCMResetPinPortSpecDeviceTypeReg=GPIO
RCMResetPinPortSpecDigitalFilterControlReg=PCTLC_DFC
RCMResetPinPortSpecDigitalFilterReg=PCTLC_DFE
RCMResetPinPortSpecDirectionAddr=4294934561
RCMResetPinPortSpecDirectionReg=PTC_DD
RCMResetPinPortSpecDriveStrengthReg=PCTLC_DS
RCMResetPinPortSpecGPIO_BASE_NameReg=PTC_BASE_PTR
RCMResetPinPortSpecInputDataAddr=4294934562
RCMResetPinPortSpecInputDataReg=PTC_PV
RCMResetPinPortSpecIntEdgeReg=PCTLC_IES
RCMResetPinPortSpecIntEnReg=PCTLC_IPE
RCMResetPinPortSpecIntFlagReg=PCTLC_IF
RCMResetPinPortSpecInterruptControlReg=PCTLC_IC
RCMResetPinPortSpecMin8PinGroupsReg=_0to7
RCMResetPinPortSpecPERIPHERAL_BASE_ADDRESSAddr=4294934560
RCMResetPinPortSpecPERIPHERAL_BASE_ADDRESSReg=PERIPHERAL_BASE_ADDRESS
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_ClockGateCtrl_CommonReg=PE_SPEC_FEATURE_IB_ClockGateCtrl_Common
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter0Reg=PE_SPEC_FEATURE_IB_DigitalFilter0
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter1Reg=PE_SPEC_FEATURE_IB_DigitalFilter1
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter2Reg=PE_SPEC_FEATURE_IB_DigitalFilter2
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter3Reg=PE_SPEC_FEATURE_IB_DigitalFilter3
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter4Reg=PE_SPEC_FEATURE_IB_DigitalFilter4
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter5Reg=PE_SPEC_FEATURE_IB_DigitalFilter5
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter6Reg=PE_SPEC_FEATURE_IB_DigitalFilter6
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilter7Reg=PE_SPEC_FEATURE_IB_DigitalFilter7
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_DigitalFilterWidthReg=PE_SPEC_FEATURE_IB_DigitalFilterWidth
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_FilterClockSourceReg=PE_SPEC_FEATURE_IB_FilterClockSource
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlusReg=PE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlus
RCMResetPinPortSpecPE_SPEC_FEATURE_IB_PinMuxing_CommonReg=PE_SPEC_FEATURE_IB_PinMuxing_Common
RCMResetPinPortSpecPE_SPEC_FEATURE_InterruptDetectionModesReg=_Disabled_Low_High_Rising_Falling
RCMResetPinPortSpecPE_SPEC_FEATURE_InterruptForcesToInputReg=PE_SPEC_FEATURE_InterruptForcesToInput
RCMResetPinPortSpecPassiveFilterReg=PCTLC_PFE
RCMResetPinPortSpecPortControl_BASE_NameReg=PCTLC_BASE_PTR
RCMResetPinPortSpecPullEnableReg=PCTLC_PUE
RCMResetPinPortSpecPullSelectReg=PCTLC_PUS
RCMResetPinPortSpecSlewRateReg=PCTLC_SRE
RCMResetPinSharedByOther=no
RCMResetPinSignal=
RCMResetPinSpecAssignC4Reg=MXC_PTCPF4
RCMResetPinSpecPortControl_BASE_NameReg=PORTC_BASE_PTR
RCMResetPinSupportsDirInp=yes
RCMResetPinSupportsDirOut=yes
RCMResetPin_Name=RESET_b/PTC1
SIMCLKOUTGrp=disabled
SIMIsInitialized=yes
SIMSCGCGrp=no
SWInterruptsGrpMaxItem=6
SWInterruptsGrpNumItems=7
SetOperationMode_SLEEP_Sel=STOP/VLPS
SetOperationMode_STOP=no
SetOperationMode_WAIT_Sel=WAIT/WLPW
SharedADC0MaxItem=0
SharedADC0NumItems=1
SharedCPUConfigGrpMaxItem=0
SharedCPUConfigGrpNumItems=1
SharedFLASHGrpMaxItem=0
SharedFLASHGrpNumItems=1
SharedFlashOrganizationMaxItem=0
SharedFlashOrganizationNumItems=1
SharedInternalPropertiesMaxItem=0
SharedInternalPropertiesNumItems=1
SharedNMI0MaxItem=0
SharedNMI0NumItems=1
SharedNMI1MaxItem=0
SharedNMI1NumItems=1
Shared_CPUInterruptsMaxItem=0
Shared_CPUInterruptsNumItems=1
Shared_CPULowPowerGrp0MaxItem=0
Shared_CPULowPowerGrp0NumItems=1
Shared_CPULowPowerGrp1MaxItem=0
Shared_CPULowPowerGrp1NumItems=1
Shared_CPULowPowerGrpMaxItem=0
Shared_CPULowPowerGrpNumItems=1
Shared_ClockSettingsMaxItem=0
Shared_ClockSettingsNumItems=1
ShrdFBusGrpMaxItem=0
ShrdFBusGrpNumItems=1
ShrdFLASHCfgGrpMaxItem=0
ShrdFLASHCfgGrpNumItems=1
ShrdLLWUGrpMaxItem=0
ShrdLLWUGrpNumItems=1
ShrdPMCGrpMaxItem=0
ShrdPMCGrpNumItems=1
ShrdSCBGrp1MaxItem=0
ShrdSCBGrp1NumItems=1
SlowFTRIMvalueAddress=1022
SlowFTRIMvalueAddress_Area=
SlowFTRIMvalueAddress_EEPROM=no
SlowFTRIMvalueAddress_External=no
SlowFTRIMvalueAddress_FLASH=yes
SlowFTRIMvalueAddress_Internal=yes
SlowFTRIMvalueAddress_RAM=no
SlowFTRIMvalueAddress_ROM=no
SlowTRIMvalueAddress=1023
SlowTRIMvalueAddress_Area=
SlowTRIMvalueAddress_EEPROM=no
SlowTRIMvalueAddress_External=no
SlowTRIMvalueAddress_FLASH=yes
SlowTRIMvalueAddress_Internal=yes
SlowTRIMvalueAddress_RAM=no
SlowTRIMvalueAddress_ROM=no
SpeedModeListMaxItem=0
SpeedModeListNumItems=1
TrapExceptionsGrpMaxItem=15
TrapExceptionsGrpNumItems=16
USB0_CLKINSpeedMode0=0
USBClockCondGrp0=
USBClockSpeedMode0=47.972352
USBDIVSpeedMode0=1
USBFRACSpeedMode0=-1
USBPLLFLLCLkSelSpeedMode0=0
USBPLLFLLClockSpeedMode0=47.972352
UnhandledIntCodeLines=4
UnhandledVectorsBehavior=SharedISR
VLPRSpeedMode0=no
WDOGDis=yes
WakeUpCntrlGrp=yes
WakeUpIntLvl=0
WatchDogResetMethod=Write05AA
WatchDogServiceRegister=SIM_SRVCOP
ivINITPC=defaultInt
ivINITPC_No=1
ivINITPC_RESET=
ivINITPC_UserCount=0
ivINITSP=defaultInt
ivINITSP_No=0
ivINITSP_UserCount=0
ivVL1swi=defaultInt
ivVL1swi_No=109
ivVL1swi_SWint=
ivVL1swi_UserCount=0
ivVL2swi=defaultInt
ivVL2swi_No=108
ivVL2swi_SWint=
ivVL2swi_UserCount=0
ivVL3swi=defaultInt
ivVL3swi_No=107
ivVL3swi_SWint=
ivVL3swi_UserCount=0
ivVL4swi=defaultInt
ivVL4swi_No=106
ivVL4swi_SWint=
ivVL4swi_UserCount=0
ivVL5swi=defaultInt
ivVL5swi_No=105
ivVL5swi_SWint=
ivVL5swi_UserCount=0
ivVL6swi=defaultInt
ivVL6swi_No=104
ivVL6swi_SWint=
ivVL6swi_UserCount=0
ivVL7swi=defaultInt
ivVL7swi_No=103
ivVL7swi_SWint=
ivVL7swi_UserCount=0
ivVReserved13=defaultInt
ivVReserved13_No=13
ivVReserved13_UserCount=0
ivVReserved15=defaultInt
ivVReserved15_No=15
ivVReserved15_UserCount=0
ivVReserved16=defaultInt
ivVReserved16_No=16
ivVReserved16_UserCount=0
ivVReserved17=defaultInt
ivVReserved17_No=17
ivVReserved17_UserCount=0
ivVReserved18=defaultInt
ivVReserved18_No=18
ivVReserved18_UserCount=0
ivVReserved19=defaultInt
ivVReserved19_No=19
ivVReserved19_UserCount=0
ivVReserved20=defaultInt
ivVReserved20_No=20
ivVReserved20_UserCount=0
ivVReserved21=defaultInt
ivVReserved21_No=21
ivVReserved21_UserCount=0
ivVReserved22=defaultInt
ivVReserved22_No=22
ivVReserved22_UserCount=0
ivVReserved23=defaultInt
ivVReserved23_No=23
ivVReserved23_UserCount=0
ivVReserved25=defaultInt
ivVReserved25_No=25
ivVReserved25_UserCount=0
ivVReserved26=defaultInt
ivVReserved26_No=26
ivVReserved26_UserCount=0
ivVReserved27=defaultInt
ivVReserved27_No=27
ivVReserved27_UserCount=0
ivVReserved28=defaultInt
ivVReserved28_No=28
ivVReserved28_UserCount=0
ivVReserved29=defaultInt
ivVReserved29_No=29
ivVReserved29_UserCount=0
ivVReserved30=defaultInt
ivVReserved30_No=30
ivVReserved30_UserCount=0
ivVReserved31=defaultInt
ivVReserved31_No=31
ivVReserved31_UserCount=0
ivVReserved48=defaultInt
ivVReserved48_No=48
ivVReserved48_UserCount=0
ivVReserved49=defaultInt
ivVReserved49_No=49
ivVReserved49_UserCount=0
ivVReserved50=defaultInt
ivVReserved50_No=50
ivVReserved50_UserCount=0
ivVReserved51=defaultInt
ivVReserved51_No=51
ivVReserved51_UserCount=0
ivVReserved52=defaultInt
ivVReserved52_No=52
ivVReserved52_UserCount=0
ivVReserved53=defaultInt
ivVReserved53_No=53
ivVReserved53_UserCount=0
ivVReserved54=defaultInt
ivVReserved54_No=54
ivVReserved54_UserCount=0
ivVReserved55=defaultInt
ivVReserved55_No=55
ivVReserved55_UserCount=0
ivVReserved56=defaultInt
ivVReserved56_No=56
ivVReserved56_UserCount=0
ivVReserved57=defaultInt
ivVReserved57_No=57
ivVReserved57_UserCount=0
ivVReserved58=defaultInt
ivVReserved58_No=58
ivVReserved58_UserCount=0
ivVReserved59=defaultInt
ivVReserved59_No=59
ivVReserved59_UserCount=0
ivVReserved6=defaultInt
ivVReserved60=defaultInt
ivVReserved60_No=60
ivVReserved60_UserCount=0
ivVReserved62=defaultInt
ivVReserved62_No=62
ivVReserved62_UserCount=0
ivVReserved63=defaultInt
ivVReserved63_No=63
ivVReserved63_UserCount=0
ivVReserved6_No=6
ivVReserved6_UserCount=0
ivVReserved7=defaultInt
ivVReserved7_No=7
ivVReserved7_UserCount=0
ivVaccerr=defaultInt
ivVaccerr_No=2
ivVaccerr_UserCount=0
ivVadc0=defaultInt
ivVadc0_No=96
ivVadc0_UserCount=0
ivVadderr=defaultInt
ivVadderr_No=3
ivVadderr_UserCount=0
ivVcmp0=defaultInt
ivVcmp0_No=82
ivVcmp0_UserCount=0
ivVcmt=defaultInt
ivVcmt_No=99
ivVcmt_UserCount=0
ivVdac0=defaultInt
ivVdac0_No=98
ivVdac0_UserCount=0
ivVdbgi=defaultInt
ivVdbgi_No=12
ivVdbgi_UserCount=0
ivVdiv_by_zero=defaultInt
ivVdiv_by_zero_No=5
ivVdiv_by_zero_UserCount=0
ivVdmach0=defaultInt
ivVdmach0_No=69
ivVdmach0_UserCount=0
ivVdmach1=defaultInt
ivVdmach1_No=70
ivVdmach1_UserCount=0
ivVdmach2=defaultInt
ivVdmach2_No=71
ivVdmach2_UserCount=0
ivVdmach3=defaultInt
ivVdmach3_No=72
ivVdmach3_UserCount=0
ivVferror=defaultInt
ivVferror_No=14
ivVferror_UserCount=0
ivVflash=defaultInt
ivVflash_No=68
ivVflash_UserCount=0
ivVftm0ch0=defaultInt
ivVftm0ch0_No=84
ivVftm0ch0_UserCount=0
ivVftm0ch1=defaultInt
ivVftm0ch1_No=85
ivVftm0ch1_UserCount=0
ivVftm0fault_ovf=defaultInt
ivVftm0fault_ovf_No=83
ivVftm0fault_ovf_UserCount=0
ivVftm1ch0=defaultInt
ivVftm1ch0_No=76
ivVftm1ch0_UserCount=0
ivVftm1ch1=defaultInt
ivVftm1ch1_No=77
ivVftm1ch1_UserCount=0
ivVftm1ch2=defaultInt
ivVftm1ch2_No=78
ivVftm1ch2_UserCount=0
ivVftm1ch3=defaultInt
ivVftm1ch3_No=79
ivVftm1ch3_UserCount=0
ivVftm1ch4=defaultInt
ivVftm1ch4_No=80
ivVftm1ch4_UserCount=0
ivVftm1ch5=defaultInt
ivVftm1ch5_No=81
ivVftm1ch5_UserCount=0
ivVftm1fault_ovf=defaultInt
ivVftm1fault_ovf_No=75
ivVftm1fault_ovf_UserCount=0
ivViic0=defaultInt
ivViic0_No=90
ivViic0_UserCount=0
ivViic1=defaultInt
ivViic1_No=94
ivViic1_UserCount=0
ivViic2=defaultInt
ivViic2_No=91
ivViic2_UserCount=0
ivViic3=defaultInt
ivViic3_No=95
ivViic3_UserCount=0
ivViinstr=defaultInt
ivViinstr_No=4
ivViinstr_UserCount=0
ivVirq=defaultInt
ivVirq_No=64
ivVirq_UserCount=0
ivVllwu=defaultInt
ivVllwu_No=66
ivVllwu_UserCount=0
ivVlol=defaultInt
ivVlol_No=67
ivVlol_UserCount=0
ivVlptmr0=defaultInt
ivVlptmr0_No=101
ivVlptmr0_UserCount=0
ivVlptmr1=defaultInt
ivVlptmr1_No=102
ivVlptmr1_UserCount=0
ivVlvd=defaultInt
ivVlvd_No=65
ivVlvd_Priority=-1
ivVlvd_UserCount=1
ivVmtim0=defaultInt
ivVmtim0_No=110
ivVmtim0_UserCount=0
ivVpdb0=defaultInt
ivVpdb0_No=100
ivVpdb0_UserCount=0
ivVportab=defaultInt
ivVportab_No=112
ivVportab_UserCount=0
ivVportdc=defaultInt
ivVportdc_No=113
ivVportdc_UserCount=0
ivVportfe=defaultInt
ivVportfe_No=114
ivVportfe_UserCount=0
ivVprviol=defaultInt
ivVprviol_No=8
ivVprviol_UserCount=0
ivVrngb=defaultInt
ivVrngb_No=74
ivVrngb_UserCount=0
ivVsai_rx=defaultInt
ivVsai_rx_No=88
ivVsai_rx_UserCount=0
ivVsai_tx=defaultInt
ivVsai_tx_No=89
ivVsai_tx_UserCount=0
ivVsci0=defaultInt
ivVsci0_No=87
ivVsci0_UserCount=0
ivVsci1=defaultInt
ivVsci1_No=93
ivVsci1_UserCount=0
ivVspi0=defaultInt
ivVspi0_No=86
ivVspi0_UserCount=0
ivVspi1=defaultInt
ivVspi1_No=92
ivVspi1_UserCount=0
ivVspuri=defaultInt
ivVspuri_No=24
ivVspuri_UserCount=0
ivVtrace=defaultInt
ivVtrace_No=9
ivVtrace_UserCount=0
ivVtrap0=defaultInt
ivVtrap0_No=32
ivVtrap0_UserCount=0
ivVtrap1=defaultInt
ivVtrap10=defaultInt
ivVtrap10_No=42
ivVtrap10_UserCount=0
ivVtrap11=defaultInt
ivVtrap11_No=43
ivVtrap11_UserCount=0
ivVtrap12=defaultInt
ivVtrap12_No=44
ivVtrap12_UserCount=0
ivVtrap13=defaultInt
ivVtrap13_No=45
ivVtrap13_UserCount=0
ivVtrap14=defaultInt
ivVtrap14_No=46
ivVtrap14_UserCount=0
ivVtrap15=defaultInt
ivVtrap15_No=47
ivVtrap15_UserCount=0
ivVtrap1_No=33
ivVtrap1_UserCount=0
ivVtrap2=defaultInt
ivVtrap2_No=34
ivVtrap2_UserCount=0
ivVtrap3=defaultInt
ivVtrap3_No=35
ivVtrap3_UserCount=0
ivVtrap4=defaultInt
ivVtrap4_No=36
ivVtrap4_UserCount=0
ivVtrap5=defaultInt
ivVtrap5_No=37
ivVtrap5_UserCount=0
ivVtrap6=defaultInt
ivVtrap6_No=38
ivVtrap6_UserCount=0
ivVtrap7=defaultInt
ivVtrap7_No=39
ivVtrap7_UserCount=0
ivVtrap8=defaultInt
ivVtrap8_No=40
ivVtrap8_UserCount=0
ivVtrap9=defaultInt
ivVtrap9_No=41
ivVtrap9_UserCount=0
ivVtsi0=defaultInt
ivVtsi0_No=97
ivVtsi0_UserCount=0
ivVunilaop=defaultInt
ivVunilaop_No=10
ivVunilaop_UserCount=0
ivVunilfop=defaultInt
ivVunilfop_No=11
ivVunilfop_UserCount=0
ivVunsinstr=defaultInt
ivVunsinstr_No=61
ivVunsinstr_UserCount=0
ivVusb0=defaultInt
ivVusb0_No=73
ivVusb0_Priority=570
ivVusb0_UserCount=0
ivVusbdcd=defaultInt
ivVusbdcd_No=111
ivVusbdcd_UserCount=0
runSpeedModeNum=1
EntryPoint_UserCodeAfter=[]
EntryPoint_UserCodeAfterLen=[]
EntryPoint_UserCodeBefore=[]
EntryPoint_UserCodeBeforeLen=[]
EntryPoint_UserDecl=[]
EntryPoint_UserDeclLen=[]
InterruptVectorAddrs=[0|4|8|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96|100|104|108|112|116|120|124|128|132|136|140|144|148|152|156|160|164|168|172|176|180|184|188|192|196|200|204|208|212|216|220|224|228|232|236|240|244|248|252|256|260|264|268|272|276|280|284|288|292|296|300|304|308|312|316|320|324|328|332|336|340|344|348|352|356|360|364|368|372|376|380|384|388|392|396|400|404|408|412|416|420|424|428|432|436|440|444|448|452|456]
InterruptVectors=[ivINITSP|ivINITPC|ivVaccerr|ivVadderr|ivViinstr|ivVdiv_by_zero|ivVReserved6|ivVReserved7|ivVprviol|ivVtrace|ivVunilaop|ivVunilfop|ivVdbgi|ivVReserved13|ivVferror|ivVReserved15|ivVReserved16|ivVReserved17|ivVReserved18|ivVReserved19|ivVReserved20|ivVReserved21|ivVReserved22|ivVReserved23|ivVspuri|ivVReserved25|ivVReserved26|ivVReserved27|ivVReserved28|ivVReserved29|ivVReserved30|ivVReserved31|ivVtrap0|ivVtrap1|ivVtrap2|ivVtrap3|ivVtrap4|ivVtrap5|ivVtrap6|ivVtrap7|ivVtrap8|ivVtrap9|ivVtrap10|ivVtrap11|ivVtrap12|ivVtrap13|ivVtrap14|ivVtrap15|ivVReserved48|ivVReserved49|ivVReserved50|ivVReserved51|ivVReserved52|ivVReserved53|ivVReserved54|ivVReserved55|ivVReserved56|ivVReserved57|ivVReserved58|ivVReserved59|ivVReserved60|ivVunsinstr|ivVReserved62|ivVReserved63|ivVirq|ivVlvd|ivVllwu|ivVlol|ivVflash|ivVdmach0|ivVdmach1|ivVdmach2|ivVdmach3|ivVusb0|ivVrngb|ivVftm1fault_ovf|ivVftm1ch0|ivVftm1ch1|ivVftm1ch2|ivVftm1ch3|ivVftm1ch4|ivVftm1ch5|ivVcmp0|ivVftm0fault_ovf|ivVftm0ch0|ivVftm0ch1|ivVspi0|ivVsci0|ivVsai_rx|ivVsai_tx|ivViic0|ivViic2|ivVspi1|ivVsci1|ivViic1|ivViic3|ivVadc0|ivVtsi0|ivVdac0|ivVcmt|ivVpdb0|ivVlptmr0|ivVlptmr1|ivVL7swi|ivVL6swi|ivVL5swi|ivVL4swi|ivVL3swi|ivVL2swi|ivVL1swi|ivVmtim0|ivVusbdcd|ivVportab|ivVportdc|ivVportfe]
SharedEventHandlers=[]
UnhandledIntCode=[/* This code can be changed using the CPU bean property "Build Options / Unhandled int code" */|/*lint -save  -e950 Disable MISRA rule (1.1) checking. */|asm (HALT);|/*lint -restore Enable MISRA rule (1.1) checking. */]
UnhandledIntCodeLen=[95|57|11|52]
runSpeedMode=[Yes]

 DEPRECATED LOCAL SYMBOLS (alphabet order)
------------------------------------------
BDMPinPortSpec0Reg=GPIO
BDMPinPortSpec10Reg=PE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlus
BDMPinPortSpec11Reg=PE_SPEC_FEATURE_IB_ClockGateCtrl_Common
BDMPinPortSpec12Addr=4294934544
BDMPinPortSpec12Reg=PTB_D
BDMPinPortSpec13Addr=4294934545
BDMPinPortSpec13Reg=PTB_DD
BDMPinPortSpec14Addr=4294934546
BDMPinPortSpec14Reg=PTB_PV
BDMPinPortSpec15Reg=PCTLB_PUE
BDMPinPortSpec16Reg=PCTLB_PUS
BDMPinPortSpec17Reg=PCTLB_DS
BDMPinPortSpec18Reg=PCTLB_SRE
BDMPinPortSpec19Reg=PCTLB_PFE
BDMPinPortSpec1Reg=PTB_BASE_PTR
BDMPinPortSpec20Reg=PCTLB_DFE
BDMPinPortSpec21Reg=PCTLB_IPE
BDMPinPortSpec22Reg=PCTLB_IES
BDMPinPortSpec23Reg=PCTLB_DFC
BDMPinPortSpec24Reg=PCTLB_IC
BDMPinPortSpec25Reg=PE_SPEC_FEATURE_IB_DigitalFilter0
BDMPinPortSpec26Reg=PE_SPEC_FEATURE_IB_DigitalFilter1
BDMPinPortSpec27Reg=PE_SPEC_FEATURE_IB_DigitalFilter2
BDMPinPortSpec28Reg=PE_SPEC_FEATURE_IB_DigitalFilter3
BDMPinPortSpec29Reg=PE_SPEC_FEATURE_IB_DigitalFilter4
BDMPinPortSpec2Reg=PCTLB_BASE_PTR
BDMPinPortSpec30Reg=PE_SPEC_FEATURE_IB_DigitalFilter5
BDMPinPortSpec31Reg=PE_SPEC_FEATURE_IB_DigitalFilter6
BDMPinPortSpec32Reg=PE_SPEC_FEATURE_IB_DigitalFilter7
BDMPinPortSpec33Reg=PE_SPEC_FEATURE_IB_FilterClockSource
BDMPinPortSpec34Reg=PE_SPEC_FEATURE_IB_DigitalFilterWidth
BDMPinPortSpec35Reg=_0to7
BDMPinPortSpec3Reg=PCTLB_IF
BDMPinPortSpec4Reg=_Disabled_Low_High_Rising_Falling
BDMPinPortSpec5Reg=PE_SPEC_FEATURE_InterruptForcesToInput
BDMPinPortSpec6Addr=4294934544
BDMPinPortSpec6Reg=PERIPHERAL_BASE_ADDRESS
BDMPinPortSpec9Reg=PE_SPEC_FEATURE_IB_PinMuxing_Common
BDMPinSpec1Reg=MXC_PTBPF2
BDMPinSpec5Reg=PORTB_BASE_PTR
CPU_peripheralSpec0Addr=4294934709
CPU_peripheralSpec0Reg=LLWU_F1
CPU_peripheralSpec100Reg=PE_SPEC_FEATURE_HasDevice_SPI0
CPU_peripheralSpec101Reg=PE_SPEC_FEATURE_HasDevice_SPI1
CPU_peripheralSpec102Reg=PE_SPEC_FEATURE_HasDevice_TSI0
CPU_peripheralSpec103Reg=PE_SPEC_FEATURE_HasDevice_UART0
CPU_peripheralSpec104Reg=PE_SPEC_FEATURE_HasDevice_UART1
CPU_peripheralSpec105Reg=PE_SPEC_FEATURE_HasDevice_USB0_FS
CPU_peripheralSpec106Reg=PE_SPEC_FEATURE_HasDevice_USB0
CPU_peripheralSpec107Reg=PE_SPEC_FEATURE_HasDevice_USBDCD
CPU_peripheralSpec108Reg=PE_SPEC_FEATURE_HasDevice_VREF
CPU_peripheralSpec10Reg=PE_SPEC_FEATURE_EEE
CPU_peripheralSpec11Reg=PE_SPEC_FEATURE_CPU_I2S_Mode_Clock_Source
CPU_peripheralSpec12Reg=PE_SPEC_FEATURE_CPU_SSI_LDD_USE_SAI_DEVICE
CPU_peripheralSpec13Reg=CFV1_INTC
CPU_peripheralSpec14Reg=PE_SPEC_FEATURE_MCG_DDR_PLL_NO
CPU_peripheralSpec15Reg=PE_SPEC_FEATURE_CPU_USBOTG
CPU_peripheralSpec16Reg=PE_SPEC_FEATURE_HasDevice_CAU
CPU_peripheralSpec17Reg=PE_SPEC_FEATURE_HasDevice_CMP0
CPU_peripheralSpec18Reg=PE_SPEC_FEATURE_HasDevice_CMT_PrimHigh
CPU_peripheralSpec19Reg=PE_SPEC_FEATURE_HasDevice_CMT_PrimLow
CPU_peripheralSpec1Addr=4294934710
CPU_peripheralSpec1Reg=LLWU_F2
CPU_peripheralSpec20Reg=PE_SPEC_FEATURE_HasDevice_CMT_SecHigh
CPU_peripheralSpec21Reg=PE_SPEC_FEATURE_HasDevice_CMT_SecLow
CPU_peripheralSpec22Reg=PE_SPEC_FEATURE_HasDevice_CMT_ModMark
CPU_peripheralSpec23Reg=PE_SPEC_FEATURE_HasDevice_CMT_ModSpace
CPU_peripheralSpec24Reg=PE_SPEC_FEATURE_HasDevice_CMT_Modulator
CPU_peripheralSpec25Reg=PE_SPEC_FEATURE_HasDevice_CMT_Primary
CPU_peripheralSpec26Reg=PE_SPEC_FEATURE_HasDevice_CMT_Secondary
CPU_peripheralSpec27Reg=PE_SPEC_FEATURE_HasDevice_CMT
CPU_peripheralSpec28Reg=PE_SPEC_FEATURE_HasDevice_COP
CPU_peripheralSpec29Reg=PE_SPEC_FEATURE_HasDevice_COP_Timer
CPU_peripheralSpec2Addr=4294934711
CPU_peripheralSpec2Reg=LLWU_F3
CPU_peripheralSpec30Reg=PE_SPEC_FEATURE_HasDevice_CPU
CPU_peripheralSpec31Reg=PE_SPEC_FEATURE_HasDevice_CRC
CPU_peripheralSpec32Reg=PE_SPEC_FEATURE_HasDevice_DAC0
CPU_peripheralSpec33Reg=PE_SPEC_FEATURE_HasDevice_DAC6b0
CPU_peripheralSpec34Reg=PE_SPEC_FEATURE_HasDevice_DMA
CPU_peripheralSpec35Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel0
CPU_peripheralSpec36Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel1
CPU_peripheralSpec37Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel2
CPU_peripheralSpec38Reg=PE_SPEC_FEATURE_HasDevice_DMA_Channel3
CPU_peripheralSpec39Reg=PE_SPEC_FEATURE_HasDevice_EMAC
CPU_peripheralSpec3Addr=4294934712
CPU_peripheralSpec3Reg=LLWU_FILT1
CPU_peripheralSpec40Reg=PE_SPEC_FEATURE_HasDevice_FB
CPU_peripheralSpec41Reg=PE_SPEC_FEATURE_HasDevice_FTFL
CPU_peripheralSpec42Reg=PE_SPEC_FEATURE_HasDevice_MemModel_FlexMem
CPU_peripheralSpec43Reg=PE_SPEC_FEATURE_HasDevice_MemModel_NoFlexMem
CPU_peripheralSpec44Reg=PE_SPEC_FEATURE_HasDevice_FTFL_FlashConfig
CPU_peripheralSpec45Reg=PE_SPEC_FEATURE_HasDevice_FTM0_Free
CPU_peripheralSpec46Reg=PE_SPEC_FEATURE_HasDevice_FTM0_MOD
CPU_peripheralSpec47Reg=PE_SPEC_FEATURE_HasDevice_FTM0_C0V
CPU_peripheralSpec48Reg=PE_SPEC_FEATURE_HasDevice_FTM0_C1V
CPU_peripheralSpec49Reg=PE_SPEC_FEATURE_HasDevice_FTM0_CNT
CPU_peripheralSpec4Addr=4294934713
CPU_peripheralSpec4Reg=LLWU_FILT2
CPU_peripheralSpec50Reg=PE_SPEC_FEATURE_HasDevice_FTM0
CPU_peripheralSpec51Reg=PE_SPEC_FEATURE_HasDevice_FTM1_Free
CPU_peripheralSpec52Reg=PE_SPEC_FEATURE_HasDevice_FTM1_MOD
CPU_peripheralSpec53Reg=PE_SPEC_FEATURE_HasDevice_FTM1_C0V
CPU_peripheralSpec54Reg=PE_SPEC_FEATURE_HasDevice_FTM1_C1V
CPU_peripheralSpec55Reg=PE_SPEC_FEATURE_HasDevice_FTM1_C2V
CPU_peripheralSpec56Reg=PE_SPEC_FEATURE_HasDevice_FTM1_C3V
CPU_peripheralSpec57Reg=PE_SPEC_FEATURE_HasDevice_FTM1_C4V
CPU_peripheralSpec58Reg=PE_SPEC_FEATURE_HasDevice_FTM1_C5V
CPU_peripheralSpec59Reg=PE_SPEC_FEATURE_HasDevice_FTM1_CNT
CPU_peripheralSpec5Reg=PE_SPEC_FEATURE_ADC0
CPU_peripheralSpec60Reg=PE_SPEC_FEATURE_HasDevice_FTM1
CPU_peripheralSpec61Reg=PE_SPEC_FEATURE_HasDevice_I2C0
CPU_peripheralSpec62Reg=PE_SPEC_FEATURE_HasDevice_I2C0_LoTimeout
CPU_peripheralSpec63Reg=PE_SPEC_FEATURE_HasDevice_I2C1
CPU_peripheralSpec64Reg=PE_SPEC_FEATURE_HasDevice_I2C1_LoTimeout
CPU_peripheralSpec65Reg=PE_SPEC_FEATURE_HasDevice_I2C2
CPU_peripheralSpec66Reg=PE_SPEC_FEATURE_HasDevice_I2C2_LoTimeout
CPU_peripheralSpec67Reg=PE_SPEC_FEATURE_HasDevice_I2C3
CPU_peripheralSpec68Reg=PE_SPEC_FEATURE_HasDevice_I2C3_LoTimeout
CPU_peripheralSpec69Reg=PE_SPEC_FEATURE_HasDevice_I2S0_MCLK
CPU_peripheralSpec70Reg=PE_SPEC_FEATURE_HasDevice_I2S0_Rx
CPU_peripheralSpec71Reg=PE_SPEC_FEATURE_HasDevice_I2S0
CPU_peripheralSpec72Reg=PE_SPEC_FEATURE_HasDevice_INTC
CPU_peripheralSpec73Reg=PE_SPEC_FEATURE_HasDevice_IRQ
CPU_peripheralSpec74Reg=PE_SPEC_FEATURE_HasDevice_LLWU
CPU_peripheralSpec75Reg=PE_SPEC_FEATURE_HasDevice_LPTMR0_Free
CPU_peripheralSpec76Reg=PE_SPEC_FEATURE_HasDevice_LPTMR0_CMR
CPU_peripheralSpec77Reg=PE_SPEC_FEATURE_HasDevice_LPTMR0_CNR
CPU_peripheralSpec78Reg=PE_SPEC_FEATURE_HasDevice_LPTMR0
CPU_peripheralSpec79Reg=PE_SPEC_FEATURE_HasDevice_LPTMR1_Free
CPU_peripheralSpec7Addr=0
CPU_peripheralSpec7Reg=COP
CPU_peripheralSpec80Reg=PE_SPEC_FEATURE_HasDevice_LPTMR1_CMR
CPU_peripheralSpec81Reg=PE_SPEC_FEATURE_HasDevice_LPTMR1_CNR
CPU_peripheralSpec82Reg=PE_SPEC_FEATURE_HasDevice_LPTMR1
CPU_peripheralSpec83Reg=PE_SPEC_FEATURE_HasDevice_MTIM0_MOD
CPU_peripheralSpec84Reg=PE_SPEC_FEATURE_HasDevice_MTIM0_CNT
CPU_peripheralSpec85Reg=PE_SPEC_FEATURE_HasDevice_MTIM0
CPU_peripheralSpec86Reg=PE_SPEC_FEATURE_HasDevice_MXC
CPU_peripheralSpec87Reg=PE_SPEC_FEATURE_HasDevice_PDB0
CPU_peripheralSpec88Reg=PE_SPEC_FEATURE_HasDevice_PMC
CPU_peripheralSpec89Reg=PE_SPEC_FEATURE_HasDevice_PTA
CPU_peripheralSpec8Reg=PE_SPEC_FEATURE_LDD_COMPONENTS_SUPPORT
CPU_peripheralSpec90Reg=PE_SPEC_FEATURE_HasDevice_PTB
CPU_peripheralSpec91Reg=PE_SPEC_FEATURE_HasDevice_PTC
CPU_peripheralSpec92Reg=PE_SPEC_FEATURE_HasDevice_PTD
CPU_peripheralSpec93Reg=PE_SPEC_FEATURE_HasDevice_PTE
CPU_peripheralSpec94Reg=PE_SPEC_FEATURE_HasDevice_PTF
CPU_peripheralSpec95Reg=PE_SPEC_FEATURE_HasDevice_RCM
CPU_peripheralSpec96Reg=PE_SPEC_FEATURE_HasDevice_RFSYS
CPU_peripheralSpec97Reg=PE_SPEC_FEATURE_HasDevice_RGPIO
CPU_peripheralSpec98Reg=PE_SPEC_FEATURE_HasDevice_RNG
CPU_peripheralSpec99Reg=PE_SPEC_FEATURE_HasDevice_SIM
CPU_peripheralSpec9Reg=PE_SPEC_FEATURE_DAC
MemModelDevSpec0Reg=PE_SPEC_FEATURE_EEE
PMCLVDIntNameSpec1Addr=260
PMCLVDIntNameSpec1Reg=IntVVlvd
PMCLVDIntNameSpec2Addr=65
PMCLVDIntNameSpec2Reg=IntNum
PeriphDevicePMCSpec0Addr=4294934784
PeriphDevicePMCSpec0Reg=PERIPHERAL_BASE_ADDRESS
PeriphDevicePMCSpec2Reg=PE_SPEC_FEATURE_IB_PinMuxing_Common
PeriphDevicePMCSpec3Reg=PE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlus
PeriphDevicePMCSpec4Addr=4294934784
PeriphDevicePMCSpec4Reg=PMC_LVDSC1
PeriphDevicePMCSpec5Addr=4294934785
PeriphDevicePMCSpec5Reg=PMC_LVDSC2
PeriphDevicePMCSpec6Addr=4294934786
PeriphDevicePMCSpec6Reg=PMC_REGSC
PeriphDeviceRCMSpec0Addr=4294934800
PeriphDeviceRCMSpec0Reg=PERIPHERAL_BASE_ADDRESS
PeriphDeviceRCMSpec2Addr=4294934804
PeriphDeviceRCMSpec2Reg=RCM_RPFC
PeriphDeviceRCMSpec3Addr=4294934805
PeriphDeviceRCMSpec3Reg=RCM_RPFW
PeriphDeviceSIMSpec0Addr=4294934720
PeriphDeviceSIMSpec0Reg=PERIPHERAL_BASE_ADDRESS
PeriphDeviceSIMSpec10Addr=4294934742
PeriphDeviceSIMSpec10Reg=SIM_SCGC5
PeriphDeviceSIMSpec11Addr=4294934743
PeriphDeviceSIMSpec11Reg=SIM_SCGC6
PeriphDeviceSIMSpec12Addr=4294934746
PeriphDeviceSIMSpec12Reg=SIM_CLKOUT
PeriphDeviceSIMSpec13Addr=4294934748
PeriphDeviceSIMSpec13Reg=SIM_CLKDIV1
PeriphDeviceSIMSpec2Addr=4294934720
PeriphDeviceSIMSpec2Reg=SIM_SOPT1
PeriphDeviceSIMSpec3Addr=4294934725
PeriphDeviceSIMSpec3Reg=SIM_SOPT6
PeriphDeviceSIMSpec4Addr=4294934730
PeriphDeviceSIMSpec4Reg=SIM_COPC
PeriphDeviceSIMSpec5Addr=4294934731
PeriphDeviceSIMSpec5Reg=SIM_SRVCOP
PeriphDeviceSIMSpec6Addr=4294934738
PeriphDeviceSIMSpec6Reg=SIM_SCGC1
PeriphDeviceSIMSpec7Addr=4294934739
PeriphDeviceSIMSpec7Reg=SIM_SCGC2
PeriphDeviceSIMSpec8Addr=4294934740
PeriphDeviceSIMSpec8Reg=SIM_SCGC3
PeriphDeviceSIMSpec9Addr=4294934741
PeriphDeviceSIMSpec9Reg=SIM_SCGC4
RCMResetPinPortSpec0Reg=GPIO
RCMResetPinPortSpec10Reg=PE_SPEC_FEATURE_IB_InterruptCtrl_ColdFirePlus
RCMResetPinPortSpec11Reg=PE_SPEC_FEATURE_IB_ClockGateCtrl_Common
RCMResetPinPortSpec12Addr=4294934560
RCMResetPinPortSpec12Reg=PTC_D
RCMResetPinPortSpec13Addr=4294934561
RCMResetPinPortSpec13Reg=PTC_DD
RCMResetPinPortSpec14Addr=4294934562
RCMResetPinPortSpec14Reg=PTC_PV
RCMResetPinPortSpec15Reg=PCTLC_PUE
RCMResetPinPortSpec16Reg=PCTLC_PUS
RCMResetPinPortSpec17Reg=PCTLC_DS
RCMResetPinPortSpec18Reg=PCTLC_SRE
RCMResetPinPortSpec19Reg=PCTLC_PFE
RCMResetPinPortSpec1Reg=PTC_BASE_PTR
RCMResetPinPortSpec20Reg=PCTLC_DFE
RCMResetPinPortSpec21Reg=PCTLC_IPE
RCMResetPinPortSpec22Reg=PCTLC_IES
RCMResetPinPortSpec23Reg=PCTLC_DFC
RCMResetPinPortSpec24Reg=PCTLC_IC
RCMResetPinPortSpec25Reg=PE_SPEC_FEATURE_IB_DigitalFilter0
RCMResetPinPortSpec26Reg=PE_SPEC_FEATURE_IB_DigitalFilter1
RCMResetPinPortSpec27Reg=PE_SPEC_FEATURE_IB_DigitalFilter2
RCMResetPinPortSpec28Reg=PE_SPEC_FEATURE_IB_DigitalFilter3
RCMResetPinPortSpec29Reg=PE_SPEC_FEATURE_IB_DigitalFilter4
RCMResetPinPortSpec2Reg=PCTLC_BASE_PTR
RCMResetPinPortSpec30Reg=PE_SPEC_FEATURE_IB_DigitalFilter5
RCMResetPinPortSpec31Reg=PE_SPEC_FEATURE_IB_DigitalFilter6
RCMResetPinPortSpec32Reg=PE_SPEC_FEATURE_IB_DigitalFilter7
RCMResetPinPortSpec33Reg=PE_SPEC_FEATURE_IB_FilterClockSource
RCMResetPinPortSpec34Reg=PE_SPEC_FEATURE_IB_DigitalFilterWidth
RCMResetPinPortSpec35Reg=_0to7
RCMResetPinPortSpec3Reg=PCTLC_IF
RCMResetPinPortSpec4Reg=_Disabled_Low_High_Rising_Falling
RCMResetPinPortSpec5Reg=PE_SPEC_FEATURE_InterruptForcesToInput
RCMResetPinPortSpec6Addr=4294934560
RCMResetPinPortSpec6Reg=PERIPHERAL_BASE_ADDRESS
RCMResetPinPortSpec9Reg=PE_SPEC_FEATURE_IB_PinMuxing_Common
RCMResetPinSpec1Reg=MXC_PTCPF4
RCMResetPinSpec3Reg=PORTC_BASE_PTR


GLOBAL SYMBOLS (alphabet order)
-------------------------------
ADC0AsynchroClockAddr=4294936072
ADC0AsynchroClockReg=ADC0_CFG1
ADC0BusClockAddr=4294936072
ADC0BusClockReg=ADC0_CFG1
ADC0ClkSelAddr=4294936072
ADC0ClkSelReg=ADC0_CFG1
ActiveConfigIdentifier=PEcfg_51JF128VLH_INTERNAL_FLASH
ActiveConfiguration=51JF128VLH_INTERNAL_FLASH
CPUDB_CW_MCU_ID=28718
CPUDB_CW_MCU_NAME=MCF51JF128
CPUDB_DataFlashBlockCount=1
CPUDB_DataFlashEraseUnitSize=1024
CPUDB_DataFlashSize=32768
CPUDB_DataFlashStartAddress=2097152
CPUDB_DataFlashWriteUnitSize=4
CPUDB_FlexRamSize=2048
CPUDB_FlexRamStartAddress=2621440
CPUDB_LQFP64=-1
CPUDB_MCF51JF128=-1
CPUDB_PACKAGE=LQFP64
CPUDB_ProgramFlashBlockCount=1
CPUDB_ProgramFlashEraseUnitSize=1024
CPUDB_ProgramFlashSize=131072
CPUDB_ProgramFlashWriteUnitSize=4
CPU_DB_version=3.00.000
CPUendian=big
CPUfamily=ColdFirePlus
CPUproducer=Freescale
CPUrunSpeedModeNum=1
CPUsubFamily=MCF51JF
CPUtype=MCF51JF128_64
CPUvariant=MCF51JF128VLH
ClientDir_Binary=E:\Project\MQXLite\20121119\Copy of ProcessorExpert_1118\AUDIO_CLASS\Device\Update\USB_AUDIO_DEVICE_JF128_PEx\Sources\
ClientDir_Code=E:\Project\MQXLite\20121119\Copy of ProcessorExpert_1118\AUDIO_CLASS\Device\Update\USB_AUDIO_DEVICE_JF128_PEx\Generated_Code\
ClientDir_PE=E:\Freescale\CW MCU v10.3_121029\MCU\ProcessorExpert\
ClientDir_Project=E:\Project\MQXLite\20121119\Copy of ProcessorExpert_1118\AUDIO_CLASS\Device\Update\USB_AUDIO_DEVICE_JF128_PEx\
CommentBrackets=/**/
Compiler=CodeWarriorMCF
CompilerID=CodeWarrior MCF C Compiler
DirRel_Binary=Sources\
DirRel_BinaryToEvents=
DirRel_Code=Generated_Code\
DirRel_Docs=Documentation\
DirRel_EventToBinary=
DirRel_Events=Sources\
DirRel_ProjectSettings=Project_Settings\
EclipseProjectName=USB_AUDIO_DEVICE_JF128_PEx
InterruptTableType=ROM
Language=ANSIC
Not_for_MPC512x=
OnChipEEPROM=32768
OnChipFLASH=131072
OnChipRAM=32768
PE_DEBUG=
PE_DEVELOPMENT=
PE_ECLIPSE=
PE_GENERATING=
PE_G_CPUCFG_AutoIncludeIO_Map=yes
PE_G_CPUCFG_EntryPointFunctionName=__initialize_hardware
PE_G_CPUCFG_EntryPointFunctionReturn=
PE_G_CPUCFG_EntryPointFunctionReturnType=void
PE_G_CPUCFG_GenerateLinkerFile=yes
PE_G_CPUCFG_GenerateMainModule=yes
PE_G_CPUCFG_InitIntVectorTableSym=yes
PE_G_CPUCFG_ManageInterruptVectorTable=yes
PE_G_CPUCR_val=67108864
PE_G_CPUpinVariantMaster=MCF51JF128_64
PE_G_CRI_CPUINIT_set0_INTC_IMRL=2
PE_G_CRI_CPUINIT_set0_MXC_PTBPF2=13
PE_G_CRI_CPUINIT_set0_MXC_PTCPF4=208
PE_G_CRI_CPUINIT_set1_INTC_IMRL=0
PE_G_CRI_CPUINIT_set1_MXC_PTBPF2=2
PE_G_CRI_CPUINIT_set1_MXC_PTCPF4=32
PE_G_InternalMethodDescriptionNotFound=
PE_G_MisraCnfBackParams_0=
PE_G_MisraCnfBackParams_1=
PE_G_MisraCnfParams_0= -e621
PE_G_MisraCnfParams_1=
PE_G_MisraRuleList_0=1.4
PE_G_MisraRuleList_1=
PE_G_MisraStackIdx=0
PE_G_NO_SETREGMACROS=
PE_G_RTOSAdap_regCompIndex=0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDevice1msTimer=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceError=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceReset=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceResume=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSetupPacket=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSof=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSpeedDetect=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSuspend=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDevice1msTimer=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDevice1msTimer
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceError=(void (*)(LDD_TUserData *UserDataPtr, uint8_t ErrorSource, uint8_t ErrorCode))&USB_LDD_USB_LDD_OnDeviceError
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceReset=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDeviceReset
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceResume=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDeviceResume
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSetupPacket=(void (*)(LDD_TUserData *UserDataPtr, uint8_t EpNum))&USB_LDD_USB_LDD_OnDeviceSetupPacket
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSof=(void (*)(LDD_TUserData *UserDataPtr, uint16_t FrameNumber))&USB_LDD_USB_LDD_OnDeviceSof
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSpeedDetect=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_TBusSpeed CurrentSpeed))&USB_LDD_USB_LDD_OnDeviceSpeedDetect
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSuspend=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDeviceSuspend
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHost1msTimer=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostDeviceDeattach=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostError=(void (*)(LDD_TUserData *UserDataPtr, uint8_t ErrorSource, uint8_t ErrorCode))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResetRecovery=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_TBusSpeed CurrentSpeed))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResumeRecovery=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgDevice=(void (*)(LDD_TUserData *UserDataPtr, bool Enabled))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgHost=(void (*)(LDD_TUserData *UserDataPtr, bool Enabled))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgStateChange=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_Otg_TState NewState))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnSignalChange=(void (*)(LDD_TUserData *UserDataPtr, LDD_TPinMask SignalMask, LDD_TPinMask SignalValue))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Deinit=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceAssertResume=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceCancelTransfer=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceDeinitEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetTransferStatus=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetUsbStatus=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceInitEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceReadSetupData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceRecvData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSendData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetAddress=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetUsbStatus=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceStallEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceUnstallEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Disable=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Enable=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Init=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_ConnectPin=(LDD_TError (*)(LDD_TDeviceDataPtr *DeviceData, LDD_TPinMask PinMask))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Deinit=(void (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Deinit
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceAssertResume=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_DeviceAssertResume
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceCancelTransfer=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceCancelTransfer
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceDeinitEndpoint=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceDeinitEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetTransferStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceGetTransferStatus
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetUsbStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint16_t Id, uint16_t *CmdStatusPtr))&USB_LDD_DeviceGetUsbStatus
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceInitEndpoint=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_TEpDescriptor *EpDescriptorPtr, uint8_t Flags))&USB_LDD_DeviceInitEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceReadSetupData=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, LDD_USB_TSDP *SDPPtr))&USB_LDD_DeviceReadSetupData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceRecvData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Device_TTD *TransferDescriptorPtr))&USB_LDD_DeviceRecvData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSendData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Device_TTD *TransferDescriptorPtr))&USB_LDD_DeviceSendData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetAddress=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t Address))&USB_LDD_DeviceSetAddress
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetUsbStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint16_t Id, uint16_t Cmd))&USB_LDD_DeviceSetUsbStatus
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceStallEndpoint=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceStallEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceUnstallEndpoint=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceUnstallEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Disable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Disable
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Enable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Enable
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetDriverState=(LDD_TDriverState (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetEventMask=(LDD_TEventMask (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostCancelTransfer=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeDescr *PipeHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostClosePipe=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetFrameNumber=(uint16_t (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetMicroFrameNumber=(uint8_t (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetPortState=(LDD_USB_Host_TState (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetTransferStatus=(LDD_USB_TTransferState (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TTransferHandle *TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostOpenPipe=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeDescr *PipeInitParamsPtr, LDD_USB_Host_TPipeHandle **PipeHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostRecvData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendSetup=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSetPortState=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPortControlCmd Cmd))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Init=(LDD_TDeviceData * (*)(LDD_TUserData *UserDataPtr))&USB_LDD_Init
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Main=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgCmd=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Otg_TCmd Cmd))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterDevice=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterHost=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetEventMask=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetOperationMode=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TDriverOperationMode OperationMode, LDD_TCallback ModeChangeCallback, LDD_TCallbackParam *ModeChangeCallbackParamPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetSignal=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TPinMask SignalMask, LDD_TPinMask SignalValue))0
PE_G_USE_UINTXX_T=
PE_ProductVersion=10.0
PEversion=05.03
PEversionDecimal=1283
ProcessorModule=Cpu
ProcessorName=Cpu
ProjectModule=ProcessorExpert
ProjectName=ProcessorExpert
ServerDir_PE=E:\Freescale\CW MCU v10.3_121029\MCU\ProcessorExpert\
SetHighSpeedMode=
SupportedCPUfamily=
TimeStamp=2012-11-19, 08:58, # CodeGen: 20
Xtal_kHz=4000
Xtal_kHz_real=4000
ivVusb0=USB_LDD_USB_Interrupt
virtual_ADC0_TotalConversionPrescalerAddr=4294936072
virtual_ADC0_TotalConversionPrescalerReg=ADC0_CFG1

 DEPRECATED GLOBAL SYMBOLS (alphabet order)
-------------------------------------------
ADC0AsynchroClockAddr=null
ADC0AsynchroClockReg=null
ADC0BusClockAddr=null
ADC0BusClockReg=null
ADC0ClkSelAddr=null
ADC0ClkSelReg=null
ActiveConfigIdentifier=null
ActiveConfiguration=null
CPUDB_CW_MCU_ID=null
CPUDB_CW_MCU_NAME=null
CPUDB_DataFlashBlockCount=null
CPUDB_DataFlashEraseUnitSize=null
CPUDB_DataFlashSize=null
CPUDB_DataFlashStartAddress=null
CPUDB_DataFlashWriteUnitSize=null
CPUDB_FlexRamSize=null
CPUDB_FlexRamStartAddress=null
CPUDB_LQFP64=null
CPUDB_MCF51JF128=null
CPUDB_PACKAGE=null
CPUDB_ProgramFlashBlockCount=null
CPUDB_ProgramFlashEraseUnitSize=null
CPUDB_ProgramFlashSize=null
CPUDB_ProgramFlashWriteUnitSize=null
CPU_DB_version=null
CPUendian=null
CPUfamily=null
CPUproducer=null
CPUrunSpeedModeNum=null
CPUsubFamily=null
CPUtype=null
CPUvariant=null
ClientDir_Binary=null
ClientDir_Code=null
ClientDir_PE=null
ClientDir_Project=null
CommentBrackets=null
Compiler=null
CompilerID=null
DirRel_Binary=null
DirRel_BinaryToEvents=null
DirRel_Code=null
DirRel_Docs=null
DirRel_EventToBinary=null
DirRel_Events=null
DirRel_ProjectSettings=null
EclipseProjectName=null
InterruptTableType=null
Language=null
Not_for_MPC512x=null
OnChipEEPROM=null
OnChipFLASH=null
OnChipRAM=null
PE_DEBUG=null
PE_DEVELOPMENT=null
PE_ECLIPSE=null
PE_GENERATING=null
PE_G_CPUCFG_AutoIncludeIO_Map=null
PE_G_CPUCFG_EntryPointFunctionName=null
PE_G_CPUCFG_EntryPointFunctionReturn=null
PE_G_CPUCFG_EntryPointFunctionReturnType=null
PE_G_CPUCFG_GenerateLinkerFile=null
PE_G_CPUCFG_GenerateMainModule=null
PE_G_CPUCFG_InitIntVectorTableSym=null
PE_G_CPUCFG_ManageInterruptVectorTable=null
PE_G_CPUCR_val=null
PE_G_CPUpinVariantMaster=null
PE_G_CRI_CPUINIT_set0_INTC_IMRL=null
PE_G_CRI_CPUINIT_set0_MXC_PTBPF2=null
PE_G_CRI_CPUINIT_set0_MXC_PTCPF4=null
PE_G_CRI_CPUINIT_set1_INTC_IMRL=null
PE_G_CRI_CPUINIT_set1_MXC_PTBPF2=null
PE_G_CRI_CPUINIT_set1_MXC_PTCPF4=null
PE_G_InternalMethodDescriptionNotFound=null
PE_G_MisraCnfBackParams_0=null
PE_G_MisraCnfBackParams_1=null
PE_G_MisraCnfParams_0=null
PE_G_MisraCnfParams_1=null
PE_G_MisraRuleList_0=null
PE_G_MisraRuleList_1=null
PE_G_MisraStackIdx=null
PE_G_NO_SETREGMACROS=null
PE_G_RTOSAdap_regCompIndex=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDevice1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceReset=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSetupPacket=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSof=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSpeedDetect=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSuspend=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDevice1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceReset=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSetupPacket=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSof=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSpeedDetect=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSuspend=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHost1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostDeviceDeattach=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResetRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResumeRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgDevice=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgHost=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgStateChange=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnSignalChange=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Deinit=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceAssertResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceDeinitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceInitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceReadSetupData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetAddress=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceStallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceUnstallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Disable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Enable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Init=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_ConnectPin=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Deinit=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceAssertResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceDeinitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceInitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceReadSetupData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetAddress=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceStallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceUnstallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Disable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Enable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetDriverState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostClosePipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetMicroFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostOpenPipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendSetup=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Init=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Main=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgCmd=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterDevice=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterHost=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetOperationMode=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetSignal=null
PE_G_USE_UINTXX_T=null
PE_ProductVersion=null
PEversion=null
PEversionDecimal=null
ProcessorModule=null
ProcessorName=null
ProjectModule=null
ProjectName=null
ServerDir_PE=null
SetHighSpeedMode=null
SupportedCPUfamily=null
TimeStamp=null
Xtal_kHz=null
Xtal_kHz_real=null
ivVusb0=null
virtual_ADC0_TotalConversionPrescalerAddr=null
virtual_ADC0_TotalConversionPrescalerReg=null

 GLOBAL LISTS (alphabet order)
-------------------------------------------
ADC0AsynchroClock=[1]
ADC0AsynchroClock_Setting=[ADC0Async_FullPower_HighSpeed]
ADC0BusClock=[1]
ADC0BusClock_Setting=[1]
ADC0ClkSel=[1]
ADC0ClkSel_Setting=[ADC0BusClock]
CMTPresc=[1]
CMTPresc_Setting=[1]
CMTPrimaryPresc=[1]
CMTPrimaryPresc_Setting=[1]
COPClkSelect=[1]
COPClkSelect_Setting=[COPBusClock]
EventModuleList=[Events]
ExternalModuleExts=[C]
ExternalModuleRelDir=[..\sources\]
ExternalModules=[startcf]
FTM0ClkSource=[1]
FTM0ClkSource_Setting=[CPUCLK]
FTM1ClkSource=[1]
FTM1ClkSource_Setting=[CPUCLK]
I2C0_LoTimeoutClkSel=[1]
I2C0_LoTimeoutClkSel_Setting=[I2C0_LoTimeout_BusClkDiv64]
I2C1_LoTimeoutClkSel=[1]
I2C1_LoTimeoutClkSel_Setting=[I2C1_LoTimeout_BusClkDiv64]
I2C2_LoTimeoutClkSel=[1]
I2C2_LoTimeoutClkSel_Setting=[I2C2_LoTimeout_BusClkDiv64]
I2C3_LoTimeoutClkSel=[1]
I2C3_LoTimeoutClkSel_Setting=[I2C3_LoTimeout_BusClkDiv64]
I2S0_ClkSel=[1]
I2S0_ClkSel_Setting=[CPUCLK]
I2S0_MclkClkSel=[1]
I2S0_MclkClkSel_Setting=[I2S0_MclkDiv]
I2S0_MclkDiv=[1]
I2S0_MclkDiv_Setting=[1]
I2S0_MclkPinSource_Setting=[I2S0_MclkDiv]
I2S0_RxClkMode=[1]
I2S0_RxClkMode_Setting=[BUSCLK]
I2S0_TxClkMode=[1]
I2S0_TxClkMode_Setting=[BUSCLK]
IRCLKSel=[1]
IRCLKSel_Setting=[IRC_32kHz]
IncludeSharedModules=[PE_Types|PE_Error|PE_Const|IO_Map]
InstructionClock=[undef]
LPTMR0_ClockSelect=[1]
LPTMR0_ClockSelect_Setting=[IRCLK]
LPTMR1_ClockSelect=[1]
LPTMR1_ClockSelect_Setting=[IRCLK]
MCGOUTSel=[1]
MCGOUTSel_Setting=[MCGFLLCLK]
MCG_FLL_MFactor=[1464]
MCG_FLL_MFactor_Setting=[1464]
MCG_FLL_RCLKSel=[1]
MCG_FLL_RCLKSel_Setting=[IRC_32kHz]
MCG_FRDIV=[1]
MCG_FRDIV_Setting=[1]
MCG_PRDIV=[1]
MCG_PRDIV_Setting=[1]
MCG_VDIV=[24]
MCG_VDIV_Setting=[24]
MTIM0ClkSource=[1]
MTIM0ClkSource_Setting=[BUSCLK]
ModuleList=[usb_audio|usb_device|USB_LDD]
OUTDIV=[1]
OUTDIV_Setting=[1]
PE_G_4PEx_ToolChain_Compiler_SearchUserPaths=["${ProcessorExpertPath}/lib/ColdFirePlus/iofiles"|"${ProcessorExpertPath}/lib/ColdFirePlus/pdd/inc"|"${ProjDirPath}/Sources"|"${ProjDirPath}/Generated_Code"]
PE_G_CRI_CPUINIT_RegList32=[INTC_IMRL]
PE_G_CRI_CPUINIT_RegList8=[MXC_PTBPF2|MXC_PTCPF4]
PE_G_CRI_CPUINIT_inited=[MXC_PTBPF2|MXC_PTCPF4|INTC_IMRL]
PE_G_LCF_DATA_ALIGN=[512]
PE_G_LCF_DATA_SECTION=[.USB_LDD_memory_section]
PE_G_RTOSAdap_regCompInstanceAllocatedDevices=[USB0]
PE_G_RTOSAdap_regCompInstanceDeviceBaseAddrs=[4294938624]
PE_G_RTOSAdap_regCompInstanceIds=[0]
PE_G_RTOSAdap_regCompInstanceNames=[USB_LDD]
PE_G_RTOSAdap_regCompInstanceSharedComponentName=[USB_LDD]
PE_G_RTOSAdap_regCompInstanceTypes=[USB_LDD]
PE_G_RTOSAdap_regCompInstance_USB_LDD_events=[OnDeviceReset|OnDeviceSpeedDetect|OnDeviceSuspend|OnDeviceResume|OnDeviceSetupPacket|OnDeviceSof|OnDeviceError|OnDevice1msTimer|OnHostDeviceDeattach|OnHostResetRecovery|OnHostResumeRecovery|OnHostError|OnHost1msTimer|OnOtgDevice|OnOtgHost|OnOtgStateChange|OnSignalChange]
PE_G_RTOSAdap_regCompInstance_USB_LDD_methods=[Init|Deinit|SetEventMask|GetEventMask|Enable|Disable|DeviceGetUsbStatus|DeviceSetUsbStatus|DeviceSetAddress|DeviceAssertResume|DeviceInitEndpoint|DeviceDeinitEndpoint|DeviceStallEndpoint|DeviceUnstallEndpoint|DeviceReadSetupData|DeviceSendData|DeviceRecvData|DeviceGetTransferStatus|DeviceCancelTransfer|HostGetPortState|HostSetPortState|HostGetFrameNumber|HostGetMicroFrameNumber|HostOpenPipe|HostClosePipe|HostSendSetup|HostSendData|HostRecvData|HostGetTransferStatus|HostCancelTransfer|OtgRegisterDevice|OtgRegisterHost|OtgCmd|SetSignal|ConnectPin|Main|SetOperationMode|GetDriverState]
ProjectSharedModulesC=[Vectors|PE_LDD]
SPI0_BaudRatePrescDiv=[1]
SPI0_BaudRatePrescDiv_Setting=[1]
SPI1_BaudRatePrescDiv=[1]
SPI1_BaudRatePrescDiv_Setting=[1]
SharedModules=[ColdFirePlus\PE_Types.drv|ColdFirePlus\PE_Error.drv|ColdFirePlus\PE_Const.drv|ColdFirePlus\IO_Map.drv]
SpeedModeList=[SpeedMode0]
SpeedModeNames=[SpeedMode0|SpeedMode1|SpeedMode2|SpeedMode3|SpeedMode4|SpeedMode5|SpeedMode6|SpeedMode7]
SystemPrescaler=[1]
SystemPrescaler_Setting=[1]
USB0_ClkSel=[1]
USB0_ClkSel_Setting=[USB0_FLL0Div]
USB0_FLL0Div=[1]
USB0_FLL0Div_Setting=[1]
USB0_FLL0Frac=[1]
USB0_FLL0Frac_Setting=[1]
USB0_PLL0Div=[1]
USB0_PLL0Div_Setting=[1]
USB0_PLL0Frac=[1]
USB0_PLL0Frac_Setting=[1]
virtual_ADC0_TotalConversionPrescaler=[1]
virtual_ADC0_TotalConversionPrescaler_Setting=[1]

{{DEVELOPMENT}} --------(((DEBUGINFO)))--------.{{DEVELOPMENT}} 

