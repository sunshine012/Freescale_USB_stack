
{{DEVELOPMENT}} --------(((DEBUGINFO)))--------{{DEVELOPMENT}} 

 DRIVER SYMBOLS (alphabet order)
-------------------------------
Abstract=Common\USB_MSD_CLASSAbstract.Inc
CONFIG_ONLY_DESC_SIZE=09
DEVICE_DESCRIPTOR_SIZE=12
Description_USB_Other_Requests=The funtion provides flexibilty to add class and vendor specific requests
Description_msc_thirteen_cases_check=The function checks for thirteen error case of MSC and takes action appropriately
Description_process_mass_storage_command=This function is added here to add more sub class specific commands
DriverAuthor=Author
DriverDate=28.12.2011
DriverVersion=01.00
EndOfInterface=
Endpoint_suffix=0_1
Interface_suffix=0
Para=
Paralt_interface=
Parapp_buff=
Parb=
Parcallback=
Parcbw_ptr=
Parconfig_val=
Parcontroller_ID=
Parcsw_residue_ptr=
Parcsw_status_ptr=
Pardata=
Pardescriptor=
Pardirection=
Pardst=
Parep_num=
Parevent=
Parindex=
Parinterface=
Parlba_info_ptr=
Parmsc_check_event=
Parmsc_class_callback=
Parparam_callback=
Parptr=
Parsetup_packet=
Parsize=
Parsrc=
Parstr_num=
Partype=
Parval=
Parvendor_req_callback=
RetVal=
Settings=Common\USB_MSD_CLASSSettings.Inc
String_cur_index=2
USB_CONFIG_DESCRIPTOR=02
USB_DESC_CONST=
USB_DEVICE_DESCRIPTOR=01
_AlternateSetting=0
_Attributes=2
_Configuration_Index=0
_Configuration_Value=1
_DESC_ENDPOINT_COUNT=2
_EndpointAddress=2
_EndpointDirection=0
_EndpointMaxPacketSize=32
_EndpointMaxPacketSize_high=0
_EndpointMaxPacketSize_low=32
_EndpointNumber=2
_InterfaceClass=8
_InterfaceNumber=0
_InterfaceProtocol=80
_InterfaceSubClass=6
_Interface_des_index=0
_Interval=0
_NumConfigurations=1
_NumEndpoints=2
_NumInterfaces=1
_Product_ID=512
_Product_ID_high=2
_Product_ID_low=0
_Release_num=2
_Release_num_high=0
_Release_num_low=2
_Synchronisation_Type=0
_Transfer_Type=2
_Usage_Type=0
_Vendor_ID=5538
_Vendor_ID_high=21
_Vendor_ID_low=162
_max_str_des=5
str=0123456789ABCDEF
str_des_cur_index=2
str_des_size_temp=32

 LOCAL SYMBOLS (alphabet order)
-------------------------------
BeanVersion=01.027
Bulk_in_number=1
Bulk_out_number=2
CHG_BeanIsEnabled=yes
DeviceName=usb_msc
DeviceType=USB_MSD_CLASS
EP_IN_max_packet_size=32
EP_OUT_max_packet_size=32
Ep0_max_packet_size=32
Interface_number=0
MSD_Mode=DEVICE
ModuleName=usb_msc
Protocol=80
Speed=FULL SPEED
Subclass=06
USB_BYTE_SWAP4=USB_BYTE_SWAP4
USB_BYTE_SWAP4_Hint=void usb_msc_USB_BYTE_SWAP4(uint_32 a, uint_32 *b);
USB_BYTE_SWAP4_HintHint=SWAP four consecutive bytes to correct the endianness of data received
USB_BYTE_SWAP4_HintHintLong=SWAP four consecutive bytes to correct the endianness of data received
USB_Class_MSC_DeInit=USB_Class_MSC_DeInit
USB_Class_MSC_DeInit_Hint=uint_8 usb_msc_USB_Class_MSC_DeInit(uint_8 controller_ID);
USB_Class_MSC_DeInit_HintHint=The funtion de-initializes the Device and Controller layer
USB_Class_MSC_DeInit_HintHintLong=The funtion de-initializes the Device and Controller layer
USB_Class_MSC_Event=USB_Class_MSC_Event
USB_Class_MSC_Event_Hint=void usb_msc_USB_Class_MSC_Event(uint_8 controller_ID, uint_8 event, void* val);
USB_Class_MSC_Event_HintHint=The funtion initializes MSC endpoints
USB_Class_MSC_Event_HintHintLong=The funtion initializes MSC endpoints
USB_Class_MSC_Init=USB_Class_MSC_Init
USB_Class_MSC_Init_Hint=uint_8 usb_msc_USB_Class_MSC_Init(uint_8 controller_ID, USB_CLASS_CALLBACK...
USB_Class_MSC_Init_HintHint=This function initializes the MSC Class layer and layers it is dependednt on
USB_Class_MSC_Init_HintHintLong=This function initializes the MSC Class layer and layers it is dependednt on
USB_Class_MSC_Send_Data=USB_Class_MSC_Send_Data
USB_Class_MSC_Send_Data_Hint=uint_8 usb_msc_USB_Class_MSC_Send_Data(uint_8 controller_ID, uint_8 ep_num,...
USB_Class_MSC_Send_Data_HintHint=This fucntion is used by Application to send data through MSC class
USB_Class_MSC_Send_Data_HintHintLong=This fucntion is used by Application to send data through MSC class
USB_MSC_LBA_Transfer=USB_MSC_LBA_Transfer
USB_MSC_LBA_Transfer_Hint=uint_8 usb_msc_USB_MSC_LBA_Transfer(uint_8 controller_ID, bool direction,...
USB_MSC_LBA_Transfer_HintHint=This fucntion is used to send data in Local Block Address format
USB_MSC_LBA_Transfer_HintHintLong=This fucntion is used to send data in Local Block Address format
USB_MSC_SCSI_Init=USB_MSC_SCSI_Init
USB_MSC_SCSI_Init_Hint=uint_8 usb_msc_USB_MSC_SCSI_Init(uint_8 controller_ID, USB_CLASS_CALLBACK...
USB_MSC_SCSI_Init_HintHint=The funtion initializes the SCSI parameters and callbacks
USB_MSC_SCSI_Init_HintHintLong=The funtion initializes the SCSI parameters and callbacks
USB_Service_Bulk_In=USB_Service_Bulk_In
USB_Service_Bulk_In_Hint=void usb_msc_USB_Service_Bulk_In(PTR_USB_DEV_EVENT_STRUCT event);
USB_Service_Bulk_In_HintHint=The funtion is callback function of DIC Bulk In Endpoint
USB_Service_Bulk_In_HintHintLong=The funtion is callback function of DIC Bulk In Endpoint
USB_Service_Bulk_Out=USB_Service_Bulk_Out
USB_Service_Bulk_Out_Hint=void usb_msc_USB_Service_Bulk_Out(PTR_USB_DEV_EVENT_STRUCT event);
USB_Service_Bulk_Out_HintHint=The function is callback function of DIC Bulk Out Endpoint
USB_Service_Bulk_Out_HintHintLong=The function is callback function of DIC Bulk Out Endpoint
USB_memcopy=USB_memcopy
USB_memcopy_Hint=void usb_msc_USB_memcopy(void* src, void* dst, uint_32 size);
USB_memcopy_HintHint=To copy data from one memory location to another
USB_memcopy_HintHintLong=To copy data from one memory location to another
USB_memzero=USB_memzero
USB_memzero_Hint=void usb_msc_USB_memzero(void* ptr, uint_32 size);
USB_memzero_HintHint=To clear the buffer
USB_memzero_HintHintLong=To clear the buffer
Usb_device_component=usb_device
Usb_device_component_Template=Usb_Device
msc_format_unit_command=msc_format_unit_command
msc_format_unit_command_Hint=uint_8 usb_msc_msc_format_unit_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_format_unit_command_HintHint=host sends the FORMAT UNIT command to physically format a floppy disk...
msc_format_unit_command_HintHintLong=host sends the FORMAT UNIT command to physically format a floppy disk according to selected options
msc_inquiry_command=msc_inquiry_command
msc_inquiry_command_Hint=uint_8 usb_msc_msc_inquiry_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_inquiry_command_HintHint=It requests that information regarding parameters of the Device be sent to...
msc_inquiry_command_HintHintLong=It requests that information regarding parameters of the Device be sent to the Host Computer
msc_mode_select_command=msc_mode_select_command
msc_mode_select_command_Hint=uint_8 usb_msc_msc_mode_select_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_mode_select_command_HintHint=command provides a means for a Device to report parameters to Host...
msc_mode_select_command_HintHintLong=command provides a means for a Device to report parameters to Host Computer.It is a complementary command to the MODE SENSE command.
msc_mode_sense_command=msc_mode_sense_command
msc_mode_sense_command_Hint=uint_8 usb_msc_msc_mode_sense_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_mode_sense_command_HintHint=command provides a means for a Device to report parameters to Host...
msc_mode_sense_command_HintHintLong=command provides a means for a Device to report parameters to Host Computer.It is a complementary command to the MODE SELECT command.
msc_prevent_allow_medium_removal=msc_prevent_allow_medium_removal
msc_prevent_allow_medium_removal_Hint=uint_8 usb_msc_msc_prevent_allow_medium_removal(uint_8 controller_ID, PTR_CBW...
msc_prevent_allow_medium_removal_HintHint=command tells the UFI device to enable or disable the removal of the medium...
msc_prevent_allow_medium_removal_HintHintLong=command tells the UFI device to enable or disable the removal of the medium in the logical unit.
msc_read_capacity_command=msc_read_capacity_command
msc_read_capacity_command_Hint=uint_8 usb_msc_msc_read_capacity_command(uint_8 controller_ID, PTR_CBW...
msc_read_capacity_command_HintHint=command provides a means for the host computer to request informationc...
msc_read_capacity_command_HintHintLong=command provides a means for the host computer to request informationc regarding the capacity of the installed medium of the device.
msc_read_command=msc_read_command
msc_read_command_Hint=uint_8 usb_msc_msc_read_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_read_command_HintHint=command requests that device transfer data to the host computer
msc_read_command_HintHintLong=command requests that device transfer data to the host computer
msc_read_format_capacity_command=msc_read_format_capacity_command
msc_read_format_capacity_command_Hint=uint_8 usb_msc_msc_read_format_capacity_command(uint_8 controller_ID, PTR_CBW...
msc_read_format_capacity_command_HintHint=command allows the host to request a list of the possible capacities that can...
msc_read_format_capacity_command_HintHintLong=command allows the host to request a list of the possible capacities that can be formatted on the currently installed medium
msc_request_sense_command=msc_request_sense_command
msc_request_sense_command_Hint=uint_8 usb_msc_msc_request_sense_command(uint_8 controller_ID, PTR_CBW...
msc_request_sense_command_HintHint=command instructs the Device to transfer sense data to host computer
msc_request_sense_command_HintHintLong=command instructs the Device to transfer sense data to host computer
msc_send_diagnostic_command=msc_send_diagnostic_command
msc_send_diagnostic_command_Hint=uint_8 usb_msc_msc_send_diagnostic_command(uint_8 controller_ID, PTR_CBW...
msc_send_diagnostic_command_HintHint=requests the device to perform self test
msc_send_diagnostic_command_HintHintLong=requests the device to perform self test
msc_start_stop_unit_command=msc_start_stop_unit_command
msc_start_stop_unit_command_Hint=uint_8 usb_msc_msc_start_stop_unit_command(uint_8 controller_ID, PTR_CBW...
msc_start_stop_unit_command_HintHint=command instructs device to enable or disable media access operations
msc_start_stop_unit_command_HintHintLong=command instructs device to enable or disable media access operations
msc_test_unit_ready_command=msc_test_unit_ready_command
msc_test_unit_ready_command_Hint=uint_8 usb_msc_msc_test_unit_ready_command(uint_8 controller_ID, PTR_CBW...
msc_test_unit_ready_command_HintHint=It provides a means to check if the device is ready
msc_test_unit_ready_command_HintHintLong=It provides a means to check if the device is ready
msc_unsupported_command=msc_unsupported_command
msc_unsupported_command_Hint=uint_8 usb_msc_msc_unsupported_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_unsupported_command_HintHint=Responds appropriately to unsupported commands
msc_unsupported_command_HintHintLong=Responds appropriately to unsupported commands
msc_verify_command=msc_verify_command
msc_verify_command_Hint=uint_8 usb_msc_msc_verify_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_verify_command_HintHint=command requests that device verifies the data on medium
msc_verify_command_HintHintLong=command requests that device verifies the data on medium
msc_write_command=msc_write_command
msc_write_command_Hint=uint_8 usb_msc_msc_write_command(uint_8 controller_ID, PTR_CBW cbw_ptr,...
msc_write_command_HintHint=command requests that the Device write the data transferred by the Host...
msc_write_command_HintHintLong=command requests that the Device write the data transferred by the Host Computer to the medium.
runSpeedModeNum=1
BeanUserCopyright=[(c) Copyright <company/user-name>, 2011|http      : www.<company>.com|mail      : info@<company>.com]
InhrSymbolList=[Usb_device_component]
MethodHintList=[void usb_msc_USB_Service_Bulk_In(PTR_USB_DEV_EVENT_STRUCT event);|void usb_msc_USB_Service_Bulk_Out(PTR_USB_DEV_EVENT_STRUCT event);|void usb_msc_USB_Class_MSC_Event(uint_8 controller_ID, uint_8 event, void* val);|void usb_msc_USB_BYTE_SWAP4(uint_32 a, uint_32 *b);|void usb_msc_USB_memzero(void* ptr, uint_32 size);|void usb_msc_USB_memcopy(void* src, void* dst, uint_32 size);|uint_8 usb_msc_USB_Class_MSC_Init(uint_8 controller_ID, USB_CLASS_CALLBACK msc_class_callback, USB_REQ_FUNC vendor_req_callback, USB_CLASS_CALLBACK param_callback);|uint_8 usb_msc_USB_Class_MSC_DeInit(uint_8 controller_ID);|uint_8 usb_msc_USB_MSC_LBA_Transfer(uint_8 controller_ID, bool direction, PTR_LBA_INFO_STRUCT lba_info_ptr);|uint_8 usb_msc_USB_Class_MSC_Send_Data(uint_8 controller_ID, uint_8 ep_num, uint_8_ptr app_buff, uint_32 size);|uint_8 usb_msc_USB_MSC_SCSI_Init(uint_8 controller_ID, USB_CLASS_CALLBACK callback);|uint_8 usb_msc_msc_request_sense_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_inquiry_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_read_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_write_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_test_unit_ready_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_verify_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_mode_sense_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_mode_select_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_read_capacity_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_read_format_capacity_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_format_unit_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_prevent_allow_medium_removal(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_start_stop_unit_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_send_diagnostic_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);|uint_8 usb_msc_msc_unsupported_command(uint_8 controller_ID, PTR_CBW cbw_ptr, uint_32 *csw_residue_ptr, uint_8 *csw_status_ptr);]
MethodList=[USB_Service_Bulk_In|USB_Service_Bulk_Out|USB_Class_MSC_Event|USB_BYTE_SWAP4|USB_memzero|USB_memcopy|USB_Class_MSC_Init|USB_Class_MSC_DeInit|USB_MSC_LBA_Transfer|USB_Class_MSC_Send_Data|USB_MSC_SCSI_Init|msc_request_sense_command|msc_inquiry_command|msc_read_command|msc_write_command|msc_test_unit_ready_command|msc_verify_command|msc_mode_sense_command|msc_mode_select_command|msc_read_capacity_command|msc_read_format_capacity_command|msc_format_unit_command|msc_prevent_allow_medium_removal|msc_start_stop_unit_command|msc_send_diagnostic_command|msc_unsupported_command]
runSpeedMode=[Yes]

GLOBAL SYMBOLS (alphabet order)
-------------------------------
ADC0AsynchroClockAddr=1073983496
ADC0AsynchroClockReg=ADC0_CFG1
ADC0BusClockAddr=1073983496
ADC0BusClockReg=ADC0_CFG1
ADC0ClkSelAddr=1073983496
ADC0ClkSelReg=ADC0_CFG1
ActiveConfigIdentifier=PEcfg_FLASH
ActiveConfiguration=FLASH
CPUDB_BUS_FREQ_HZ_MAX=24000000
CPUDB_CPU_MASTER=MKL25Z4
CPUDB_CW_MCU_ID=28695
CPUDB_CW_MCU_NAME=MKL25Z128xxx4
CPUDB_LQFP80=-1
CPUDB_MKL25Z128xxx4=-1
CPUDB_MKL25Z4=-1
CPUDB_PACKAGE=LQFP80
CPUDB_PLL_INPUT_FREQ_HZ_MAX=4000000
CPUDB_PLL_INPUT_FREQ_HZ_MIN=2000000
CPUDB_PLL_OUTPUT_FREQ_HZ_MAX=100000000
CPUDB_PLL_OUTPUT_FREQ_HZ_MIN=48000000
CPUDB_ProgramFlashBlockCount=1
CPUDB_ProgramFlashEraseUnitSize=1024
CPUDB_ProgramFlashSize=131072
CPUDB_ProgramFlashWriteUnitSize=4
CPUDB_SYSTEM_FREQ_HZ_MAX=48000000
CPU_DB_version=3.00.000
CPUendian=little
CPUfamily=Kinetis
CPUproducer=Freescale
CPUrunSpeedModeNum=1
CPUsubFamily=MKL25
CPUtype=MKL25Z128LK4
CPUvariant=MKL25Z128VLK4
ClientDir_Binary=E:\USB_proccessor_expert_update\Test\20121119_Processor_expert\MSD_CLASS\DEVICE\USB_MSD_DEVICE_MKL25Z128_PEx\Sources\
ClientDir_Code=E:\USB_proccessor_expert_update\Test\20121119_Processor_expert\MSD_CLASS\DEVICE\USB_MSD_DEVICE_MKL25Z128_PEx\Generated_Code\
ClientDir_PE=D:\FreeScale\CW MCU v10.3_B121029\MCU\ProcessorExpert\
ClientDir_Project=E:\USB_proccessor_expert_update\Test\20121119_Processor_expert\MSD_CLASS\DEVICE\USB_MSD_DEVICE_MKL25Z128_PEx\
CommentBrackets=/**/
Compiler=GNUC
CompilerID=GNU C Compiler
DirRel_Binary=Sources\
DirRel_BinaryToEvents=
DirRel_Code=Generated_Code\
DirRel_Docs=Documentation\
DirRel_EventToBinary=
DirRel_Events=Sources\
DirRel_ProjectSettings=Project_Settings\
EclipseProjectName=USB_MSD_DEVICE_MKL25Z128_PEx
InterruptTableType=ROM
Language=ANSIC
Not_for_MPC512x=
OnChipEEPROM=0
OnChipFLASH=131072
OnChipRAM=16384
PE_DEBUG=
PE_DEVELOPMENT=
PE_ECLIPSE=
PE_GENERATING=
PE_G_CPUCFG_AutoIncludeIO_Map=yes
PE_G_CPUCFG_EntryPointFunctionName=__init_hardware
PE_G_CPUCFG_EntryPointFunctionReturn=
PE_G_CPUCFG_EntryPointFunctionReturnType=void __attribute__ ((constructor))
PE_G_CPUCFG_GenerateLinkerFile=yes
PE_G_CPUCFG_GenerateMainModule=yes
PE_G_CPUCFG_InitIntVectorTableSym=yes
PE_G_CPUCFG_ManageInterruptVectorTable=yes
PE_G_GenBitMask=
PE_G_InternalMethodDescriptionNotFound=
PE_G_MisraCnfBackParams_0=
PE_G_MisraCnfParams_0=
PE_G_MisraRuleList_0=
PE_G_MisraStackIdx=-1
PE_G_NO_SETREGMACROS=
PE_G_RTOSAdap_regCompIndex=0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDevice1msTimer=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceError=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceReset=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceResume=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSetupPacket=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSof=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSpeedDetect=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSuspend=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDevice1msTimer=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDevice1msTimer
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceError=(void (*)(LDD_TUserData *UserDataPtr, uint8_t ErrorSource, uint8_t ErrorCode))&USB_LDD_USB_LDD_OnDeviceError
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceReset=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDeviceReset
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceResume=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDeviceResume
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSetupPacket=(void (*)(LDD_TUserData *UserDataPtr, uint8_t EpNum))&USB_LDD_USB_LDD_OnDeviceSetupPacket
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSof=(void (*)(LDD_TUserData *UserDataPtr, uint16_t FrameNumber))&USB_LDD_USB_LDD_OnDeviceSof
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSpeedDetect=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_TBusSpeed CurrentSpeed))&USB_LDD_USB_LDD_OnDeviceSpeedDetect
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSuspend=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnDeviceSuspend
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHost1msTimer=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostDeviceDeattach=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostError=(void (*)(LDD_TUserData *UserDataPtr, uint8_t ErrorSource, uint8_t ErrorCode))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResetRecovery=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_TBusSpeed CurrentSpeed))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResumeRecovery=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgDevice=(void (*)(LDD_TUserData *UserDataPtr, bool Enabled))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgHost=(void (*)(LDD_TUserData *UserDataPtr, bool Enabled))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgStateChange=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_Otg_TState NewState))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnSignalChange=(void (*)(LDD_TUserData *UserDataPtr, LDD_TPinMask SignalMask, LDD_TPinMask SignalValue))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Deinit=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceAssertResume=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceCancelTransfer=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceDeinitEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetTransferStatus=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetUsbStatus=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceInitEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceReadSetupData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceRecvData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSendData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetAddress=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetUsbStatus=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceStallEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceUnstallEndpoint=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Disable=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Enable=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Init=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_ConnectPin=(LDD_TError (*)(LDD_TDeviceDataPtr *DeviceData, LDD_TPinMask PinMask))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Deinit=(void (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Deinit
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceAssertResume=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_DeviceAssertResume
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceCancelTransfer=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceCancelTransfer
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceDeinitEndpoint=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceDeinitEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetTransferStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceGetTransferStatus
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetUsbStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint16_t Id, uint16_t *CmdStatusPtr))&USB_LDD_DeviceGetUsbStatus
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceInitEndpoint=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_TEpDescriptor *EpDescriptorPtr, uint8_t Flags))&USB_LDD_DeviceInitEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceReadSetupData=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, LDD_USB_TSDP *SDPPtr))&USB_LDD_DeviceReadSetupData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceRecvData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Device_TTD *TransferDescriptorPtr))&USB_LDD_DeviceRecvData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSendData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Device_TTD *TransferDescriptorPtr))&USB_LDD_DeviceSendData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetAddress=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t Address))&USB_LDD_DeviceSetAddress
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetUsbStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint16_t Id, uint16_t Cmd))&USB_LDD_DeviceSetUsbStatus
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceStallEndpoint=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceStallEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceUnstallEndpoint=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))&USB_LDD_DeviceUnstallEndpoint
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Disable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Disable
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Enable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Enable
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetDriverState=(LDD_TDriverState (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetEventMask=(LDD_TEventMask (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostCancelTransfer=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeDescr *PipeHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostClosePipe=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetFrameNumber=(uint16_t (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetMicroFrameNumber=(uint8_t (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetPortState=(LDD_USB_Host_TState (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetTransferStatus=(LDD_USB_TTransferState (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TTransferHandle *TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostOpenPipe=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeDescr *PipeInitParamsPtr, LDD_USB_Host_TPipeHandle **PipeHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostRecvData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendSetup=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSetPortState=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPortControlCmd Cmd))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Init=(LDD_TDeviceData * (*)(LDD_TUserData *UserDataPtr))&USB_LDD_Init
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Main=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgCmd=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Otg_TCmd Cmd))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterDevice=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterHost=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetEventMask=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetOperationMode=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TDriverOperationMode OperationMode, LDD_TCallback ModeChangeCallback, LDD_TCallbackParam *ModeChangeCallbackParamPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetSignal=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TPinMask SignalMask, LDD_TPinMask SignalValue))0
PE_G_USE_UINTXX_T=
PE_ProductVersion=10.0
PEversion=05.03
PEversionDecimal=1283
ProcessorModule=Cpu
ProcessorName=Cpu
ProjectModule=ProcessorExpert
ProjectName=ProcessorExpert
ServerDir_PE=D:\FreeScale\CW MCU v10.3_B121029\MCU\ProcessorExpert\
SetHighSpeedMode=
SupportedCPUfamily=
TimeStamp=2012-11-19, 15:38, # CodeGen: 23
Xtal_kHz=4000
Xtal_kHz_real=4000
ivINT_USB0=USB_LDD_USB_Interrupt
virtual_ADC0_TotalConversionPrescalerAddr=1073983496
virtual_ADC0_TotalConversionPrescalerReg=ADC0_CFG1

 DEPRECATED GLOBAL SYMBOLS (alphabet order)
-------------------------------------------
ADC0AsynchroClockAddr=null
ADC0AsynchroClockReg=null
ADC0BusClockAddr=null
ADC0BusClockReg=null
ADC0ClkSelAddr=null
ADC0ClkSelReg=null
ActiveConfigIdentifier=null
ActiveConfiguration=null
CPUDB_BUS_FREQ_HZ_MAX=null
CPUDB_CPU_MASTER=null
CPUDB_CW_MCU_ID=null
CPUDB_CW_MCU_NAME=null
CPUDB_LQFP80=null
CPUDB_MKL25Z128xxx4=null
CPUDB_MKL25Z4=null
CPUDB_PACKAGE=null
CPUDB_PLL_INPUT_FREQ_HZ_MAX=null
CPUDB_PLL_INPUT_FREQ_HZ_MIN=null
CPUDB_PLL_OUTPUT_FREQ_HZ_MAX=null
CPUDB_PLL_OUTPUT_FREQ_HZ_MIN=null
CPUDB_ProgramFlashBlockCount=null
CPUDB_ProgramFlashEraseUnitSize=null
CPUDB_ProgramFlashSize=null
CPUDB_ProgramFlashWriteUnitSize=null
CPUDB_SYSTEM_FREQ_HZ_MAX=null
CPU_DB_version=null
CPUendian=null
CPUfamily=null
CPUproducer=null
CPUrunSpeedModeNum=null
CPUsubFamily=null
CPUtype=null
CPUvariant=null
ClientDir_Binary=null
ClientDir_Code=null
ClientDir_PE=null
ClientDir_Project=null
CommentBrackets=null
Compiler=null
CompilerID=null
DirRel_Binary=null
DirRel_BinaryToEvents=null
DirRel_Code=null
DirRel_Docs=null
DirRel_EventToBinary=null
DirRel_Events=null
DirRel_ProjectSettings=null
EclipseProjectName=null
InterruptTableType=null
Language=null
Not_for_MPC512x=null
OnChipEEPROM=null
OnChipFLASH=null
OnChipRAM=null
PE_DEBUG=null
PE_DEVELOPMENT=null
PE_ECLIPSE=null
PE_GENERATING=null
PE_G_CPUCFG_AutoIncludeIO_Map=null
PE_G_CPUCFG_EntryPointFunctionName=null
PE_G_CPUCFG_EntryPointFunctionReturn=null
PE_G_CPUCFG_EntryPointFunctionReturnType=null
PE_G_CPUCFG_GenerateLinkerFile=null
PE_G_CPUCFG_GenerateMainModule=null
PE_G_CPUCFG_InitIntVectorTableSym=null
PE_G_CPUCFG_ManageInterruptVectorTable=null
PE_G_GenBitMask=null
PE_G_InternalMethodDescriptionNotFound=null
PE_G_MisraCnfBackParams_0=null
PE_G_MisraCnfParams_0=null
PE_G_MisraRuleList_0=null
PE_G_MisraStackIdx=null
PE_G_NO_SETREGMACROS=null
PE_G_RTOSAdap_regCompIndex=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDevice1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceReset=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSetupPacket=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSof=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSpeedDetect=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnDeviceSuspend=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDevice1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceReset=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSetupPacket=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSof=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSpeedDetect=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSuspend=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHost1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostDeviceDeattach=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResetRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResumeRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgDevice=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgHost=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgStateChange=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnSignalChange=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Deinit=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceAssertResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceDeinitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceGetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceInitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceReadSetupData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetAddress=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceSetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceStallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_DeviceUnstallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Disable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Enable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Init=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_ConnectPin=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Deinit=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceAssertResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceDeinitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceInitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceReadSetupData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetAddress=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceStallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceUnstallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Disable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Enable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetDriverState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostClosePipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetMicroFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostOpenPipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendSetup=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Init=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Main=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgCmd=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterDevice=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterHost=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetOperationMode=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetSignal=null
PE_G_USE_UINTXX_T=null
PE_ProductVersion=null
PEversion=null
PEversionDecimal=null
ProcessorModule=null
ProcessorName=null
ProjectModule=null
ProjectName=null
ServerDir_PE=null
SetHighSpeedMode=null
SupportedCPUfamily=null
TimeStamp=null
Xtal_kHz=null
Xtal_kHz_real=null
ivINT_USB0=null
virtual_ADC0_TotalConversionPrescalerAddr=null
virtual_ADC0_TotalConversionPrescalerReg=null

 GLOBAL LISTS (alphabet order)
-------------------------------------------
ADC0AsynchroClock=[1]
ADC0AsynchroClock_Setting=[ADC0Async_FullPower_HighSpeed]
ADC0BusClock=[1]
ADC0BusClock_Setting=[1]
ADC0ClkSel=[1]
ADC0ClkSel_Setting=[ADC0BusClock]
COPClkSelect=[1]
COPClkSelect_Setting=[COPBusClock]
ERCLK32KSel=[1]
ERCLK32KSel_Setting=[SYSTEM_OSC]
EventModuleList=[Events]
I2C0_LoTimeoutClkSel=[1]
I2C0_LoTimeoutClkSel_Setting=[I2C0_LoTimeout_BusClkDiv64]
I2C1_LoTimeoutClkSel=[1]
I2C1_LoTimeoutClkSel_Setting=[I2C1_LoTimeout_BusClkDiv64]
IRCLKSel=[1]
IRCLKSel_Setting=[IRC_32kHz]
IncludeSharedModules=[PE_Types|PE_Error|PE_Const|IO_Map]
InstructionClock=[undef]
LPTMR0_ClockSelect=[1]
LPTMR0_ClockSelect_Setting=[ERCLK]
MCGOUTSel=[1]
MCGOUTSel_Setting=[MCGPLLCLK]
MCG_FLL_MFactor=[640]
MCG_FLL_MFactor_Setting=[640]
MCG_FLL_RCLKSel=[1]
MCG_FLL_RCLKSel_Setting=[MCG_FRDIV]
MCG_FRDIV=[256]
MCG_FRDIV_Setting=[256]
MCG_PRDIV=[2]
MCG_PRDIV_Setting=[2]
MCG_VDIV=[24]
MCG_VDIV_Setting=[24]
ModuleList=[usb_msc|usb_device|USB_LDD]
OUTDIV1Presc=[2]
OUTDIV1Presc_Setting=[2]
OUTDIV4Presc=[2]
OUTDIV4Presc_Setting=[2]
PE_G_RTOSAdap_regCompInstanceAllocatedDevices=[USB0]
PE_G_RTOSAdap_regCompInstanceDeviceBaseAddrs=[1074208768]
PE_G_RTOSAdap_regCompInstanceIds=[0]
PE_G_RTOSAdap_regCompInstanceNames=[USB_LDD]
PE_G_RTOSAdap_regCompInstanceSharedComponentName=[USB_LDD]
PE_G_RTOSAdap_regCompInstanceTypes=[USB_LDD]
PE_G_RTOSAdap_regCompInstance_USB_LDD_events=[OnDeviceReset|OnDeviceSpeedDetect|OnDeviceSuspend|OnDeviceResume|OnDeviceSetupPacket|OnDeviceSof|OnDeviceError|OnDevice1msTimer|OnHostDeviceDeattach|OnHostResetRecovery|OnHostResumeRecovery|OnHostError|OnHost1msTimer|OnOtgDevice|OnOtgHost|OnOtgStateChange|OnSignalChange]
PE_G_RTOSAdap_regCompInstance_USB_LDD_methods=[Init|Deinit|SetEventMask|GetEventMask|Enable|Disable|DeviceGetUsbStatus|DeviceSetUsbStatus|DeviceSetAddress|DeviceAssertResume|DeviceInitEndpoint|DeviceDeinitEndpoint|DeviceStallEndpoint|DeviceUnstallEndpoint|DeviceReadSetupData|DeviceSendData|DeviceRecvData|DeviceGetTransferStatus|DeviceCancelTransfer|HostGetPortState|HostSetPortState|HostGetFrameNumber|HostGetMicroFrameNumber|HostOpenPipe|HostClosePipe|HostSendSetup|HostSendData|HostRecvData|HostGetTransferStatus|HostCancelTransfer|OtgRegisterDevice|OtgRegisterHost|OtgCmd|SetSignal|ConnectPin|Main|SetOperationMode|GetDriverState]
PLLFLLSel=[1]
PLLFLLSel_Setting=[MCGPLLCLKDIV2]
SPI0_BaudRatePrescDiv=[1]
SPI0_BaudRatePrescDiv_Setting=[1]
SPI1_BaudRatePrescDiv=[1]
SPI1_BaudRatePrescDiv_Setting=[1]
SharedModules=[Kinetis\PE_Types.drv|Kinetis\PE_Error.drv|Kinetis\PE_Const.drv|Kinetis\IO_Map.drv]
SpeedModeList=[SpeedMode0]
SpeedModeNames=[SpeedMode0|SpeedMode1|SpeedMode2|SpeedMode3|SpeedMode4|SpeedMode5|SpeedMode6|SpeedMode7]
SystemPrescaler=[1]
SystemPrescaler_Setting=[1]
TPMClk=[1]
TPMClk_Setting=[PLLFLLSelDistr]
UART0_ClkSel=[1]
UART0_ClkSel_Setting=[PLLFLLSelDistr]
UART0_Divider=[4]
UART0_Divider_Setting=[4]
USB0_ClkSel=[1]
USB0_ClkSel_Setting=[USB0_PLLFLL0]
virtual_ADC0_TotalConversionPrescaler=[1]
virtual_ADC0_TotalConversionPrescaler_Setting=[1]

{{DEVELOPMENT}} --------(((DEBUGINFO)))--------.{{DEVELOPMENT}} 

