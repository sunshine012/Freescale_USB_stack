
{{DEVELOPMENT}} --------(((DEBUGINFO)))--------{{DEVELOPMENT}} 

 DRIVER SYMBOLS (alphabet order)
-------------------------------
Abstract=Common\USB_AUDIO_CLASSAbstract.Inc
Description_USB_Audio_Get_Control_Terminal=The function gets Copy protect level for I/O Terminal
Description_USB_Audio_Get_Feature_Unit=The function gets Feature Unit requests
Description_USB_Audio_Set_Control_Terminal=The function sets Copy protect level for I/O Terminal
Description_USB_Audio_Set_Feature_Unit=The function sets Feature Unit requests
Description_USB_Class_Audio_Event=The funtion initializes Audio endpoint
Description_USB_Get_Cur_Audio_Feature_Unit=The function gets Current attributes of Feature Unit
Description_USB_Get_Max_Audio_Feature_Unit=The function gets Max attributes of Feature Unit
Description_USB_Get_Min_Audio_Feature_Unit=The function gets Min attributes of Feature Unit
Description_USB_Get_Request_Endpoint=This function is called in response to Get Endpoint Requests
Description_USB_Get_Request_Interface=This function is called in response to Get Interface Requests
Description_USB_Get_Res_Audio_Feature_Unit=The function gets Resolution attributes of Feature Unit
Description_USB_Other_Requests=The funtion provides flexibilty to add class and vendor specific requests
Description_USB_Service_Audio_Isochronous_IN=The funtion ic callback function of Audio Isochronous IN endpoint
Description_USB_Service_Audio_Isochronous_OUT=The funtion is callback function of Isochronous Out Endpoint
Description_USB_Service_Audio_Status_Interrupt=The funtion is callback function of Audio Status Interrupt endpoint
Description_USB_Set_Cur_Audio_Feature_Unit=The function sets current attributes of Feature Unit
Description_USB_Set_Max_Audio_Feature_Unit=The function sets Max attributes of Feature Unit
Description_USB_Set_Min_Audio_Feature_Unit=The function sets Min attributes of Feature Unit
Description_USB_Set_Request_Endpoint=This function is called in response to Set Endpoint Requests
Description_USB_Set_Request_Interface=This function is called in response to Set Interface Requests
Description_USB_Set_Res_Audio_Feature_Unit=The function sets Resolution attributes of Feature Unit
DriverAuthor=Author
DriverDate=31.01.2012
DriverVersion=01.00
EndOfInterface=
Paras_itf_desc=
Paraudio_instance=
Parblen=
Parbuf=
Parbuf_size=
Parbuffer=
Parcall_parm=
Parcallback=
Parccs_ptr=
Parcom_ptr=
Parcontrol_ptr=
Pardev_handle=
Parevent_code=
Parfrm_type_desc=
Parfu_desc=
Parheader_desc=
Parintf_handle=
Pariso_endp_spec_desc=
Parit_desc=
Paroffset=
Parot_desc=
Parpbs_ptr=
Parstream_ptr=
Paruser_callback=
Paruser_callback_param=
RetVal=
Settings=Common\USB_AUDIO_CLASSSettings.Inc
USB_DESC_CONST=
_Audio_Mode_Index=1
_Feature_unit_descriptor=0
_audio_automatic_gain_control=0
_audio_bass_boost_control=0
_audio_bass_control=0
_audio_delay_control=0
_audio_graphic_eq_control=0
_audio_loudness_control=0
_audio_mid_control=0
_audio_mute_control=0
_audio_treble_control=0
_audio_volume_control=0
_class_name=stream
_index_gen=2

 LOCAL SYMBOLS (alphabet order)
-------------------------------
Audio_Mode=HOST
Audio_class_code0=01
Audio_class_code1=01
Audio_class_code_mask0=255
Audio_class_code_mask1=255
Audio_class_listMaxItem=1
Audio_class_listNumItems=2
Audio_protocol_code0=0
Audio_protocol_code1=0
Audio_protocol_code_mask0=0
Audio_protocol_code_mask1=0
Audio_sub_class_code0=01
Audio_sub_class_code1=02
Audio_sub_class_code_mask0=255
Audio_sub_class_code_mask1=255
BeanVersion=01.000
DeviceName=usb_host_audio
DeviceType=USB_AUDIO_CLASS
ModuleName=usb_host_audio
Usb_Host=usb_host
Usb_Host_Template=Usb_Host
Use_Hub=yes
Use_Poll=yes
runSpeedModeNum=1
usb_audio_recv_data=usb_audio_recv_data
usb_audio_recv_data_Hint=USB_STATUS usb_host_audio_usb_audio_recv_data(CLASS_CALL_STRUCT_PTR...
usb_audio_recv_data_HintHint=Receive data on isochronous IN pipe.
usb_audio_recv_data_HintHintLong=Receive data on isochronous IN pipe.
usb_audio_send_data=usb_audio_send_data
usb_audio_send_data_Hint=USB_STATUS usb_host_audio_usb_audio_send_data(CLASS_CALL_STRUCT_PTR...
usb_audio_send_data_HintHint=Send audio data to device through a isochronous OUT pipe.
usb_audio_send_data_HintHintLong=Send audio data to device through a isochronous OUT pipe.
usb_class_audio_control_get_descriptors=usb_class_audio_control_get_descriptors
usb_class_audio_control_get_descriptors_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_control_get_descriptors_HintHint=This function is hunting for descriptors in the device configuration and...
usb_class_audio_control_get_descriptors_HintHintLong=This function is hunting for descriptors in the device configuration and fills back fields if the descriptor was found. Must be run in locked state and validated USB device or directly from attach event.
usb_class_audio_control_init=usb_class_audio_control_init
usb_class_audio_control_init_Hint=void usb_host_audio_usb_class_audio_control_init(PIPE_BUNDLE_STRUCT_PTR...
usb_class_audio_control_init_HintHint=This function is called by common class to initialize the class driver for...
usb_class_audio_control_init_HintHintLong=This function is called by common class to initialize the class driver for audio control interface. It is called in response to a select interface call by application.
usb_class_audio_control_set_descriptors=usb_class_audio_control_set_descriptors
usb_class_audio_control_set_descriptors_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_control_set_descriptors_HintHint=This function is used to set descriptors for control interface.  Descriptors...
usb_class_audio_control_set_descriptors_HintHintLong=This function is used to set descriptors for control interface.  Descriptors can be used afterwards by application or by driver
usb_class_audio_get_copy_protect=usb_class_audio_get_copy_protect
usb_class_audio_get_copy_protect_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_copy_protect(AUDIO_COMMAND_PTR...
usb_class_audio_get_copy_protect_HintHint=This function is called by the application to get copy protect value from the...
usb_class_audio_get_copy_protect_HintHintLong=This function is called by the application to get copy protect value from the audio device
usb_class_audio_get_ctrl_interface=usb_class_audio_get_ctrl_interface
usb_class_audio_get_ctrl_interface_Hint=CLASS_CALL_STRUCT_PTR usb_host_audio_usb_class_audio_get_ctrl_interface(void*...
usb_class_audio_get_ctrl_interface_HintHint=This function is used to find registered control interface in the chain. It...
usb_class_audio_get_ctrl_interface_HintHintLong=This function is used to find registered control interface in the chain. It must be run with interrupts disabled to have interfaces validated.
usb_class_audio_get_cur_automatic_gain=usb_class_audio_get_cur_automatic_gain
usb_class_audio_get_cur_automatic_gain_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_cur_automatic_gain_HintHint=This function is called by the application to get current automatic gain...
usb_class_audio_get_cur_automatic_gain_HintHintLong=This function is called by the application to get current automatic gain control value from the audio device
usb_class_audio_get_cur_bass=usb_class_audio_get_cur_bass
usb_class_audio_get_cur_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_cur_bass(AUDIO_COMMAND_PTR...
usb_class_audio_get_cur_bass_HintHint=This function is called by the application to get current bass value from the...
usb_class_audio_get_cur_bass_HintHintLong=This function is called by the application to get current bass value from the audio device
usb_class_audio_get_cur_bass_boost=usb_class_audio_get_cur_bass_boost
usb_class_audio_get_cur_bass_boost_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_cur_bass_boost_HintHint=This function is called by the application to get current bass boost value...
usb_class_audio_get_cur_bass_boost_HintHintLong=This function is called by the application to get current bass boost value from the audio device
usb_class_audio_get_cur_delay=usb_class_audio_get_cur_delay
usb_class_audio_get_cur_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_cur_delay(AUDIO_COMMAND_PTR...
usb_class_audio_get_cur_delay_HintHint=This function is called by the application to get current delay value from...
usb_class_audio_get_cur_delay_HintHintLong=This function is called by the application to get current delay value from the audio device
usb_class_audio_get_cur_graphic_eq=usb_class_audio_get_cur_graphic_eq
usb_class_audio_get_cur_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_cur_graphic_eq_HintHint=This function is called by the application to get current graphic equalizer...
usb_class_audio_get_cur_graphic_eq_HintHintLong=This function is called by the application to get current graphic equalizer value from the audio device
usb_class_audio_get_cur_mid=usb_class_audio_get_cur_mid
usb_class_audio_get_cur_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_cur_mid(AUDIO_COMMAND_PTR...
usb_class_audio_get_cur_mid_HintHint=This function is called by the application to get current mid value from the...
usb_class_audio_get_cur_mid_HintHintLong=This function is called by the application to get current mid value from the audio device
usb_class_audio_get_cur_mute=usb_class_audio_get_cur_mute
usb_class_audio_get_cur_mute_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_cur_mute(AUDIO_COMMAND_PTR...
usb_class_audio_get_cur_mute_HintHint=This function is called by the application to get current mute value from the...
usb_class_audio_get_cur_mute_HintHintLong=This function is called by the application to get current mute value from the audio device
usb_class_audio_get_cur_pitch=usb_class_audio_get_cur_pitch
usb_class_audio_get_cur_pitch_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_cur_pitch(AUDIO_COMMAND_PTR...
usb_class_audio_get_cur_pitch_HintHint=This function is called by the application to get current pitch value from...
usb_class_audio_get_cur_pitch_HintHintLong=This function is called by the application to get current pitch value from the audio device
usb_class_audio_get_cur_sampling_frequency=usb_class_audio_get_cur_sampling_frequency
usb_class_audio_get_cur_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_cur_sampling_frequency_HintHint=This function is called by the application to get current sampling frequency...
usb_class_audio_get_cur_sampling_frequency_HintHintLong=This function is called by the application to get current sampling frequency value from the audio device
usb_class_audio_get_cur_treble=usb_class_audio_get_cur_treble
usb_class_audio_get_cur_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_cur_treble(AUDIO_COMMAND_PTR...
usb_class_audio_get_cur_treble_HintHint=This function is called by the application to get current treble value from...
usb_class_audio_get_cur_treble_HintHintLong=This function is called by the application to get current treble value from the audio device
usb_class_audio_get_cur_volume=usb_class_audio_get_cur_volume
usb_class_audio_get_cur_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_cur_volume(AUDIO_COMMAND_PTR...
usb_class_audio_get_cur_volume_HintHint=This function is called by the application to get current volume value from...
usb_class_audio_get_cur_volume_HintHintLong=This function is called by the application to get current volume value from the audio device
usb_class_audio_get_max_bass=usb_class_audio_get_max_bass
usb_class_audio_get_max_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_max_bass(AUDIO_COMMAND_PTR...
usb_class_audio_get_max_bass_HintHint=This function is called by the application to get max bass value from the...
usb_class_audio_get_max_bass_HintHintLong=This function is called by the application to get max bass value from the audio device
usb_class_audio_get_max_delay=usb_class_audio_get_max_delay
usb_class_audio_get_max_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_max_delay(AUDIO_COMMAND_PTR...
usb_class_audio_get_max_delay_HintHint=This function is called by the application to get max delay value from the...
usb_class_audio_get_max_delay_HintHintLong=This function is called by the application to get max delay value from the audio device
usb_class_audio_get_max_graphic_eq=usb_class_audio_get_max_graphic_eq
usb_class_audio_get_max_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_max_graphic_eq_HintHint=This function is called by the application to get max graphic equalizer value...
usb_class_audio_get_max_graphic_eq_HintHintLong=This function is called by the application to get max graphic equalizer value from the audio device
usb_class_audio_get_max_mid=usb_class_audio_get_max_mid
usb_class_audio_get_max_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_max_mid(AUDIO_COMMAND_PTR...
usb_class_audio_get_max_mid_HintHint=This function is called by the application to get max mid value from the...
usb_class_audio_get_max_mid_HintHintLong=This function is called by the application to get max mid value from the audio device
usb_class_audio_get_max_sampling_frequency=usb_class_audio_get_max_sampling_frequency
usb_class_audio_get_max_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_max_sampling_frequency_HintHint=This function is called by the application to get max sampling frequency...
usb_class_audio_get_max_sampling_frequency_HintHintLong=This function is called by the application to get max sampling frequency value from the audio device
usb_class_audio_get_max_treble=usb_class_audio_get_max_treble
usb_class_audio_get_max_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_max_treble(AUDIO_COMMAND_PTR...
usb_class_audio_get_max_treble_HintHint=This function is called by the application to get max treble value from the...
usb_class_audio_get_max_treble_HintHintLong=This function is called by the application to get max treble value from the audio device
usb_class_audio_get_max_volume=usb_class_audio_get_max_volume
usb_class_audio_get_max_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_max_volume(AUDIO_COMMAND_PTR...
usb_class_audio_get_max_volume_HintHint=This function is called by the application to get max volume value from the...
usb_class_audio_get_max_volume_HintHintLong=This function is called by the application to get max volume value from the audio device
usb_class_audio_get_mem_endpoint=usb_class_audio_get_mem_endpoint
usb_class_audio_get_mem_endpoint_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_mem_endpoint(AUDIO_COMMAND_PTR...
usb_class_audio_get_mem_endpoint_HintHint=This function is called by the application to get memory of the endpoint from...
usb_class_audio_get_mem_endpoint_HintHintLong=This function is called by the application to get memory of the endpoint from the audio device
usb_class_audio_get_min_bass=usb_class_audio_get_min_bass
usb_class_audio_get_min_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_min_bass(AUDIO_COMMAND_PTR...
usb_class_audio_get_min_bass_HintHint=This function is called by the application to get min bass value from the...
usb_class_audio_get_min_bass_HintHintLong=This function is called by the application to get min bass value from the audio device
usb_class_audio_get_min_delay=usb_class_audio_get_min_delay
usb_class_audio_get_min_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_min_delay(AUDIO_COMMAND_PTR...
usb_class_audio_get_min_delay_HintHint=This function is called by the application to get min delay value from the...
usb_class_audio_get_min_delay_HintHintLong=This function is called by the application to get min delay value from the audio device
usb_class_audio_get_min_graphic_eq=usb_class_audio_get_min_graphic_eq
usb_class_audio_get_min_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_min_graphic_eq_HintHint=This function is called by the application to get min graphic equalizer value...
usb_class_audio_get_min_graphic_eq_HintHintLong=This function is called by the application to get min graphic equalizer value from the audio device
usb_class_audio_get_min_mid=usb_class_audio_get_min_mid
usb_class_audio_get_min_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_min_mid(AUDIO_COMMAND_PTR...
usb_class_audio_get_min_mid_HintHint=This function is called by the application to get min mid value from the...
usb_class_audio_get_min_mid_HintHintLong=This function is called by the application to get min mid value from the audio device
usb_class_audio_get_min_sampling_frequency=usb_class_audio_get_min_sampling_frequency
usb_class_audio_get_min_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_min_sampling_frequency_HintHint=This function is called by the application to get min sampling frequency...
usb_class_audio_get_min_sampling_frequency_HintHintLong=This function is called by the application to get min sampling frequency value from the audio device
usb_class_audio_get_min_treble=usb_class_audio_get_min_treble
usb_class_audio_get_min_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_min_treble(AUDIO_COMMAND_PTR...
usb_class_audio_get_min_treble_HintHint=This function is called by the application to get min treble value from the...
usb_class_audio_get_min_treble_HintHintLong=This function is called by the application to get min treble value from the audio device
usb_class_audio_get_min_volume=usb_class_audio_get_min_volume
usb_class_audio_get_min_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_min_volume(AUDIO_COMMAND_PTR...
usb_class_audio_get_min_volume_HintHint=This function is called by the application to get min volume value from the...
usb_class_audio_get_min_volume_HintHintLong=This function is called by the application to get min volume value from the audio device
usb_class_audio_get_res_bass=usb_class_audio_get_res_bass
usb_class_audio_get_res_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_res_bass(AUDIO_COMMAND_PTR...
usb_class_audio_get_res_bass_HintHint=This function is called by the application to get resolution bass value from...
usb_class_audio_get_res_bass_HintHintLong=This function is called by the application to get resolution bass value from the audio device
usb_class_audio_get_res_delay=usb_class_audio_get_res_delay
usb_class_audio_get_res_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_res_delay(AUDIO_COMMAND_PTR...
usb_class_audio_get_res_delay_HintHint=This function is called by the application to get resolution delay value from...
usb_class_audio_get_res_delay_HintHintLong=This function is called by the application to get resolution delay value from the audio device
usb_class_audio_get_res_graphic_eq=usb_class_audio_get_res_graphic_eq
usb_class_audio_get_res_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_res_graphic_eq_HintHint=This function is called by the application to get resolution graphic...
usb_class_audio_get_res_graphic_eq_HintHintLong=This function is called by the application to get resolution graphic equalizer value from the audio device
usb_class_audio_get_res_mid=usb_class_audio_get_res_mid
usb_class_audio_get_res_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_res_mid(AUDIO_COMMAND_PTR...
usb_class_audio_get_res_mid_HintHint=This function is called by the application to get resolution mid value from...
usb_class_audio_get_res_mid_HintHintLong=This function is called by the application to get resolution mid value from the audio device
usb_class_audio_get_res_sampling_frequency=usb_class_audio_get_res_sampling_frequency
usb_class_audio_get_res_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_get_res_sampling_frequency_HintHint=This function is called by the application to get resolution sampling...
usb_class_audio_get_res_sampling_frequency_HintHintLong=This function is called by the application to get resolution sampling frequency value from the audio device
usb_class_audio_get_res_treble=usb_class_audio_get_res_treble
usb_class_audio_get_res_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_res_treble(AUDIO_COMMAND_PTR...
usb_class_audio_get_res_treble_HintHint=This function is called by the application to get resolution treble value...
usb_class_audio_get_res_treble_HintHintLong=This function is called by the application to get resolution treble value from the audio device
usb_class_audio_get_res_volume=usb_class_audio_get_res_volume
usb_class_audio_get_res_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_get_res_volume(AUDIO_COMMAND_PTR...
usb_class_audio_get_res_volume_HintHint=This function is called by the application to get resolution volume value...
usb_class_audio_get_res_volume_HintHintLong=This function is called by the application to get resolution volume value from the audio device
usb_class_audio_init_ipipe=usb_class_audio_init_ipipe
usb_class_audio_init_ipipe_Hint=USB_STATUS usb_host_audio_usb_class_audio_init_ipipe(CLASS_CALL_STRUCT_PTR...
usb_class_audio_init_ipipe_HintHint=Starts interrupt endpoint to poll for interrupt on specified device.
usb_class_audio_init_ipipe_HintHintLong=Starts interrupt endpoint to poll for interrupt on specified device.
usb_class_audio_set_copy_protect=usb_class_audio_set_copy_protect
usb_class_audio_set_copy_protect_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_copy_protect(AUDIO_COMMAND_PTR...
usb_class_audio_set_copy_protect_HintHint=This function is called by the application to send copy protect value to the...
usb_class_audio_set_copy_protect_HintHintLong=This function is called by the application to send copy protect value to the audio device
usb_class_audio_set_cur_automatic_gain=usb_class_audio_set_cur_automatic_gain
usb_class_audio_set_cur_automatic_gain_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_cur_automatic_gain_HintHint=This function is called by the application to send current automatic gain...
usb_class_audio_set_cur_automatic_gain_HintHintLong=This function is called by the application to send current automatic gain control value to the audio device
usb_class_audio_set_cur_bass=usb_class_audio_set_cur_bass
usb_class_audio_set_cur_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_cur_bass(AUDIO_COMMAND_PTR...
usb_class_audio_set_cur_bass_HintHint=This function is called by the application to send current bass value to the...
usb_class_audio_set_cur_bass_HintHintLong=This function is called by the application to send current bass value to the audio device
usb_class_audio_set_cur_bass_boost=usb_class_audio_set_cur_bass_boost
usb_class_audio_set_cur_bass_boost_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_cur_bass_boost_HintHint=This function is called by the application to send current bass boost value...
usb_class_audio_set_cur_bass_boost_HintHintLong=This function is called by the application to send current bass boost value to the audio device
usb_class_audio_set_cur_delay=usb_class_audio_set_cur_delay
usb_class_audio_set_cur_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_cur_delay(AUDIO_COMMAND_PTR...
usb_class_audio_set_cur_delay_HintHint=This function is called by the application to send current delay value to the...
usb_class_audio_set_cur_delay_HintHintLong=This function is called by the application to send current delay value to the audio device
usb_class_audio_set_cur_graphic_eq=usb_class_audio_set_cur_graphic_eq
usb_class_audio_set_cur_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_cur_graphic_eq_HintHint=This function is called by the application to send current graphic equalizer...
usb_class_audio_set_cur_graphic_eq_HintHintLong=This function is called by the application to send current graphic equalizer value to the audio device
usb_class_audio_set_cur_mid=usb_class_audio_set_cur_mid
usb_class_audio_set_cur_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_cur_mid(AUDIO_COMMAND_PTR...
usb_class_audio_set_cur_mid_HintHint=This function is called by the application to send current mid value to the...
usb_class_audio_set_cur_mid_HintHintLong=This function is called by the application to send current mid value to the audio device
usb_class_audio_set_cur_mute=usb_class_audio_set_cur_mute
usb_class_audio_set_cur_mute_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_cur_mute(AUDIO_COMMAND_PTR...
usb_class_audio_set_cur_mute_HintHint=This function is called by the application to send current mute value to the...
usb_class_audio_set_cur_mute_HintHintLong=This function is called by the application to send current mute value to the audio device
usb_class_audio_set_cur_pitch=usb_class_audio_set_cur_pitch
usb_class_audio_set_cur_pitch_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_cur_pitch(AUDIO_COMMAND_PTR...
usb_class_audio_set_cur_pitch_HintHint=This function is called by the application to send current pitch value to the...
usb_class_audio_set_cur_pitch_HintHintLong=This function is called by the application to send current pitch value to the audio device
usb_class_audio_set_cur_sampling_frequency=usb_class_audio_set_cur_sampling_frequency
usb_class_audio_set_cur_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_cur_sampling_frequency_HintHint=This function is called by the application to send current sampling frequency...
usb_class_audio_set_cur_sampling_frequency_HintHintLong=This function is called by the application to send current sampling frequency value to the audio device
usb_class_audio_set_cur_treble=usb_class_audio_set_cur_treble
usb_class_audio_set_cur_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_cur_treble(AUDIO_COMMAND_PTR...
usb_class_audio_set_cur_treble_HintHint=This function is called by the application to send current treble value to...
usb_class_audio_set_cur_treble_HintHintLong=This function is called by the application to send current treble value to the audio device
usb_class_audio_set_cur_volume=usb_class_audio_set_cur_volume
usb_class_audio_set_cur_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_cur_volume(AUDIO_COMMAND_PTR...
usb_class_audio_set_cur_volume_HintHint=This function is called by the application to send current mute value to the...
usb_class_audio_set_cur_volume_HintHintLong=This function is called by the application to send current mute value to the audio device
usb_class_audio_set_max_bass=usb_class_audio_set_max_bass
usb_class_audio_set_max_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_max_bass(AUDIO_COMMAND_PTR...
usb_class_audio_set_max_bass_HintHint=This function is called by the application to send max bass value to the...
usb_class_audio_set_max_bass_HintHintLong=This function is called by the application to send max bass value to the audio device
usb_class_audio_set_max_delay=usb_class_audio_set_max_delay
usb_class_audio_set_max_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_max_delay(AUDIO_COMMAND_PTR...
usb_class_audio_set_max_delay_HintHint=This function is called by the application to send max delay value to the...
usb_class_audio_set_max_delay_HintHintLong=This function is called by the application to send max delay value to the audio device
usb_class_audio_set_max_graphic_eq=usb_class_audio_set_max_graphic_eq
usb_class_audio_set_max_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_max_graphic_eq_HintHint=This function is called by the application to send max graphic equalizer...
usb_class_audio_set_max_graphic_eq_HintHintLong=This function is called by the application to send max graphic equalizer value to the audio device
usb_class_audio_set_max_mid=usb_class_audio_set_max_mid
usb_class_audio_set_max_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_max_mid(AUDIO_COMMAND_PTR...
usb_class_audio_set_max_mid_HintHint=This function is called by the application to send max mid value to the audio...
usb_class_audio_set_max_mid_HintHintLong=This function is called by the application to send max mid value to the audio device
usb_class_audio_set_max_sampling_frequency=usb_class_audio_set_max_sampling_frequency
usb_class_audio_set_max_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_max_sampling_frequency_HintHint=This function is called by the application to send max sampling frequency...
usb_class_audio_set_max_sampling_frequency_HintHintLong=This function is called by the application to send max sampling frequency value to the audio device
usb_class_audio_set_max_treble=usb_class_audio_set_max_treble
usb_class_audio_set_max_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_max_treble(AUDIO_COMMAND_PTR...
usb_class_audio_set_max_treble_HintHint=This function is called by the application to send max treble value to the...
usb_class_audio_set_max_treble_HintHintLong=This function is called by the application to send max treble value to the audio device
usb_class_audio_set_max_volume=usb_class_audio_set_max_volume
usb_class_audio_set_max_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_max_volume(AUDIO_COMMAND_PTR...
usb_class_audio_set_max_volume_HintHint=This function is called by the application to send max volume value to the...
usb_class_audio_set_max_volume_HintHintLong=This function is called by the application to send max volume value to the audio device
usb_class_audio_set_mem_endpoint=usb_class_audio_set_mem_endpoint
usb_class_audio_set_mem_endpoint_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_mem_endpoint(AUDIO_COMMAND_PTR...
usb_class_audio_set_mem_endpoint_HintHint=This function is called by the application to send memory of the endpoint to...
usb_class_audio_set_mem_endpoint_HintHintLong=This function is called by the application to send memory of the endpoint to the audio device
usb_class_audio_set_min_bass=usb_class_audio_set_min_bass
usb_class_audio_set_min_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_min_bass(AUDIO_COMMAND_PTR...
usb_class_audio_set_min_bass_HintHint=This function is called by the application to send min bass value to the...
usb_class_audio_set_min_bass_HintHintLong=This function is called by the application to send min bass value to the audio device
usb_class_audio_set_min_delay=usb_class_audio_set_min_delay
usb_class_audio_set_min_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_min_delay(AUDIO_COMMAND_PTR...
usb_class_audio_set_min_delay_HintHint=This function is called by the application to send min delay value to the...
usb_class_audio_set_min_delay_HintHintLong=This function is called by the application to send min delay value to the audio device
usb_class_audio_set_min_graphic_eq=usb_class_audio_set_min_graphic_eq
usb_class_audio_set_min_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_min_graphic_eq_HintHint=This function is called by the application to send min graphic equalizer...
usb_class_audio_set_min_graphic_eq_HintHintLong=This function is called by the application to send min graphic equalizer value to the audio device
usb_class_audio_set_min_mid=usb_class_audio_set_min_mid
usb_class_audio_set_min_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_min_mid(AUDIO_COMMAND_PTR...
usb_class_audio_set_min_mid_HintHint=This function is called by the application to send min mid value to the audio...
usb_class_audio_set_min_mid_HintHintLong=This function is called by the application to send min mid value to the audio device
usb_class_audio_set_min_sampling_frequency=usb_class_audio_set_min_sampling_frequency
usb_class_audio_set_min_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_min_sampling_frequency_HintHint=This function is called by the application to send min sampling frequency...
usb_class_audio_set_min_sampling_frequency_HintHintLong=This function is called by the application to send min sampling frequency value to the audio device
usb_class_audio_set_min_treble=usb_class_audio_set_min_treble
usb_class_audio_set_min_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_min_treble(AUDIO_COMMAND_PTR...
usb_class_audio_set_min_treble_HintHint=This function is called by the application to send min treble value to the...
usb_class_audio_set_min_treble_HintHintLong=This function is called by the application to send min treble value to the audio device
usb_class_audio_set_min_volume=usb_class_audio_set_min_volume
usb_class_audio_set_min_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_min_volume(AUDIO_COMMAND_PTR...
usb_class_audio_set_min_volume_HintHint=This function is called by the application to send min volume value to the...
usb_class_audio_set_min_volume_HintHintLong=This function is called by the application to send min volume value to the audio device
usb_class_audio_set_res_bass=usb_class_audio_set_res_bass
usb_class_audio_set_res_bass_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_res_bass(AUDIO_COMMAND_PTR...
usb_class_audio_set_res_bass_HintHint=This function is called by the application to send resolution bass value to...
usb_class_audio_set_res_bass_HintHintLong=This function is called by the application to send resolution bass value to the audio device
usb_class_audio_set_res_delay=usb_class_audio_set_res_delay
usb_class_audio_set_res_delay_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_res_delay(AUDIO_COMMAND_PTR...
usb_class_audio_set_res_delay_HintHint=This function is called by the application to send resolution delay value to...
usb_class_audio_set_res_delay_HintHintLong=This function is called by the application to send resolution delay value to the audio device
usb_class_audio_set_res_graphic_eq=usb_class_audio_set_res_graphic_eq
usb_class_audio_set_res_graphic_eq_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_res_graphic_eq_HintHint=This function is called by the application to send resolution graphic...
usb_class_audio_set_res_graphic_eq_HintHintLong=This function is called by the application to send resolution graphic equalizer value to the audio device
usb_class_audio_set_res_mid=usb_class_audio_set_res_mid
usb_class_audio_set_res_mid_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_res_mid(AUDIO_COMMAND_PTR...
usb_class_audio_set_res_mid_HintHint=This function is called by the application to send resolution mid value to...
usb_class_audio_set_res_mid_HintHintLong=This function is called by the application to send resolution mid value to the audio device
usb_class_audio_set_res_sampling_frequency=usb_class_audio_set_res_sampling_frequency
usb_class_audio_set_res_sampling_frequency_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_set_res_sampling_frequency_HintHint=This function is called by the application to send resolution sampling...
usb_class_audio_set_res_sampling_frequency_HintHintLong=This function is called by the application to send resolution sampling freqency value to the audio device
usb_class_audio_set_res_treble=usb_class_audio_set_res_treble
usb_class_audio_set_res_treble_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_res_treble(AUDIO_COMMAND_PTR...
usb_class_audio_set_res_treble_HintHint=This function is called by the application to send resolution treble value to...
usb_class_audio_set_res_treble_HintHintLong=This function is called by the application to send resolution treble value to the audio device
usb_class_audio_set_res_volume=usb_class_audio_set_res_volume
usb_class_audio_set_res_volume_Hint=USB_STATUS usb_host_audio_usb_class_audio_set_res_volume(AUDIO_COMMAND_PTR...
usb_class_audio_set_res_volume_HintHint=This function is called by the application to send resolution volume value to...
usb_class_audio_set_res_volume_HintHintLong=This function is called by the application to send resolution volume value to the audio device
usb_class_audio_stream_get_descriptors=usb_class_audio_stream_get_descriptors
usb_class_audio_stream_get_descriptors_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_stream_get_descriptors_HintHint=This function is hunting for descriptors in the device configuration and...
usb_class_audio_stream_get_descriptors_HintHintLong=This function is hunting for descriptors in the device configuration and fills back fields if the descriptor was found. Must be run in locked state and validated USB device or directly from attach event.
usb_class_audio_stream_init=usb_class_audio_stream_init
usb_class_audio_stream_init_Hint=void usb_host_audio_usb_class_audio_stream_init(PIPE_BUNDLE_STRUCT_PTR...
usb_class_audio_stream_init_HintHint=This function is called by common class to initialize the class driver for...
usb_class_audio_stream_init_HintHintLong=This function is called by common class to initialize the class driver for audio stream interface. It is called in response to a select interface call by application.
usb_class_audio_stream_set_descriptors=usb_class_audio_stream_set_descriptors
usb_class_audio_stream_set_descriptors_Hint=USB_STATUS usb_host_audio_usb_class_aud...
usb_class_audio_stream_set_descriptors_HintHint=This function is used to set descriptors for stream interface Descriptors can...
usb_class_audio_stream_set_descriptors_HintHintLong=This function is used to set descriptors for stream interface Descriptors can be used afterwards by application or by driver
InhrSymbolList=[Usb_Host]
MethodHintList=[USB_STATUS usb_host_audio_usb_class_audio_init_ipipe(CLASS_CALL_STRUCT_PTR audio_instance, tr_callback user_callback, void* user_callback_param);|USB_STATUS usb_host_audio_usb_audio_recv_data(CLASS_CALL_STRUCT_PTR control_ptr, CLASS_CALL_STRUCT_PTR stream_ptr, tr_callback callback, void* call_parm, uint_32 buf_size, uchar_ptr buffer);|USB_STATUS usb_host_audio_usb_audio_send_data(CLASS_CALL_STRUCT_PTR control_ptr, CLASS_CALL_STRUCT_PTR stream_ptr, tr_callback callback, void* call_parm, uint_32 buf_size, uchar_ptr buffer);|USB_STATUS usb_host_audio_usb_class_audio_get_copy_protect(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_copy_protect(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_mute(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_mute(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_min_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_min_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_max_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_res_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_max_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_res_volume(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_min_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_min_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_max_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_max_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_res_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_res_bass(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_min_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_min_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_max_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_max_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_res_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_res_mid(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_min_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_min_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_max_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_max_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_res_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_res_treble(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_min_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_min_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_max_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_max_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_res_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_res_graphic_eq(AUDIO_COMMAND_PTR com_ptr, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_automatic_gain(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_automatic_gain(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_min_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_min_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_max_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_max_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_res_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_res_delay(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_bass_boost(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_bass_boost(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_min_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_min_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_max_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_max_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_res_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_res_sampling_frequency(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_cur_pitch(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_cur_pitch(AUDIO_COMMAND_PTR com_ptr, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_get_mem_endpoint(AUDIO_COMMAND_PTR com_ptr, uint_16 offset, uint_16 blen, void* buf);|USB_STATUS usb_host_audio_usb_class_audio_set_mem_endpoint(AUDIO_COMMAND_PTR com_ptr, uint_16 offset, uint_16 blen, void* buf);|void usb_host_audio_usb_class_audio_control_init(PIPE_BUNDLE_STRUCT_PTR pbs_ptr, CLASS_CALL_STRUCT_PTR ccs_ptr);|void usb_host_audio_usb_class_audio_stream_init(PIPE_BUNDLE_STRUCT_PTR pbs_ptr, CLASS_CALL_STRUCT_PTR ccs_ptr);|CLASS_CALL_STRUCT_PTR usb_host_audio_usb_class_audio_get_ctrl_interface(void* intf_handle);|USB_STATUS usb_host_audio_usb_class_audio_control_get_descriptors(_usb_device_instance_handle dev_handle, _usb_interface_descriptor_handle intf_handle, USB_AUDIO_CTRL_DESC_HEADER_PTR *header_desc, USB_AUDIO_CTRL_DESC_IT_PTR *it_desc, USB_AUDIO_CTRL_DESC_OT_PTR *ot_desc, USB_AUDIO_CTRL_DESC_FU_PTR *fu_desc);|USB_STATUS usb_host_audio_usb_class_audio_stream_get_descriptors(_usb_device_instance_handle dev_handle, _usb_interface_descriptor_handle intf_handle, USB_AUDIO_STREAM_DESC_SPEPIFIC_AS_IF_PTR *as_itf_desc, USB_AUDIO_STREAM_DESC_FORMAT_TYPE_PTR *frm_type_desc, USB_AUDIO_STREAM_DESC_SPECIFIC_ISO_ENDP_PTR *iso_endp_spec_desc);|USB_STATUS usb_host_audio_usb_class_audio_control_set_descriptors(CLASS_CALL_STRUCT_PTR ccs_ptr, USB_AUDIO_CTRL_DESC_HEADER_PTR header_desc, USB_AUDIO_CTRL_DESC_IT_PTR it_desc, USB_AUDIO_CTRL_DESC_OT_PTR ot_desc, USB_AUDIO_CTRL_DESC_FU_PTR fu_desc);|USB_STATUS usb_host_audio_usb_class_audio_stream_set_descriptors(CLASS_CALL_STRUCT_PTR ccs_ptr, USB_AUDIO_STREAM_DESC_SPEPIFIC_AS_IF_PTR as_itf_desc, USB_AUDIO_STREAM_DESC_FORMAT_TYPE_PTR frm_type_desc, USB_AUDIO_STREAM_DESC_SPECIFIC_ISO_ENDP_PTR iso_endp_spec_desc);]
MethodList=[usb_class_audio_init_ipipe|usb_audio_recv_data|usb_audio_send_data|usb_class_audio_get_copy_protect|usb_class_audio_set_copy_protect|usb_class_audio_get_cur_mute|usb_class_audio_set_cur_mute|usb_class_audio_get_cur_volume|usb_class_audio_set_cur_volume|usb_class_audio_get_min_volume|usb_class_audio_set_min_volume|usb_class_audio_get_max_volume|usb_class_audio_get_res_volume|usb_class_audio_set_max_volume|usb_class_audio_set_res_volume|usb_class_audio_get_cur_bass|usb_class_audio_set_cur_bass|usb_class_audio_get_min_bass|usb_class_audio_set_min_bass|usb_class_audio_set_max_bass|usb_class_audio_get_max_bass|usb_class_audio_get_res_bass|usb_class_audio_get_cur_mid|usb_class_audio_set_res_bass|usb_class_audio_set_cur_mid|usb_class_audio_get_min_mid|usb_class_audio_set_min_mid|usb_class_audio_get_max_mid|usb_class_audio_set_max_mid|usb_class_audio_get_res_mid|usb_class_audio_set_res_mid|usb_class_audio_get_cur_treble|usb_class_audio_set_cur_treble|usb_class_audio_get_min_treble|usb_class_audio_set_min_treble|usb_class_audio_get_max_treble|usb_class_audio_set_max_treble|usb_class_audio_get_res_treble|usb_class_audio_set_res_treble|usb_class_audio_get_cur_graphic_eq|usb_class_audio_get_min_graphic_eq|usb_class_audio_set_cur_graphic_eq|usb_class_audio_set_min_graphic_eq|usb_class_audio_get_max_graphic_eq|usb_class_audio_set_max_graphic_eq|usb_class_audio_get_res_graphic_eq|usb_class_audio_set_res_graphic_eq|usb_class_audio_get_cur_automatic_gain|usb_class_audio_set_cur_automatic_gain|usb_class_audio_get_cur_delay|usb_class_audio_set_cur_delay|usb_class_audio_get_min_delay|usb_class_audio_set_min_delay|usb_class_audio_get_max_delay|usb_class_audio_set_max_delay|usb_class_audio_get_res_delay|usb_class_audio_set_res_delay|usb_class_audio_get_cur_bass_boost|usb_class_audio_set_cur_bass_boost|usb_class_audio_set_cur_sampling_frequency|usb_class_audio_get_cur_sampling_frequency|usb_class_audio_get_min_sampling_frequency|usb_class_audio_set_min_sampling_frequency|usb_class_audio_get_max_sampling_frequency|usb_class_audio_set_max_sampling_frequency|usb_class_audio_get_res_sampling_frequency|usb_class_audio_set_res_sampling_frequency|usb_class_audio_get_cur_pitch|usb_class_audio_set_cur_pitch|usb_class_audio_get_mem_endpoint|usb_class_audio_set_mem_endpoint|usb_class_audio_control_init|usb_class_audio_stream_init|usb_class_audio_get_ctrl_interface|usb_class_audio_control_get_descriptors|usb_class_audio_stream_get_descriptors|usb_class_audio_control_set_descriptors|usb_class_audio_stream_set_descriptors]
runSpeedMode=[Yes]

GLOBAL SYMBOLS (alphabet order)
-------------------------------
ADC0AsynchroClockAddr=1073983496
ADC0AsynchroClockReg=ADC0_CFG1
ADC0BusClockAddr=1073983496
ADC0BusClockReg=ADC0_CFG1
ADC0ClkSelAddr=1073983496
ADC0ClkSelReg=ADC0_CFG1
ActiveConfigIdentifier=PEcfg_FLASH
ActiveConfiguration=FLASH
CPUDB_BUS_FREQ_HZ_MAX=24000000
CPUDB_CPU_MASTER=MKL25Z4
CPUDB_CW_MCU_ID=28695
CPUDB_CW_MCU_NAME=MKL25Z128xxx4
CPUDB_LQFP80=-1
CPUDB_MKL25Z128xxx4=-1
CPUDB_MKL25Z4=-1
CPUDB_PACKAGE=LQFP80
CPUDB_PLL_INPUT_FREQ_HZ_MAX=4000000
CPUDB_PLL_INPUT_FREQ_HZ_MIN=2000000
CPUDB_PLL_OUTPUT_FREQ_HZ_MAX=100000000
CPUDB_PLL_OUTPUT_FREQ_HZ_MIN=48000000
CPUDB_ProgramFlashBlockCount=1
CPUDB_ProgramFlashEraseUnitSize=1024
CPUDB_ProgramFlashSize=131072
CPUDB_ProgramFlashWriteUnitSize=4
CPUDB_SYSTEM_FREQ_HZ_MAX=48000000
CPU_DB_version=3.00.000
CPUendian=little
CPUfamily=Kinetis
CPUproducer=Freescale
CPUrunSpeedModeNum=1
CPUsubFamily=MKL25
CPUtype=MKL25Z128LK4
CPUvariant=MKL25Z128VLK4
ClientDir_Binary=E:\USB_proccessor_expert_update\Test\20121119_Processor_expert\AUDIO_CLASS\HOST\USB_AUDIO_HOST_MKL25Z128_PEx\Sources\
ClientDir_Code=E:\USB_proccessor_expert_update\Test\20121119_Processor_expert\AUDIO_CLASS\HOST\USB_AUDIO_HOST_MKL25Z128_PEx\Generated_Code\
ClientDir_PE=D:\FreeScale\CW MCU v10.3_B121029\MCU\ProcessorExpert\
ClientDir_Project=E:\USB_proccessor_expert_update\Test\20121119_Processor_expert\AUDIO_CLASS\HOST\USB_AUDIO_HOST_MKL25Z128_PEx\
CommentBrackets=/**/
Compiler=GNUC
CompilerID=GNU C Compiler
DirRel_Binary=Sources\
DirRel_BinaryToEvents=
DirRel_Code=Generated_Code\
DirRel_Docs=Documentation\
DirRel_EventToBinary=
DirRel_Events=Sources\
DirRel_ProjectSettings=Project_Settings\
EclipseProjectName=USB_AUDIO_HOST_MKL25Z128_PEx
InterruptTableType=ROM
Language=ANSIC
Not_for_MPC512x=
OnChipEEPROM=0
OnChipFLASH=131072
OnChipRAM=16384
PE_DEBUG=
PE_DEVELOPMENT=
PE_ECLIPSE=
PE_GENERATING=
PE_G_CPUCFG_AutoIncludeIO_Map=yes
PE_G_CPUCFG_EntryPointFunctionName=__init_hardware
PE_G_CPUCFG_EntryPointFunctionReturn=
PE_G_CPUCFG_EntryPointFunctionReturnType=void __attribute__ ((constructor))
PE_G_CPUCFG_GenerateLinkerFile=yes
PE_G_CPUCFG_GenerateMainModule=yes
PE_G_CPUCFG_InitIntVectorTableSym=yes
PE_G_CPUCFG_ManageInterruptVectorTable=yes
PE_G_CRI_CPUINIT_set0_NVIC_IPR4=65280
PE_G_CRI_CPUINIT_set0_PORTE_PCR24=16778240
PE_G_CRI_CPUINIT_set1_NVIC_IPR4=0
PE_G_CRI_CPUINIT_set1_PORTE_PCR24=768
PE_G_CRI_GPIO_LDD_INIT_PTA4_set0_PORTA_PCR4=16778752
PE_G_CRI_GPIO_LDD_INIT_PTA4_set1_PORTA_PCR4=256
PE_G_EBGN_TPM0BeanName=PWM
PE_G_GenBitMask=
PE_G_InternalMethodDescriptionNotFound=
PE_G_MisraCnfBackParams_0=
PE_G_MisraCnfParams_0=
PE_G_MisraRuleList_0=
PE_G_MisraStackIdx=-1
PE_G_NO_SETREGMACROS=
PE_G_RTOSAdap_regCompIndex=3
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnBlockReceived=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnBlockSent=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnBreak=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnError=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnIdle=(void (*)(LDD_TUserData RTOSDeviceData))0
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnRxActiveEdge=(void (*)(LDD_TUserData RTOSDeviceData))0
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnTxComplete=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodEnabled_Init=
PE_G_RTOSAdap_regCompInstance_IO1_methodEnabled_Main=
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_CancelBlockReception=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_CancelBlockTransmission=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ClearRTS=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ClearStats=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ConnectPin=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TPinMask PinMask))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Deinit=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Disable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Enable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetBreak=(bool (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetCTS=(bool (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetDataWidth=(LDD_SERIAL_TDataWidth (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetDriverState=(LDD_TDriverState (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetError=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TError *ErrorPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetEventMask=(LDD_TEventMask (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetLoopMode=(LDD_SERIAL_TLoopMode (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetParity=(LDD_SERIAL_TParity (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetReceivedDataNum=(uint16_t (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetSelectedBaudRate=(LDD_SERIAL_TBaudMode (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetSentDataNum=(uint16_t (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetStats=(LDD_SERIAL_TStats (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetStopBitLength=(LDD_SERIAL_TStopBitLen (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetTxCompleteStatus=(bool (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Init=(LDD_TDeviceData* (*)(LDD_TUserData *UserDataPtr))&IO1_Init
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Main=(void (*)(LDD_TDeviceData *DeviceDataPtr))&IO1_Main
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ReceiveBlock=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SelectBaudRate=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TBaudMode Mode))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SendBlock=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SendBreak=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetDataWidth=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TDataWidth DataWidth))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetEventMask=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetLoopMode=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TLoopMode LoopMode))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetOperationMode=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TDriverOperationMode OperationMode, LDD_TCallback ModeChangeCallback, LDD_TCallbackParam *ModeChangeCallbackParamPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetParity=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TParity Parity))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetRTS=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetStopBitLength=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TStopBitLen StopBitLen))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnRxOff=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnRxOn=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnTxOff=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnTxOn=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventEnabled_OnCounterRestart=
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel0=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel1=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel2=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel3=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel4=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel5=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel6=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel7=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnCounterRestart=(void (*)(LDD_TUserData *UserDataPtr))&PIT0_PIT0_OnCounterRestart
PE_G_RTOSAdap_regCompInstance_PIT0_methodEnabled_Disable=
PE_G_RTOSAdap_regCompInstance_PIT0_methodEnabled_Enable=
PE_G_RTOSAdap_regCompInstance_PIT0_methodEnabled_Init=
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_ConnectPin=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TPinMask PinMask))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Deinit=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Disable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&PIT0_Disable
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Enable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&PIT0_Enable
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetCaptureValue=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, PIT0_TValueType *ValuePtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetCounterValue=(PIT0_TValueType (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetDriverState=(LDD_TDriverState (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetEventMask=(LDD_TEventMask (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetEventStatus=(LDD_TEventMask (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetInputFrequency=(uint32_t (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetInputFrequencyReal=(LDD_TimerUnit_Tfloat (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetOffsetTicks=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, PIT0_TValueType *TicksPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetPeriodTicks=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, PIT0_TValueType *TicksPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Init=(LDD_TDeviceData* (*)(LDD_TUserData *UserDataPtr))&PIT0_Init
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_ResetCounter=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SelectCaptureEdge=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit_TEdge Edge))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SelectInputFrequency=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, PIT0_TClockList InputFrequency))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SelectOutputAction=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit_TOutAction CompareAction, LDD_TimerUnit_TOutAction CounterAction))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetEventMask=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetOffsetTicks=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, PIT0_TValueType Ticks))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetOperationMode=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TDriverOperationMode OperationMode, LDD_TCallback ModeChangeCallback, LDD_TCallbackParam *ModeChangeCallbackParamPtr))0
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetPeriodTicks=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, PIT0_TValueType Ticks))0
PE_G_RTOSAdap_regCompInstance_PTA4_eventEnabled_OnPortEvent=
PE_G_RTOSAdap_regCompInstance_PTA4_eventPtr_OnFieldEvent=(void (*)(LDD_TUserData *UserDataPtr, LDD_GPIO_TBitField Field))0
PE_G_RTOSAdap_regCompInstance_PTA4_eventPtr_OnPortEvent=(void (*)(LDD_TUserData *UserDataPtr))&PTA4_PTA4_OnPortEvent
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_ClearFieldBits=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_ConnectPin=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_Deinit=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_GetFieldValue=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_Init=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldBits=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldInputDirection=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldOutputDirection=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldValue=
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_ToggleFieldBits=
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ClearFieldBits=(void (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, PTA4_TFieldValue Mask))&PTA4_ClearFieldBits
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ClearPortBits=(void (*)(LDD_TDeviceData *DeviceDataPtr, PTA4_TPortValue Mask))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ConnectPin=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TPinMask PinMask))&PTA4_ConnectPin
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_Deinit=(void (*)(LDD_TDeviceData *DeviceDataPtr))&PTA4_Deinit
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetDriverState=(LDD_TDriverState (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetEventMask=(LDD_TEventMask (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetFieldEventStatus=(PTA4_TFieldValue (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Name))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetFieldOutputValue=(PTA4_TFieldValue (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetFieldValue=(PTA4_TFieldValue (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field))&PTA4_GetFieldValue
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetPortEventStatus=(PTA4_TPortValue (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetPortOutputValue=(PTA4_TPortValue (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetPortValue=(PTA4_TPortValue (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_Init=(LDD_TDeviceData* (*)(LDD_TUserData *UserDataPtr))&PTA4_Init
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetEventMask=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldBits=(void (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, PTA4_TFieldValue Mask))&PTA4_SetFieldBits
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldEventCondition=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Name, PTA4_TFieldValue Mask, LDD_GPIO_TEventCondition Condition))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldInputDirection=(void (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field))&PTA4_SetFieldInputDirection
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldOutputDirection=(void (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, PTA4_TFieldValue Value))&PTA4_SetFieldOutputDirection
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldValue=(void (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, PTA4_TFieldValue Value))&PTA4_SetFieldValue
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetOperationMode=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TDriverOperationMode OperationMode, LDD_TCallback ModeChangeCallback, LDD_TCallbackParam *ModeChangeCallbackParamPtr))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortBits=(void (*)(LDD_TDeviceData *DeviceDataPtr, PTA4_TPortValue Mask))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortEventCondition=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, PTA4_TPortValue Mask, LDD_GPIO_TEventCondition Condition))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortInputDirection=(void (*)(LDD_TDeviceData *DeviceDataPtr, PTA4_TPortValue Mask))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortOutputDirection=(void (*)(LDD_TDeviceData *DeviceDataPtr, PTA4_TPortValue Mask, PTA4_TPortValue Value))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortValue=(void (*)(LDD_TDeviceData *DeviceDataPtr, PTA4_TPortValue Value))0
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ToggleFieldBits=(void (*)(LDD_TDeviceData *DeviceDataPtr, LDD_GPIO_TBitField Field, PTA4_TFieldValue Mask))&PTA4_ToggleFieldBits
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_TogglePortBits=(void (*)(LDD_TDeviceData *DeviceDataPtr, PTA4_TPortValue Mask))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostDeviceDeattach=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostError=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostResetRecovery=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostResumeRecovery=
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDevice1msTimer=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceError=(void (*)(LDD_TUserData *UserDataPtr, uint8_t ErrorSource, uint8_t ErrorCode))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceReset=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceResume=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSetupPacket=(void (*)(LDD_TUserData *UserDataPtr, uint8_t EpNum))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSof=(void (*)(LDD_TUserData *UserDataPtr, uint16_t FrameNumber))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSpeedDetect=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_TBusSpeed CurrentSpeed))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSuspend=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHost1msTimer=(void (*)(LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostDeviceDeattach=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnHostDeviceDeattach
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostError=(void (*)(LDD_TUserData *UserDataPtr, uint8_t ErrorSource, uint8_t ErrorCode))&USB_LDD_USB_LDD_OnHostError
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResetRecovery=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_TBusSpeed CurrentSpeed))&USB_LDD_USB_LDD_OnHostResetRecovery
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResumeRecovery=(void (*)(LDD_TUserData *UserDataPtr))&USB_LDD_USB_LDD_OnHostResumeRecovery
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgDevice=(void (*)(LDD_TUserData *UserDataPtr, bool Enabled))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgHost=(void (*)(LDD_TUserData *UserDataPtr, bool Enabled))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgStateChange=(void (*)(LDD_TUserData *UserDataPtr, LDD_USB_Otg_TState NewState))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnSignalChange=(void (*)(LDD_TUserData *UserDataPtr, LDD_TPinMask SignalMask, LDD_TPinMask SignalValue))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Deinit=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Disable=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Enable=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_GetDriverState=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_GetEventMask=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostCancelTransfer=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostClosePipe=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetFrameNumber=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetMicroFrameNumber=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetPortState=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetTransferStatus=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostOpenPipe=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostRecvData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostSendData=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostSendSetup=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostSetPortState=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Init=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_SetEventMask=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_SetOperationMode=
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_ConnectPin=(LDD_TError (*)(LDD_TDeviceDataPtr *DeviceData, LDD_TPinMask PinMask))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Deinit=(void (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Deinit
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceAssertResume=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceCancelTransfer=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceDeinitEndpoint=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetTransferStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetUsbStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint16_t Id, uint16_t *CmdStatusPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceInitEndpoint=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_TEpDescriptor *EpDescriptorPtr, uint8_t Flags))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceReadSetupData=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, LDD_USB_TSDP *SDPPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceRecvData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Device_TTD *TransferDescriptorPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSendData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Device_TTD *TransferDescriptorPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetAddress=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t Address))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetUsbStatus=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, uint16_t Id, uint16_t Cmd))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceStallEndpoint=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceUnstallEndpoint=(void (*)(LDD_TDeviceData *DeviceDataPtr, uint8_t EpNum, uint8_t EpDir))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Disable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Disable
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Enable=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_Enable
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetDriverState=(LDD_TDriverState (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_GetDriverState
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetEventMask=(LDD_TEventMask (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_GetEventMask
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostCancelTransfer=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeDescr *PipeHandlePtr))&USB_LDD_HostCancelTransfer
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostClosePipe=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr))&USB_LDD_HostClosePipe
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetFrameNumber=(uint16_t (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_HostGetFrameNumber
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetMicroFrameNumber=(uint8_t (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_HostGetMicroFrameNumber
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetPortState=(LDD_USB_Host_TState (*)(LDD_TDeviceData *DeviceDataPtr))&USB_LDD_HostGetPortState
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetTransferStatus=(LDD_USB_TTransferState (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TTransferHandle *TransferHandlePtr))&USB_LDD_HostGetTransferStatus
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostOpenPipe=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeDescr *PipeInitParamsPtr, LDD_USB_Host_TPipeHandle **PipeHandlePtr))&USB_LDD_HostOpenPipe
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostRecvData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))&USB_LDD_HostRecvData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendData=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))&USB_LDD_HostSendData
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendSetup=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPipeHandle *PipeHandlePtr, LDD_USB_Host_TTD *TransferDescriptorPtr, LDD_USB_Host_TTransferHandle **TransferHandlePtr))&USB_LDD_HostSendSetup
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSetPortState=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Host_TPortControlCmd Cmd))&USB_LDD_HostSetPortState
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Init=(LDD_TDeviceData * (*)(LDD_TUserData *UserDataPtr))&USB_LDD_Init
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Main=(void (*)(LDD_TDeviceData *DeviceDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgCmd=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_USB_Otg_TCmd Cmd))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterDevice=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterHost=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TUserData *UserDataPtr))0
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetEventMask=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask))&USB_LDD_SetEventMask
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetOperationMode=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TDriverOperationMode OperationMode, LDD_TCallback ModeChangeCallback, LDD_TCallbackParam *ModeChangeCallbackParamPtr))&USB_LDD_SetOperationMode
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetSignal=(LDD_TError (*)(LDD_TDeviceData *DeviceDataPtr, LDD_TPinMask SignalMask, LDD_TPinMask SignalValue))0
PE_G_USE_UINTXX_T=
PE_ProductVersion=10.0
PEversion=05.03
PEversionDecimal=1283
ProcessorModule=Cpu
ProcessorName=Cpu
ProjectModule=ProcessorExpert
ProjectName=ProcessorExpert
ServerDir_PE=D:\FreeScale\CW MCU v10.3_B121029\MCU\ProcessorExpert\
SetHighSpeedMode=
SupportedCPUfamily=
TimeStamp=2012-11-19, 15:42, # CodeGen: 24
Xtal_kHz=4000
Xtal_kHz_real=4000
ivINT_PIT=PIT0_Interrupt
ivINT_PORTA=PTA4_Interrupt
ivINT_USB0=USB_LDD_USB_Interrupt
virtual_ADC0_TotalConversionPrescalerAddr=1073983496
virtual_ADC0_TotalConversionPrescalerReg=ADC0_CFG1

 DEPRECATED GLOBAL SYMBOLS (alphabet order)
-------------------------------------------
ADC0AsynchroClockAddr=null
ADC0AsynchroClockReg=null
ADC0BusClockAddr=null
ADC0BusClockReg=null
ADC0ClkSelAddr=null
ADC0ClkSelReg=null
ActiveConfigIdentifier=null
ActiveConfiguration=null
CPUDB_BUS_FREQ_HZ_MAX=null
CPUDB_CPU_MASTER=null
CPUDB_CW_MCU_ID=null
CPUDB_CW_MCU_NAME=null
CPUDB_LQFP80=null
CPUDB_MKL25Z128xxx4=null
CPUDB_MKL25Z4=null
CPUDB_PACKAGE=null
CPUDB_PLL_INPUT_FREQ_HZ_MAX=null
CPUDB_PLL_INPUT_FREQ_HZ_MIN=null
CPUDB_PLL_OUTPUT_FREQ_HZ_MAX=null
CPUDB_PLL_OUTPUT_FREQ_HZ_MIN=null
CPUDB_ProgramFlashBlockCount=null
CPUDB_ProgramFlashEraseUnitSize=null
CPUDB_ProgramFlashSize=null
CPUDB_ProgramFlashWriteUnitSize=null
CPUDB_SYSTEM_FREQ_HZ_MAX=null
CPU_DB_version=null
CPUendian=null
CPUfamily=null
CPUproducer=null
CPUrunSpeedModeNum=null
CPUsubFamily=null
CPUtype=null
CPUvariant=null
ClientDir_Binary=null
ClientDir_Code=null
ClientDir_PE=null
ClientDir_Project=null
CommentBrackets=null
Compiler=null
CompilerID=null
DirRel_Binary=null
DirRel_BinaryToEvents=null
DirRel_Code=null
DirRel_Docs=null
DirRel_EventToBinary=null
DirRel_Events=null
DirRel_ProjectSettings=null
EclipseProjectName=null
InterruptTableType=null
Language=null
Not_for_MPC512x=null
OnChipEEPROM=null
OnChipFLASH=null
OnChipRAM=null
PE_DEBUG=null
PE_DEVELOPMENT=null
PE_ECLIPSE=null
PE_GENERATING=null
PE_G_CPUCFG_AutoIncludeIO_Map=null
PE_G_CPUCFG_EntryPointFunctionName=null
PE_G_CPUCFG_EntryPointFunctionReturn=null
PE_G_CPUCFG_EntryPointFunctionReturnType=null
PE_G_CPUCFG_GenerateLinkerFile=null
PE_G_CPUCFG_GenerateMainModule=null
PE_G_CPUCFG_InitIntVectorTableSym=null
PE_G_CPUCFG_ManageInterruptVectorTable=null
PE_G_CRI_CPUINIT_set0_NVIC_IPR4=null
PE_G_CRI_CPUINIT_set0_PORTE_PCR24=null
PE_G_CRI_CPUINIT_set1_NVIC_IPR4=null
PE_G_CRI_CPUINIT_set1_PORTE_PCR24=null
PE_G_CRI_GPIO_LDD_INIT_PTA4_set0_PORTA_PCR4=null
PE_G_CRI_GPIO_LDD_INIT_PTA4_set1_PORTA_PCR4=null
PE_G_EBGN_TPM0BeanName=null
PE_G_GenBitMask=null
PE_G_InternalMethodDescriptionNotFound=null
PE_G_MisraCnfBackParams_0=null
PE_G_MisraCnfParams_0=null
PE_G_MisraRuleList_0=null
PE_G_MisraStackIdx=null
PE_G_NO_SETREGMACROS=null
PE_G_RTOSAdap_regCompIndex=null
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnBlockReceived=null
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnBlockSent=null
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnBreak=null
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnError=null
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnIdle=null
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnRxActiveEdge=null
PE_G_RTOSAdap_regCompInstance_IO1_eventPtr_OnTxComplete=null
PE_G_RTOSAdap_regCompInstance_IO1_methodEnabled_Init=null
PE_G_RTOSAdap_regCompInstance_IO1_methodEnabled_Main=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_CancelBlockReception=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_CancelBlockTransmission=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ClearRTS=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ClearStats=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ConnectPin=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Deinit=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Disable=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Enable=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetBreak=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetCTS=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetDataWidth=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetDriverState=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetError=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetEventMask=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetLoopMode=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetParity=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetReceivedDataNum=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetSelectedBaudRate=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetSentDataNum=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetStats=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetStopBitLength=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_GetTxCompleteStatus=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Init=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_Main=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_ReceiveBlock=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SelectBaudRate=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SendBlock=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SendBreak=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetDataWidth=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetEventMask=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetLoopMode=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetOperationMode=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetParity=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetRTS=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_SetStopBitLength=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnRxOff=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnRxOn=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnTxOff=null
PE_G_RTOSAdap_regCompInstance_IO1_methodPtr_TurnTxOn=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventEnabled_OnCounterRestart=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel0=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel1=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel2=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel3=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel4=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel5=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel6=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnChannel7=null
PE_G_RTOSAdap_regCompInstance_PIT0_eventPtr_OnCounterRestart=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodEnabled_Disable=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodEnabled_Enable=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodEnabled_Init=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_ConnectPin=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Deinit=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Disable=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Enable=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetCaptureValue=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetCounterValue=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetDriverState=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetEventMask=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetEventStatus=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetInputFrequency=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetInputFrequencyReal=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetOffsetTicks=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_GetPeriodTicks=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_Init=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_ResetCounter=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SelectCaptureEdge=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SelectInputFrequency=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SelectOutputAction=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetEventMask=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetOffsetTicks=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetOperationMode=null
PE_G_RTOSAdap_regCompInstance_PIT0_methodPtr_SetPeriodTicks=null
PE_G_RTOSAdap_regCompInstance_PTA4_eventEnabled_OnPortEvent=null
PE_G_RTOSAdap_regCompInstance_PTA4_eventPtr_OnFieldEvent=null
PE_G_RTOSAdap_regCompInstance_PTA4_eventPtr_OnPortEvent=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_ClearFieldBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_ConnectPin=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_Deinit=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_GetFieldValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_Init=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldInputDirection=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldOutputDirection=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_SetFieldValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodEnabled_ToggleFieldBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ClearFieldBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ClearPortBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ConnectPin=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_Deinit=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetDriverState=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetEventMask=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetFieldEventStatus=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetFieldOutputValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetFieldValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetPortEventStatus=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetPortOutputValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_GetPortValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_Init=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetEventMask=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldEventCondition=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldInputDirection=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldOutputDirection=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetFieldValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetOperationMode=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortEventCondition=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortInputDirection=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortOutputDirection=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_SetPortValue=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_ToggleFieldBits=null
PE_G_RTOSAdap_regCompInstance_PTA4_methodPtr_TogglePortBits=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostDeviceDeattach=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostResetRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventEnabled_OnHostResumeRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDevice1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceReset=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSetupPacket=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSof=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSpeedDetect=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnDeviceSuspend=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHost1msTimer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostDeviceDeattach=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostError=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResetRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnHostResumeRecovery=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgDevice=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgHost=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnOtgStateChange=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_eventPtr_OnSignalChange=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Deinit=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Disable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Enable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_GetDriverState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_GetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostClosePipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetMicroFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostOpenPipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostSendSetup=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_HostSetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_Init=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_SetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodEnabled_SetOperationMode=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_ConnectPin=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Deinit=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceAssertResume=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceDeinitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceGetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceInitEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceReadSetupData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetAddress=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceSetUsbStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceStallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_DeviceUnstallEndpoint=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Disable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Enable=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetDriverState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_GetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostCancelTransfer=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostClosePipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetMicroFrameNumber=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostGetTransferStatus=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostOpenPipe=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostRecvData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendData=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSendSetup=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_HostSetPortState=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Init=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_Main=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgCmd=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterDevice=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_OtgRegisterHost=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetEventMask=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetOperationMode=null
PE_G_RTOSAdap_regCompInstance_USB_LDD_methodPtr_SetSignal=null
PE_G_USE_UINTXX_T=null
PE_ProductVersion=null
PEversion=null
PEversionDecimal=null
ProcessorModule=null
ProcessorName=null
ProjectModule=null
ProjectName=null
ServerDir_PE=null
SetHighSpeedMode=null
SupportedCPUfamily=null
TimeStamp=null
Xtal_kHz=null
Xtal_kHz_real=null
ivINT_PIT=null
ivINT_PORTA=null
ivINT_USB0=null
virtual_ADC0_TotalConversionPrescalerAddr=null
virtual_ADC0_TotalConversionPrescalerReg=null

 GLOBAL LISTS (alphabet order)
-------------------------------------------
ADC0AsynchroClock=[1]
ADC0AsynchroClock_Setting=[ADC0Async_FullPower_HighSpeed]
ADC0BusClock=[1]
ADC0BusClock_Setting=[1]
ADC0ClkSel=[1]
ADC0ClkSel_Setting=[ADC0BusClock]
COPClkSelect=[1]
COPClkSelect_Setting=[COPBusClock]
ERCLK32KSel=[1]
ERCLK32KSel_Setting=[SYSTEM_OSC]
EventModuleList=[Events]
I2C0_LoTimeoutClkSel=[1]
I2C0_LoTimeoutClkSel_Setting=[I2C0_LoTimeout_BusClkDiv64]
I2C1_LoTimeoutClkSel=[1]
I2C1_LoTimeoutClkSel_Setting=[I2C1_LoTimeout_BusClkDiv64]
IRCLKSel=[1]
IRCLKSel_Setting=[IRC_32kHz]
IncludeSharedModules=[PE_Types|PE_Error|PE_Const|IO_Map]
InstructionClock=[undef]
LPTMR0_ClockSelect=[1]
LPTMR0_ClockSelect_Setting=[ERCLK]
MCGOUTSel=[1]
MCGOUTSel_Setting=[MCGPLLCLK]
MCG_FLL_MFactor=[640]
MCG_FLL_MFactor_Setting=[640]
MCG_FLL_RCLKSel=[1]
MCG_FLL_RCLKSel_Setting=[MCG_FRDIV]
MCG_FRDIV=[256]
MCG_FRDIV_Setting=[256]
MCG_PRDIV=[2]
MCG_PRDIV_Setting=[2]
MCG_VDIV=[24]
MCG_VDIV_Setting=[24]
ModuleList=[CsIO1|IO1|PIT0|PTA4|PWM|usb_host_audio|usb_host|USB_LDD]
OUTDIV1Presc=[2]
OUTDIV1Presc_Setting=[2]
OUTDIV4Presc=[2]
OUTDIV4Presc_Setting=[2]
PE_G_CRI_CPUINIT_RegList32=[PORTE_PCR24|NVIC_IPR4]
PE_G_CRI_GPIO_LDD_INIT_PTA4_RegList32=[PORTA_PCR4]
PE_G_CRI_GPIO_LDD_INIT_PTA4_inited=[PORTA_PCR4]
PE_G_GPIO_PTA_GetPortEventStatusList=[no]
PE_G_GPIO_PTA_IntServiceList=[yes]
PE_G_GPIO_PTA_ModuleNameList=[PTA4]
PE_G_RTOSAdap_regCompInstanceAllocatedDevices=[UART0|PIT|PTA|USB0]
PE_G_RTOSAdap_regCompInstanceDeviceBaseAddrs=[1074176000|1073967104|1074786304|1074208768]
PE_G_RTOSAdap_regCompInstanceIds=[0|1|2|3]
PE_G_RTOSAdap_regCompInstanceNames=[IO1|PIT0|PTA4|USB_LDD]
PE_G_RTOSAdap_regCompInstanceSharedComponentName=[IO1|PIT0|PTA4|USB_LDD]
PE_G_RTOSAdap_regCompInstanceTypes=[Serial_LDD|TimerUnit_LDD|LDD_GPIO|USB_LDD]
PE_G_RTOSAdap_regCompInstance_IO1_events=[OnBlockReceived|OnBlockSent|OnBreak|OnError|OnTxComplete|OnIdle|OnRxActiveEdge]
PE_G_RTOSAdap_regCompInstance_IO1_methods=[Init|Deinit|Enable|Disable|SendBlock|ReceiveBlock|CancelBlockTransmission|CancelBlockReception|GetError|GetSentDataNum|GetReceivedDataNum|GetTxCompleteStatus|SetEventMask|GetEventMask|SelectBaudRate|GetSelectedBaudRate|SetParity|GetParity|SetDataWidth|GetDataWidth|SetStopBitLength|GetStopBitLength|SetLoopMode|GetLoopMode|GetStats|ClearStats|SetRTS|ClearRTS|GetCTS|SendBreak|GetBreak|TurnTxOn|TurnTxOff|TurnRxOn|TurnRxOff|ConnectPin|Main|SetOperationMode|GetDriverState]
PE_G_RTOSAdap_regCompInstance_PIT0_events=[OnCounterRestart|OnChannel0|OnChannel1|OnChannel2|OnChannel3|OnChannel4|OnChannel5|OnChannel6|OnChannel7]
PE_G_RTOSAdap_regCompInstance_PIT0_methods=[Init|Deinit|Enable|Disable|SetEventMask|GetEventMask|GetEventStatus|SelectInputFrequency|GetInputFrequencyReal|GetInputFrequency|SetPeriodTicks|GetPeriodTicks|ResetCounter|GetCounterValue|SetOffsetTicks|GetOffsetTicks|GetCaptureValue|SelectOutputAction|SelectCaptureEdge|ConnectPin|SetOperationMode|GetDriverState]
PE_G_RTOSAdap_regCompInstance_PTA4_events=[OnPortEvent|OnFieldEvent]
PE_G_RTOSAdap_regCompInstance_PTA4_methods=[Init|Deinit|SetEventMask|GetEventMask|SetPortEventCondition|GetPortEventStatus|SetFieldEventCondition|GetFieldEventStatus|SetPortValue|GetPortValue|GetPortOutputValue|ClearPortBits|SetPortBits|TogglePortBits|SetPortInputDirection|SetPortOutputDirection|SetFieldValue|GetFieldValue|GetFieldOutputValue|ClearFieldBits|SetFieldBits|ToggleFieldBits|SetFieldInputDirection|SetFieldOutputDirection|SetOperationMode|GetDriverState|ConnectPin]
PE_G_RTOSAdap_regCompInstance_USB_LDD_events=[OnDeviceReset|OnDeviceSpeedDetect|OnDeviceSuspend|OnDeviceResume|OnDeviceSetupPacket|OnDeviceSof|OnDeviceError|OnDevice1msTimer|OnHostDeviceDeattach|OnHostResetRecovery|OnHostResumeRecovery|OnHostError|OnHost1msTimer|OnOtgDevice|OnOtgHost|OnOtgStateChange|OnSignalChange]
PE_G_RTOSAdap_regCompInstance_USB_LDD_methods=[Init|Deinit|SetEventMask|GetEventMask|Enable|Disable|DeviceGetUsbStatus|DeviceSetUsbStatus|DeviceSetAddress|DeviceAssertResume|DeviceInitEndpoint|DeviceDeinitEndpoint|DeviceStallEndpoint|DeviceUnstallEndpoint|DeviceReadSetupData|DeviceSendData|DeviceRecvData|DeviceGetTransferStatus|DeviceCancelTransfer|HostGetPortState|HostSetPortState|HostGetFrameNumber|HostGetMicroFrameNumber|HostOpenPipe|HostClosePipe|HostSendSetup|HostSendData|HostRecvData|HostGetTransferStatus|HostCancelTransfer|OtgRegisterDevice|OtgRegisterHost|OtgCmd|SetSignal|ConnectPin|Main|SetOperationMode|GetDriverState]
PLLFLLSel=[1]
PLLFLLSel_Setting=[MCGPLLCLKDIV2]
SPI0_BaudRatePrescDiv=[1]
SPI0_BaudRatePrescDiv_Setting=[1]
SPI1_BaudRatePrescDiv=[1]
SPI1_BaudRatePrescDiv_Setting=[1]
SharedModules=[Kinetis\PE_Types.drv|Kinetis\PE_Error.drv|Kinetis\PE_Const.drv|Kinetis\IO_Map.drv]
SpeedModeList=[SpeedMode0]
SpeedModeNames=[SpeedMode0|SpeedMode1|SpeedMode2|SpeedMode3|SpeedMode4|SpeedMode5|SpeedMode6|SpeedMode7]
SystemPrescaler=[1]
SystemPrescaler_Setting=[1]
TPMClk=[1]
TPMClk_Setting=[PLLFLLSelDistr]
UART0_ClkSel=[1]
UART0_ClkSel_Setting=[PLLFLLSelDistr]
UART0_Divider=[4]
UART0_Divider_Setting=[4]
USB0_ClkSel=[1]
USB0_ClkSel_Setting=[USB0_PLLFLL0]
virtual_ADC0_TotalConversionPrescaler=[1]
virtual_ADC0_TotalConversionPrescaler_Setting=[1]

{{DEVELOPMENT}} --------(((DEBUGINFO)))--------.{{DEVELOPMENT}} 

