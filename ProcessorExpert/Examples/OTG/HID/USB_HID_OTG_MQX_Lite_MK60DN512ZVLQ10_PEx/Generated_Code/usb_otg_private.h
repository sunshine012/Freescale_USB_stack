/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : usb_otg_private.h
**     Project   : ProcessorExpert
**     Processor : MK60N512LQ100
**     Component : USB_OTG_STACK
**     Version   : Driver 01.00, CPU db: 3.00.001
**     Compiler  : CodeWarrior ARM C Compiler
**     Abstract  :
**     Settings  :
**     (c) Copyright <company/user-name>, 2011
**     http      : www.<company>.com
**     mail      : info@<company>.com
** ###################################################################*/
#ifndef USB_OTG_PRIVATE_H_
#define USB_OTG_PRIVATE_H_
#include "mqx_tasks.h"
#include "lwevent.h"
#include "mqxlite.h"
enum { srp_not_started , srp_se0 , srp_dp_puls};
#define OTG_STATUS_BM_REQ_TYPE  0x80
#define OTG_STATUS_SELECTOR     0xF000

/* USB register access macro */
#define USB_OTG_REG(dev_num, REG)    (REG)
#define USB_OTG_USB_ON(dev_num) ((CTL & (CTL_USB_EN_SOF_EN_MASK | CTL_HOST_MODE_EN_MASK ))?(TRUE):(FALSE))
typedef struct usb_otg_status
{
    uint_8              id;                      /* Current ID state */
    uint_8              vbus_valid;              /* V_BUS_VALID status */
    uint_8              sess_valid;              /* SESS_VALID status */
    uint_8              sess_end;                /* SESS_END status */
    uint_16             ms_since_line_changed;
    uint_16             host_req_poll_timer;
    uint_8              line_stable;
    uint_8              tmr_1ms;
    uint_8              live_se0;
    uint_8              live_jstate;
    uint_8              srp_support;             /* Session Request Protocol */
    uint_8              hnp_support;             /* Host Negotiation Protocol */

    uint_8              b_timeout_en;
    uint_16             b_timeout;               /* SRP detect timeout*/
    uint_8              a_conn;                  /* A-device connected */
    uint_8              a_bus_drop;              /* determines A state machine behavior */
    uint_8              a_bus_req;               /* determines A state machine behavior */
    uint_8              a_clr_err;               /* setting this to TRUE is one way to escape from the a_vbus_err state */
    uint_8              b_conn;                  /* B-device connected */
    uint_16             b_conn_dbnc_time;        /* debounce time */
    uint_8              a_set_b_hnp_en;          /* HNP status */
    uint_8              a_srp_det;               /* SRP pulls detected */
    uint_8              a_srp_det_state;
    uint_16             a_srp_pulse_duration;
    uint_8              hnp_req;                 /* B device HNP request */

}USB_OTG_STATUS;

/* Public types */
typedef struct usb_otg_struct
{
    uint_8                  deviceNumber;       /* Current USB device number */
    uint_32                 deviceState;        /* Current device state (A or B) */
    uint_32                 subState;           /* Current SM sub-state */
    uint_8                  srpRequest;         /* SRP was requested by application (B device) */
    uint_8                  busRequest;         /* HNP was requested by application (B device) */
    uint_8                  busRelease;         /* USB bus released (B device) */
    uint_8                  powerUp;
    uint_8                  hnpEnabled;

    USB_OTG_STATUS          otg_status;
    DEV_INSTANCE_PTR        dev_inst_ptr;

    uint_8                  pending_ext_isr;    /* An interrupt from the external OTG circuit is currently pending */
    LWEVENT_STRUCT          otg_app_event;      /* The app event signaled internally. Bases on this, the application callback is called */
    LWEVENT_STRUCT          otg_isr_event;
    _task_id                otg_task_id;        /* otg task id */
    OTG_INIT_STRUCT         *init_struct;       /* Application initialization structure containing also external circuit access functions */
    otg_event_callback      callback;           /* Application registered callback function */
}USB_OTG_STRUCT;
/* Internal method prototypes */
#endif /* USB_OTG_PRIVATE_H_ */
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.0 [05.03]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
