MEMORY {
	m_interrupts  (RX) : ORIGIN = 0x1FFF0000, LENGTH = 0x000001E8
	m_dqh		  (RW) : ORIGIN = 0x1FFF01E8, LENGTH = 0x200
	m_dtd		  (RW) : ORIGIN = 0x1FFF03E8, LENGTH = 0x500
	m_text        (RX) : ORIGIN = 0x1FFF08E8, LENGTH = 0x00020000-0x000001E8-0x00000700
	m_data        (RW) : ORIGIN = AFTER(m_text), LENGTH = 0x00010000
}

KEEP_SECTION { .vectortable }
KEEP_SECTION { .usb_dqh }
KEEP_SECTION { .usb_dtd }

SECTIONS {
	.interrupts : {
		___VECTOR_RAM = .;
	    * (.vectortable)
	    . = ALIGN (0x4);
	} > m_interrupts

	.app_text: {
		ALIGNALL(4);
	   	* (.init)	
	   	* (.text)
			.= ALIGN(0x8) ;
	} > m_text

	.usb_dqh_sec: {
		ALIGNALL(4);
		* (.usb_dqh)
	} > m_dqh

	.usb_dtd_sec: {
		ALIGNALL(4);
		* (.usb_dtd)
	} > m_dtd

	.app_data: {
	   	* (.rodata)
	   	* (.sdata)
	   	* (.data)
			.= ALIGN(0x4) ;
	   	*(.ARM.extab)
			.= ALIGN(0x4) ;
	       __exception_table_start__ = .;
	   	EXCEPTION
	       __exception_table_end__ = .;
			.= ALIGN(0x4) ;
	       __sinit__ = .;
	   	STATICINIT
			.= ALIGN(0x4) ;
			__START_BSS = .;
			* (.bss)
			__END_BSS = .;
			.= ALIGN(0x8) ;
	} > m_data
	__S_romp = 0;
	__SP_INIT = . + 0x00008000;
	__heap_addr = __SP_INIT;
	__heap_size = 0x00008000;
}