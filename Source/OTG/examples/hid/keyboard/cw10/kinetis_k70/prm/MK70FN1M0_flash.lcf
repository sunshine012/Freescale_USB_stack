MEMORY {
	# FLASH: 1M(0x100000)
	m_interrupts  (RX) : ORIGIN = 0x00000000, LENGTH = 0x000001E8
	m_text        (RX) : ORIGIN = 0x00000800, LENGTH = 0x00100000-0x00000800
	# RAM: 128K(0x20000)
	m_dqh		  (RW) : ORIGIN = 0x1FFF0000, LENGTH = 0x200
	m_dtd		  (RW) : ORIGIN = 0x1FFF0200, LENGTH = 0x500
	#m_bdt		  (RW) : ORIGIN = 0x1FFF0700, LENGTH = 0x200
	m_data        (RW) : ORIGIN = 0x1FFF0700, LENGTH = 0x00020000-0x200-0x500
	#m_data        (RW) : ORIGIN = 0x1FFF0000, LENGTH = 0x00020000
}

KEEP_SECTION { .vectortable }
KEEP_SECTION { .usb_dqh }
KEEP_SECTION { .usb_dtd }
#KEEP_SECTION { .usb_bdt }

SECTIONS {
	.interrupts: {
		___VECTOR_RAM = .;
	    * (.vectortable)
	    . = ALIGN (0x4);
	} > m_interrupts

	.app_text: {
		ALIGNALL(4);
	   	* (.init)	
	   	* (.text)
			.= ALIGN(0x8) ;
		* (.rodata)
			.= ALIGN(0x4) ;
	    ___ROM_AT = .;
	} > m_text

	# USB FS buffer descriptor table memory
#	.usb_bdt_sec: {
#		___BDT = .;
#		* (.usb_bdt)
#		. = ALIGN(0x4);
#	} > m_bdt

	#USB HS
	.usb_dqh_sec: {
		ALIGNALL(4);
		* (.usb_dqh)
	} > m_dqh
	
	#USB HS
	.usb_dtd_sec: {
		ALIGNALL(4);
		* (.usb_dtd)
	} > m_dtd

	.app_data: AT(___ROM_AT){
	   	* (.sdata)
	   	* (.data)
			.= ALIGN(0x4) ;
	   	*(.ARM.extab)
			.= ALIGN(0x4) ;
	       __exception_table_start__ = .;
	   	EXCEPTION
	       __exception_table_end__ = .;
			.= ALIGN(0x4) ;
	       __sinit__ = .;
	   	STATICINIT
		.= ALIGN(0x8) ;
	} > m_data

	.bss: {
		.= ALIGN(0x4) ;
		__START_BSS = .;
		* (.bss)
		__END_BSS = .;
		.= ALIGN(0x8) ;
	} >> m_data
	
	_romp_at = ___ROM_AT + SIZEOF(.app_data);
	.romp : AT(_romp_at){
	    __S_romp = _romp_at;
	    WRITEW(___ROM_AT);
	    WRITEW(ADDR(.app_data));
	    WRITEW(SIZEOF(.app_data));
	    WRITEW(0);
	    WRITEW(0);
	    WRITEW(0);
	}

	#__SP_INIT = . + 0x00008000;	# 32K
	__SP_INIT = . + 0x00002000;		# 8K
	_SP_INIT = __SP_INIT;
	__heap_addr = __SP_INIT;
	#__heap_size = 0x00008000;		# 32K
	__heap_size = 0x0000D000;		# 52K
	__HEAP_START = __heap_addr;
	__HEAP_END = __heap_addr + __heap_size;
	__mem_limit = __HEAP_END;
	__stack_safety = 16;
}